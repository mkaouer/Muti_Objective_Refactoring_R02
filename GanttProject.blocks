start b1
Attribute(GanttTXTOpen,area,GanttGraphicArea,N,package);
Attribute(GanttTXTOpen,myTaskManager,TaskManager,N,private);
Attribute(GanttTXTOpen,prj,GanttProject,N,package);
Attribute(GanttTXTOpen,treePanel,GanttTree,N,package);
Class(GanttTXTOpen,N,N,public);
Method(GanttTXTOpen,GanttTXTOpen,N,Y,N,N,public);
Method(GanttTXTOpen,load,boolean,Y,N,N,public);
Parameter(GanttProject,importcbk,openerGanttTXTOpen,local);
Parameter(GanttTXTOpen,GanttTXTOpen,appli,GanttProject,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,gra,GanttGraphicArea,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,taskManager,TaskManager,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,tree,GanttTree,declaration);
Parameter(GanttTXTOpen,load,brBufferedReader,local);
Parameter(GanttTXTOpen,load,f,File,declaration);
Parameter(GanttTXTOpen,load,sTaskNameString,local);
Parameter(GanttTXTOpen,load,taskGanttTask,local);
Relation(GanttProject;importcbk;load,GanttTXTOpen,File);
Relation(GanttTXTOpen;load;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttTXTOpen;load;createTask,TaskManager,N);
Relation(GanttTXTOpen;load;equals,String,Object);
Relation(GanttTXTOpen;load;getTaskColor,GanttGraphicArea,N);
Relation(GanttTXTOpen;load;readLine,BufferedReader,N);
Relation(GanttTXTOpen;load;ready,BufferedReader,N);
Relation(GanttTXTOpen;load;registerTask,TaskManager,Task);
Relation(GanttTXTOpen;load;setColor,TaskImpl,Color);
Relation(GanttTXTOpen;load;setLength,GanttTask,int);
Relation(GanttTXTOpen;load;setName,TaskImpl,String);
end b1
start b2
Attribute(GanttCSVExport,prjInfos,PrjInfos,N,private);
Attribute(GanttProject,prjInfos,PrjInfos,N,public);
Attribute(GanttXFIGSaver,prjInfos,PrjInfos,N,private);
Attribute(PrjInfos,_sDescription,String,N,public);
Attribute(PrjInfos,_sOrganization,String,N,public);
Attribute(PrjInfos,_sProjectName,String,N,public);
Attribute(PrjInfos,_sWebLink,String,N,public);
Class(PrjInfos,N,N,public);
Method(NewProjectWizard,createNewProject,PrjInfos,Y,N,N,public);
Method(PrjInfos,PrjInfos,N,N,N,N,public);
Method(PrjInfos,PrjInfos,N,Y,N,N,public);
Method(PrjInfos,getDescription,String,N,N,N,public);
Method(PrjInfos,getName,String,N,N,N,public);
Method(PrjInfos,getOrganization,String,N,N,N,public);
Method(PrjInfos,getWebLink,String,N,N,N,public);
Parameter(GanttCSVExport,GanttCSVExport,prjInfos,PrjInfos,declaration);
Parameter(GanttHTMLExport,save,prjInfos,PrjInfos,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,prjInfos,PrjInfos,declaration);
Parameter(PrjInfos,PrjInfos,sDescription,String,declaration);
Parameter(PrjInfos,PrjInfos,sOrganization,String,declaration);
Parameter(PrjInfos,PrjInfos,sProjectName,String,declaration);
Parameter(PrjInfos,PrjInfos,sWebLink,String,declaration);
Relation(GanttHTMLExport;save;getDescription,PrjInfos,N);
Relation(GanttHTMLExport;save;getName,PrjInfos,N);
Relation(GanttHTMLExport;save;getOrganization,PrjInfos,N);
Relation(GanttHTMLExport;save;getWebLink,PrjInfos,N);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;getDescription;getDescription,PrjInfos,N);
Relation(GanttProject;getOrganization;getOrganization,PrjInfos,N);
Relation(GanttProject;getWebLink;getWebLink,PrjInfos,N);
end b2
start b3
Attribute(DeprecatedProjectExportData,myExportOptions,GanttExportSettings,N,package);
Attribute(DeprecatedProjectExportData,myFilename,String,N,package);
Attribute(DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,N,package);
Attribute(DeprecatedProjectExportData,myProject,GanttProject,N,package);
Attribute(DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,N,package);
Attribute(DeprecatedProjectExportData,myTree,GanttTree,N,package);
Attribute(DeprecatedProjectExportData,myXslFoScript,String,N,package);
Class(DeprecatedProjectExportData,N,N,public);
Method(DeprecatedProjectExportData,DeprecatedProjectExportData,N,Y,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myExportOptions,GanttExportSettings,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myFilename,String,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myProject,GanttProject,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myTree,GanttTree,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myXslFoScript,String,declaration);
Parameter(GanttProject,doExport,exportDataDeprecatedProjectExportData,local);
Parameter(PDFExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Parameter(ProjectExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Relation(GanttProject;doExport;doExport,ProjectExportProcessor,DeprecatedProjectExportData);
end b3
start b4
Attribute(NewProjectWizard,myMainFrame,JFrame,N,private);
Class(NewProjectWizard,N,N,public);
Method(NewProjectWizard,NewProjectWizard,N,Y,N,N,public);
Method(NewProjectWizard,createNewProject,PrjInfos,Y,N,N,public);
Parameter(GanttProject,showNewProjectWizard,wizardNewProjectWizard,local);
Parameter(NewProjectWizard,NewProjectWizard,mainFrame,JFrame,declaration);
Parameter(NewProjectWizard,createNewProject,newProjectWizardNewProjectWizardWindow,local);
Parameter(NewProjectWizard,createNewProject,project,IGanttProject,declaration);
Parameter(NewProjectWizard,createNewProject,roleSetsRoleSet[],local);
Relation(GanttProject;showNewProjectWizard;createNewProject,NewProjectWizard,IGanttProject);
Relation(NewProjectWizard;createNewProject;addProjectNamePage,NewProjectWizardWindow,IGanttProject);
Relation(NewProjectWizard;createNewProject;addRoleSetPage,NewProjectWizardWindow,RoleSet[]);
Relation(NewProjectWizard;createNewProject;getRoleManager,IGanttProject,N);
Relation(NewProjectWizard;createNewProject;getRoleSets,RoleManager,N);
Relation(NewProjectWizard;createNewProject;show,WizardImpl,N);
end b4
start b5
Attribute(GanttApplet,button,JButton,N,private);
Attribute(GanttApplet,fileLocation,String,N,private);
Class(GanttApplet,N,N,public);
Generalisation(GanttApplet,JApplet);
Method(GanttApplet,GanttApplet,N,N,N,N,public);
Method(GanttApplet,actionPerformed,void,Y,N,N,public);
Method(GanttApplet,createContainer,Container,N,N,N,private);
Method(GanttApplet,init,void,N,N,N,public);
Method(GanttApplet,main,void,Y,N,static,public);
Parameter(GanttApplet,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttApplet,actionPerformed,ganttFrameGanttProject,local);
Parameter(GanttApplet,actionPerformed,inSInputStream,local);
Parameter(GanttApplet,actionPerformed,urlURL,local);
Parameter(GanttApplet,createContainer,panelJPanel,local);
Parameter(GanttApplet,init,fileLocationParamString,local);
Parameter(GanttApplet,main,appletGanttApplet,local);
Parameter(GanttApplet,main,args,String[],declaration);
Parameter(GanttApplet,main,frameJFrame,local);
Relation(GanttApplet;actionPerformed;getCodeBase,Applet,N);
Relation(GanttApplet;actionPerformed;getInputStream,URLConnection,N);
Relation(GanttApplet;actionPerformed;openConnection,URL,N);
Relation(GanttApplet;actionPerformed;openXMLStream,GanttProject,InputStream-String);
Relation(GanttApplet;actionPerformed;printStackTrace,Throwable,N);
Relation(GanttApplet;actionPerformed;setVisible,Window,boolean);
Relation(GanttApplet;actionPerformed;toString,URL,N);
Relation(GanttApplet;createContainer;add,Container,Component);
Relation(GanttApplet;createContainer;addActionListener,AbstractButton,ActionListener);
Relation(GanttApplet;init;createContainer,GanttApplet,N);
Relation(GanttApplet;init;getParameter,Applet,String);
Relation(GanttApplet;init;setContentPane,JApplet,Container);
Relation(GanttApplet;main;createContainer,GanttApplet,N);
Relation(GanttApplet;main;pack,Window,N);
Relation(GanttApplet;main;setContentPane,JFrame,Container);
Relation(GanttApplet;main;setDefaultCloseOperation,JFrame,int);
Relation(GanttApplet;main;setVisible,Window,boolean);
end b5
start b6
Class(MutableTaskDependencyCollection,N,N,public);
Method(MutableTaskDependencyCollection,clear,void,N,N,N,package);
Method(MutableTaskDependencyCollection,createDependency,TaskDependency,Y,N,N,package);
Method(MutableTaskDependencyCollection,deleteDependency,void,Y,N,N,package);
Parameter(MutableTaskDependencyCollection,createDependency,dependant,Task,declaration);
Parameter(MutableTaskDependencyCollection,createDependency,dependee,Task,declaration);
Parameter(MutableTaskDependencyCollection,deleteDependency,dependency,TaskDependency,declaration);
Relation(DependencyTableModel;createDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;updateDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTagHandler;parsingFinished;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttGraphicArea;GanttGraphicArea;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttProject;linkRelationships;createDependency,MutableTaskDependencyCollection,Task-Task);
end b6
start b7
Attribute(ResourceAssignmentCollectionImpl,myAssignment,ResourceAssignment,N,private);
Class(ResourceAssignment,N,N,public);
Method(MutableResourceAssignmentCollection,addAssignment,ResourceAssignment,Y,N,N,package);
Method(ResourceAssignment,delete,void,N,N,N,package);
Method(ResourceAssignment,getLoad,float,N,N,N,package);
Method(ResourceAssignment,getResource,ProjectResource,N,N,N,package);
Method(ResourceAssignment,getTask,Task,N,N,N,package);
Method(ResourceAssignment,setLoad,void,Y,N,N,package);
Method(ResourceAssignmentCollection,getAssignment,ResourceAssignment,Y,N,N,package);
Method(ResourceAssignmentCollectionImpl,addAssignment,ResourceAssignment,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,auxAddAssignment,ResourceAssignment,Y,N,N,private);
Method(ResourceAssignmentCollectionImpl,getAssignment,ResourceAssignment,Y,N,N,public);
Parameter(AllocationTagHandler,loadAllocation,assignmentResourceAssignment,local);
Parameter(GanttXMLSaver,writeAllocations,nextResourceAssignment,local);
Parameter(ResourceAssignment,setLoad,load,float,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,copyResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,nextResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,commit,resultResourceAssignment,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,nextResourceAssignment,local);
Parameter(ResourcesTableModel,createAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,getValueAt,assignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,updateTargetResourceAssignment,local);
Relation(AllocationTagHandler;loadAllocation;setLoad,ResourceAssignment,float);
Relation(GanttCSVExport;getAssignments;getResource,ResourceAssignment,N);
Relation(GanttGraphicArea;paintResources;getResource,ResourceAssignment,N);
Relation(GanttHTMLExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttPDFExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttTree;getToolTip;getResource,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getLoad,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;MutationInfo;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;addAssignment;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;auxAddAssignment;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;commit;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;commit;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;equals;getResource,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getLoad,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;createAssignment;setLoad,ResourceAssignment,float);
Relation(ResourcesTableModel;getValueAt;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;getValueAt;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;delete,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;setLoad,ResourceAssignment,float);
end b7
start b8
Attribute(GanttChartExportData,myExportSettings,GanttExportSettings,N,package);
Attribute(GanttChartExportData,myImageFormat,String,N,package);
Attribute(GanttChartExportData,myOutputFile,File,N,package);
Class(GanttChartExportData,N,N,public);
Method(GanttChartExportData,GanttChartExportData,N,Y,N,N,public);
Parameter(GanttChartExportData,GanttChartExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(GanttChartExportData,GanttChartExportData,myImageFormat,String,declaration);
Parameter(GanttChartExportData,GanttChartExportData,myOutputFile,File,declaration);
Parameter(GanttChartExportProcessor,run,exportData,GanttChartExportData,declaration);
Parameter(PDFExportProcessor,exportGanttChart,chartExportDataGanttChartExportData,local);
Relation(PDFExportProcessor;exportGanttChart;run,GanttChartExportProcessor,GanttChartExportData);
end b8
start b9
Attribute(GanttProject,myCachedFacade,TaskContainmentHierarchyFacadeImpl,N,private);
Class(TaskContainmentHierarchyFacadeImpl,N,static,private);
end b9
start b10
Attribute(CSVSettingsPanel,appli,GanttProject,N,private);
Attribute(CSVSettingsPanel,bComa,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bDotComa,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bDoubleDot,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bFixedSize,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bOther,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bSeparatedText,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bSpace,JRadioButton,N,package);
Attribute(CSVSettingsPanel,cbEndDate,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResID,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResMail,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResName,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResPhone,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResRole,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbStartDate,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskDuration,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskID,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskName,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskNotes,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskPercent,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskResources,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskWebLink,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTextSeparator,JComboBox,N,package);
Attribute(CSVSettingsPanel,tfOther,JTextField,N,package);
Class(CSVSettingsPanel,N,N,public);
Generalisation(CSVSettingsPanel,GeneralOptionPanel);
Method(CSVSettingsPanel,CSVSettingsPanel,N,Y,N,N,public);
Method(CSVSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(CSVSettingsPanel,addUsingGBL,void,Y,N,N,private);
Method(CSVSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(CSVSettingsPanel,enableSeparatedButton,void,Y,N,N,public);
Method(CSVSettingsPanel,getFixed,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceID,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceMail,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceName,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourcePhone,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceRole,boolean,N,N,N,public);
Method(CSVSettingsPanel,getSeparat,String,N,N,N,public);
Method(CSVSettingsPanel,getTaskDuration,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskED,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskID,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskName,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskNotes,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskPercent,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskResources,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskSD,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskWebLink,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTextSeparat,String,N,N,N,public);
Method(CSVSettingsPanel,initialize,void,N,N,N,public);
Method(CSVSettingsPanel,separatCharHasChange,boolean,N,N,N,public);
Method(CSVSettingsPanel,unselectOther,void,Y,N,N,public);
Parameter(CSVSettingsPanel,CSVSettingsPanel,fixedPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,gbcGridBagConstraints,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,genePanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblResFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblSeparatedFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblTaskFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,parent,GanttProject,declaration);
Parameter(CSVSettingsPanel,CSVSettingsPanel,resFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,resPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,separatedPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,separatorFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,taskFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,taskPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,textSeparatorFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(CSVSettingsPanel,actionPerformed,selectedButtonJRadioButton,local);
Parameter(CSVSettingsPanel,addUsingGBL,component,Component,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,container,Container,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,gbc,GridBagConstraints,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,h,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,w,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,x,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,y,int,declaration);
Parameter(CSVSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(CSVSettingsPanel,applyChanges,csvOptionsCSVOptions,local);
Parameter(CSVSettingsPanel,enableSeparatedButton,enabled,boolean,declaration);
Parameter(CSVSettingsPanel,initialize,bfixedboolean,local);
Parameter(CSVSettingsPanel,initialize,sSeparatedCharString,local);
Parameter(CSVSettingsPanel,separatCharHasChange,csvOptionsCSVOptions,local);
Parameter(CSVSettingsPanel,unselectOther,selectedButton,JRadioButton,declaration);
Relation(CSVSettingsPanel;CSVSettingsPanel;add,Container,Component);
Relation(CSVSettingsPanel;CSVSettingsPanel;add,Container,Component-Object);
Relation(CSVSettingsPanel;CSVSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(CSVSettingsPanel;CSVSettingsPanel;addUsingGBL,CSVSettingsPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(CSVSettingsPanel;CSVSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(CSVSettingsPanel;CSVSettingsPanel;correctLabel,GanttProject,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getFont,Component,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getFontName,Font,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getInstance,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getSeparatedTextChars,CSVOptions,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getSize,Font,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getText,GanttLanguage,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;setFont,JComponent,Font);
Relation(CSVSettingsPanel;actionPerformed;enableSeparatedButton,CSVSettingsPanel,boolean);
Relation(CSVSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(CSVSettingsPanel;actionPerformed;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;actionPerformed;setSelected,AbstractButton,boolean);
Relation(CSVSettingsPanel;actionPerformed;unselectOther,CSVSettingsPanel,JRadioButton);
Relation(CSVSettingsPanel;addUsingGBL;add,Container,Component-Object);
Relation(CSVSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(CSVSettingsPanel;applyChanges;equals,String,Object);
Relation(CSVSettingsPanel;applyChanges;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;applyChanges;getFixed,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;applyChanges;getResourceID,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceMail,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceName,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourcePhone,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceRole,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getSeparat,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskDuration,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskED,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskID,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskName,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskNotes,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskPercent,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskResources,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskSD,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskWebLink,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTextSeparat,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;separatCharHasChange,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;enableSeparatedButton;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;enableSeparatedButton;setEnabled,AbstractButton,boolean);
Relation(CSVSettingsPanel;enableSeparatedButton;setEnabled,JComponent,boolean);
Relation(CSVSettingsPanel;getFixed;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceID;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceMail;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceName;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourcePhone;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceRole;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getSeparat;getText,JTextComponent,N);
Relation(CSVSettingsPanel;getSeparat;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskDuration;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskED;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskID;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskName;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskNotes;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskPercent;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskResources;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskSD;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskWebLink;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTextSeparat;getSelectedIndex,JComboBox,N);
Relation(CSVSettingsPanel;initialize;enableSeparatedButton,CSVSettingsPanel,boolean);
Relation(CSVSettingsPanel;initialize;equals,String,Object);
Relation(CSVSettingsPanel;initialize;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;initialize;setSelected,AbstractButton,boolean);
Relation(CSVSettingsPanel;initialize;setSelectedIndex,JComboBox,int);
Relation(CSVSettingsPanel;initialize;setText,JTextComponent,String);
Relation(CSVSettingsPanel;initialize;unselectOther,CSVSettingsPanel,JRadioButton);
Relation(CSVSettingsPanel;separatCharHasChange;equals,String,Object);
Relation(CSVSettingsPanel;separatCharHasChange;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;separatCharHasChange;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;separatCharHasChange;getText,JTextComponent,N);
Relation(CSVSettingsPanel;separatCharHasChange;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;unselectOther;setEnabled,JComponent,boolean);
Relation(CSVSettingsPanel;unselectOther;setSelected,AbstractButton,boolean);
end b10
start b11
Attribute(GanttDialogCalendar,panelDate,GanttPanelDate,N,private);
Attribute(GanttDialogDate,panel,GanttPanelDate,N,private);
Attribute(GanttPanelDate,date,GanttCalendar,N,public);
Attribute(GanttPanelDate,ddd,GanttDialogDateDay,N,private);
Attribute(GanttPanelDate,jbNextMonth,JButton,N,private);
Attribute(GanttPanelDate,jbNextYear,JButton,N,private);
Attribute(GanttPanelDate,jbPrevMonth,JButton,N,private);
Attribute(GanttPanelDate,jbPrevYear,JButton,N,private);
Attribute(GanttPanelDate,jtDate,JFormattedTextField,N,private);
Attribute(GanttPanelDate,language,GanttLanguage,N,package);
Attribute(GanttPanelDate,language,GanttLanguage,N,private);
Attribute(GanttPanelDate,save,GanttCalendar,N,private);
Class(GanttPanelDate,N,N,public);
Generalisation(GanttPanelDate,JPanel);
Method(GanttPanelDate,GanttDialogDateDay,N,Y,N,N,public);
Method(GanttPanelDate,GanttPanelDate,N,Y,N,N,public);
Method(GanttPanelDate,actionPerformed,void,Y,N,N,public);
Method(GanttPanelDate,cancel,void,N,N,N,public);
Method(GanttPanelDate,changeDate,void,Y,N,N,private);
Method(GanttPanelDate,clickFunction,void,Y,N,N,public);
Method(GanttPanelDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttPanelDate,getPreferredSize,Dimension,N,N,N,public);
Method(GanttPanelDate,mousePressed,void,Y,N,N,public);
Method(GanttPanelDate,paintComponent,void,Y,N,N,public);
Method(GanttPanelDate,rollDate,void,Y,N,N,private);
Parameter(GanttPanelDate,GanttDialogDateDay,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttDialogDateDay,language,GanttLanguage,declaration);
Parameter(GanttPanelDate,GanttDialogDateDay,mlMouseListener,local);
Parameter(GanttPanelDate,GanttPanelDate,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttPanelDate,hb1Box,local);
Parameter(GanttPanelDate,GanttPanelDate,tmpGregorianCalendar,local);
Parameter(GanttPanelDate,GanttPanelDate,vb1Box,local);
Parameter(GanttPanelDate,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttPanelDate,changeDate,differentMonthboolean,local);
Parameter(GanttPanelDate,changeDate,newDate,GregorianCalendar,declaration);
Parameter(GanttPanelDate,clickFunction,Xint,local);
Parameter(GanttPanelDate,clickFunction,Yint,local);
Parameter(GanttPanelDate,clickFunction,dString,local);
Parameter(GanttPanelDate,clickFunction,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,clickFunction,x,int,declaration);
Parameter(GanttPanelDate,clickFunction,y,int,declaration);
Parameter(GanttPanelDate,mousePressed,e,MouseEvent,declaration);
Parameter(GanttPanelDate,paintComponent,bleuColor,local);
Parameter(GanttPanelDate,paintComponent,dString,local);
Parameter(GanttPanelDate,paintComponent,dayWeekString[],local);
Parameter(GanttPanelDate,paintComponent,dwString,local);
Parameter(GanttPanelDate,paintComponent,g,Graphics,declaration);
Parameter(GanttPanelDate,paintComponent,grisColor,local);
Parameter(GanttPanelDate,paintComponent,sizexint,local);
Parameter(GanttPanelDate,paintComponent,sizeyint,local);
Parameter(GanttPanelDate,paintComponent,timeZoneTimeZone,local);
Parameter(GanttPanelDate,paintComponent,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,rollDate,amount,int,declaration);
Parameter(GanttPanelDate,rollDate,field,int,declaration);
Relation(GanttDialogDate;GanttDialogDate;cancel,GanttPanelDate,N);
Relation(GanttDialogDate;getDate;getDate,GanttPanelDate,N);
Relation(GanttPanelDate;GanttDialogDateDay;addMouseListener,Component,MouseListener);
Relation(GanttPanelDate;GanttDialogDateDay;clickFunction,GanttDialogDateDay,int-int);
Relation(GanttPanelDate;GanttDialogDateDay;getX,MouseEvent,N);
Relation(GanttPanelDate;GanttDialogDateDay;getY,MouseEvent,N);
Relation(GanttPanelDate;GanttPanelDate;Clone,GanttCalendar,N);
Relation(GanttPanelDate;GanttPanelDate;add,Container,Component);
Relation(GanttPanelDate;GanttPanelDate;add,Container,Component-Object);
Relation(GanttPanelDate;GanttPanelDate;addActionListener,AbstractButton,ActionListener);
Relation(GanttPanelDate;GanttPanelDate;addActionListener,JTextField,ActionListener);
Relation(GanttPanelDate;GanttPanelDate;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;GanttPanelDate;createHorizontalBox,Box,N);
Relation(GanttPanelDate;GanttPanelDate;createVerticalBox,Box,N);
Relation(GanttPanelDate;GanttPanelDate;getClass,Object,N);
Relation(GanttPanelDate;GanttPanelDate;getResource,Class<>,String);
Relation(GanttPanelDate;GanttPanelDate;getText,GanttLanguage,String);
Relation(GanttPanelDate;GanttPanelDate;getTime,Calendar,N);
Relation(GanttPanelDate;GanttPanelDate;getToolTip,GanttProject,String);
Relation(GanttPanelDate;GanttPanelDate;getValue,JFormattedTextField,N);
Relation(GanttPanelDate;GanttPanelDate;rollDate,GanttPanelDate,int-int);
Relation(GanttPanelDate;GanttPanelDate;setEditable,JTextComponent,boolean);
Relation(GanttPanelDate;GanttPanelDate;setTime,Calendar,Date);
Relation(GanttPanelDate;GanttPanelDate;setToolTipText,JComponent,String);
Relation(GanttPanelDate;GanttPanelDate;setValue,JFormattedTextField,Object);
Relation(GanttPanelDate;NgetInstance,GanttLanguage,N);
Relation(GanttPanelDate;cancel;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;changeDate;get,Calendar,int);
Relation(GanttPanelDate;changeDate;getTime,Calendar,N);
Relation(GanttPanelDate;changeDate;repaint,Component,N);
Relation(GanttPanelDate;changeDate;setTime,Calendar,Date);
Relation(GanttPanelDate;changeDate;setValue,JFormattedTextField,Object);
Relation(GanttPanelDate;clickFunction;Clone,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;clickFunction;equals,String,Object);
Relation(GanttPanelDate;clickFunction;getDay,GanttLanguage,int);
Relation(GanttPanelDate;clickFunction;getWidth,JComponent,N);
Relation(GanttPanelDate;clickFunction;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;go,GanttCalendar,int-int);
Relation(GanttPanelDate;clickFunction;repaint,Component,N);
Relation(GanttPanelDate;clickFunction;setDay,GanttCalendar,int);
Relation(GanttPanelDate;paintComponent;Clone,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;paintComponent;drawString,Graphics,String-int-int);
Relation(GanttPanelDate;paintComponent;equals,String,Object);
Relation(GanttPanelDate;paintComponent;fillRect,Graphics,int-int-int-int);
Relation(GanttPanelDate;paintComponent;getDSTSavings,TimeZone,N);
Relation(GanttPanelDate;paintComponent;getDate,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttLanguage,int);
Relation(GanttPanelDate;paintComponent;getDayWeekLanguage,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getHeight,JComponent,N);
Relation(GanttPanelDate;paintComponent;getMonth,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getTime,Calendar,N);
Relation(GanttPanelDate;paintComponent;getTimeZone,GregorianCalendar,N);
Relation(GanttPanelDate;paintComponent;getWidth,JComponent,N);
Relation(GanttPanelDate;paintComponent;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;go,GanttCalendar,int-int);
Relation(GanttPanelDate;paintComponent;inDaylightTime,TimeZone,Date);
Relation(GanttPanelDate;paintComponent;length,String,N);
Relation(GanttPanelDate;paintComponent;setColor,Graphics,Color);
Relation(GanttPanelDate;paintComponent;setDay,GanttCalendar,int);
Relation(GanttPanelDate;paintComponent;substring,String,int-int);
Relation(GanttPanelDate;rollDate;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;rollDate;getTime,Calendar,N);
Relation(GanttPanelDate;rollDate;repaint,Component,N);
Relation(GanttPanelDate;rollDate;setValue,JFormattedTextField,Object);
end b11
start b12
Attribute(GanttDialogDate,jbNextMonth,JButton,N,private);
Attribute(GanttDialogDate,jbNextYear,JButton,N,private);
Attribute(GanttDialogDate,jbPrevMonth,JButton,N,private);
Attribute(GanttDialogDate,jbPrevYear,JButton,N,private);
Attribute(GanttDialogDate,jtDate,JFormattedTextField,N,private);
Attribute(GanttDialogDate,language,GanttLanguage,N,private);
Attribute(GanttDialogDate,myFixedDate,boolean,N,private);
Attribute(GanttDialogDate,panel,GanttPanelDate,N,private);
Class(GanttDialogDate,N,N,public);
Generalisation(GanttDialogDate,JDialog);
Method(GanttDialogDate,GanttDialogDate,N,Y,N,N,public);
Method(GanttDialogDate,actionPerformed,void,Y,N,N,public);
Method(GanttDialogDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttDialogDate,stateChanged,void,Y,N,N,public);
Parameter(GanttDialogDate,GanttDialogDate,cancelJButton,local);
Parameter(GanttDialogDate,GanttDialogDate,contentPaneJComponent,local);
Parameter(GanttDialogDate,GanttDialogDate,date,GanttCalendar,declaration);
Parameter(GanttDialogDate,GanttDialogDate,fixedDateJCheckBox,local);
Parameter(GanttDialogDate,GanttDialogDate,okJButton,local);
Parameter(GanttDialogDate,GanttDialogDate,pJPanel,local);
Parameter(GanttDialogDate,GanttDialogDate,parent,JDialog,declaration);
Parameter(GanttDialogDate,GanttDialogDate,showFixedDateCheckBox,boolean,declaration);
Parameter(GanttDialogDate,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogDate,getDate,resultGanttCalendar,local);
Parameter(GanttDialogDate,stateChanged,e,ChangeEvent,declaration);
Parameter(GanttDialogProperties,actionPerformed,ddGanttDialogDate,local);
Relation(GanttDialogDate;GanttDialogDate;add,Container,Component);
Relation(GanttDialogDate;GanttDialogDate;addActionListener,AbstractButton,ActionListener);
Relation(GanttDialogDate;GanttDialogDate;addChangeListener,AbstractButton,ChangeListener);
Relation(GanttDialogDate;GanttDialogDate;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogDate;GanttDialogDate;cancel,GanttPanelDate,N);
Relation(GanttDialogDate;GanttDialogDate;center,DialogAligner,JDialog-Container);
Relation(GanttDialogDate;GanttDialogDate;createVerticalBox,Box,N);
Relation(GanttDialogDate;GanttDialogDate;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getContentPane,JDialog,N);
Relation(GanttDialogDate;GanttDialogDate;getInstance,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getParent,Component,N);
Relation(GanttDialogDate;GanttDialogDate;getRootPane,JDialog,N);
Relation(GanttDialogDate;GanttDialogDate;getText,GanttLanguage,String);
Relation(GanttDialogDate;GanttDialogDate;isFixed,GanttCalendar,N);
Relation(GanttDialogDate;GanttDialogDate;isSelected,AbstractButton,N);
Relation(GanttDialogDate;GanttDialogDate;pack,Window,N);
Relation(GanttDialogDate;GanttDialogDate;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogDate;GanttDialogDate;setResizable,Dialog,boolean);
Relation(GanttDialogDate;GanttDialogDate;setSelected,AbstractButton,boolean);
Relation(GanttDialogDate;GanttDialogDate;setVisible,Dialog,boolean);
Relation(GanttDialogDate;NgetInstance,GanttLanguage,N);
Relation(GanttDialogDate;getDate;getDate,GanttPanelDate,N);
Relation(GanttDialogDate;getDate;setFixed,GanttCalendar,boolean);
Relation(GanttDialogProperties;actionPerformed;getDate,GanttDialogDate,N);
end b12
start b13
Attribute(GanttPrintable,image,BufferedImage,N,private);
Attribute(GanttPrintable,x,int,N,private);
Attribute(GanttPrintable,y,int,N,private);
Class(GanttPrintable,N,N,public);
Method(GanttPrintable,GanttPrintable,N,Y,N,N,public);
Method(GanttPrintable,print,int,Y,N,N,public);
Parameter(GanttPrintable,GanttPrintable,image,BufferedImage,declaration);
Parameter(GanttPrintable,print,cptint,local);
Parameter(GanttPrintable,print,g2dGraphics2D,local);
Parameter(GanttPrintable,print,graphics,Graphics,declaration);
Parameter(GanttPrintable,print,heightint,local);
Parameter(GanttPrintable,print,iint,local);
Parameter(GanttPrintable,print,imghint,local);
Parameter(GanttPrintable,print,imgwint,local);
Parameter(GanttPrintable,print,jint,local);
Parameter(GanttPrintable,print,pageFormat,PageFormat,declaration);
Parameter(GanttPrintable,print,pageIndex,int,declaration);
Parameter(GanttPrintable,print,widthint,local);
Relation(GanttPrintable;print;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(GanttPrintable;print;getHeight,BufferedImage,N);
Relation(GanttPrintable;print;getImageableHeight,PageFormat,N);
Relation(GanttPrintable;print;getImageableWidth,PageFormat,N);
Relation(GanttPrintable;print;getImageableX,PageFormat,N);
Relation(GanttPrintable;print;getImageableY,PageFormat,N);
Relation(GanttPrintable;print;getSubimage,BufferedImage,int-int-int-int);
Relation(GanttPrintable;print;getWidth,BufferedImage,N);
Relation(GanttPrintable;print;translate,Graphics2D,double-double);
end b13
start b14
Class(GanttTransferableTreePath,N,static,private);
end b14
start b15
Attribute(HttpDocumentOutputStream,webdavResource,WebdavResource,N,private);
Class(HttpDocumentOutputStream,N,N,package);
Generalisation(HttpDocumentOutputStream,ByteArrayOutputStream);
Method(HttpDocumentOutputStream,HttpDocumentOutputStream,N,Y,N,N,public);
Method(HttpDocumentOutputStream,close,void,N,N,N,public);
Parameter(HttpDocumentOutputStream,HttpDocumentOutputStream,webdavResource,WebdavResource,declaration);
Relation(HttpDocumentOutputStream;close;getMessage,Throwable,N);
Relation(HttpDocumentOutputStream;close;getReasonCode,URIException,N);
Relation(HttpDocumentOutputStream;close;putMethod,WebdavResource,byte[]);
Relation(HttpDocumentOutputStream;close;toByteArray,ByteArrayOutputStream,N);
end b15
start b16
Attribute(Shape,backgroundList,JPaintList,N,protected);
Attribute(Shape,foregroundList,JPaintList,N,protected);
Attribute(Shape,patternList,JPaintList,N,protected);
Class(JPaintList,N,N,public);
Generalisation(JPaintList,JList);
Method(JPaintList,JPaintList,N,Y,N,N,public);
Method(JPaintList,getSelectedPaint,Paint,N,N,N,public);
Parameter(JPaintList,JPaintList,list,Paint[],declaration);
Relation(JPaintList;JPaintList;setCellRenderer,JList,ListCellRenderer);
Relation(JPaintList;JPaintList;setSelectedIndex,JList,int);
Relation(JPaintList;getSelectedPaint;getSelectedValue,JList,N);
Relation(Shape;Shape;getSelectedPaint,JPaintList,N);
Relation(Shape;valueChanged;getSelectedPaint,JPaintList,N);
end b16
start b17
Attribute(GanttCSVExport,peop,GanttResourcePanel,N,private);
Attribute(GanttProject,resp,GanttResourcePanel,N,private);
Attribute(GanttResourcePanel,EMPTY_CONTEXT,ProjectResource[],N,private);
Attribute(GanttResourcePanel,appli,GanttProject,N,package);
Attribute(GanttResourcePanel,area,ResourceLoadGraphicArea,N,public);
Attribute(GanttResourcePanel,colums,ArrayList,N,public);
Attribute(GanttResourcePanel,cx,int,N,package);
Attribute(GanttResourcePanel,cy,int,N,package);
Attribute(GanttResourcePanel,data,ArrayList,N,public);
Attribute(GanttResourcePanel,lang,GanttLanguage,N,package);
Attribute(GanttResourcePanel,left,JPanel,N,package);
Attribute(GanttResourcePanel,model,GanttTableModel,N,package);
Attribute(GanttResourcePanel,myContext,ResourceContext,N,private);
Attribute(GanttResourcePanel,myResourceActionSet,ResourceActionSet,N,private);
Attribute(GanttResourcePanel,nbobj,int,N,package);
Attribute(GanttResourcePanel,scrollpane,JScrollPane,N,package);
Attribute(GanttResourcePanel,table,JTable,N,package);
Attribute(GanttResourcePanel,tree,GanttTree,N,package);
Attribute(GanttResourcePanel,vbar,JScrollBar,N,package);
Attribute(GanttXFIGSaver,peop,GanttResourcePanel,N,private);
Attribute(GanttXMLOpen,peop,GanttResourcePanel,N,package);
Attribute(GanttXMLSaver,peop,GanttResourcePanel,N,private);
Class(GanttResourcePanel,N,N,public);
Generalisation(GanttResourcePanel,AbstractTableModel);
Generalisation(GanttResourcePanel,JPanel);
Method(GanttProject,getResourcePanel,GanttResourcePanel,N,N,N,public);
Method(GanttResourcePanel,GanttResourcePanel,N,Y,N,N,public);
Method(GanttResourcePanel,GanttTableModel,N,Y,N,N,package);
Method(GanttResourcePanel,addHumans,void,Y,N,N,public);
Method(GanttResourcePanel,addRow,void,Y,N,N,public);
Method(GanttResourcePanel,adjustmentValueChanged,void,Y,N,N,public);
Method(GanttResourcePanel,changeLanguage,void,Y,N,N,public);
Method(GanttResourcePanel,changePeople,void,Y,N,N,public);
Method(GanttResourcePanel,createPopupMenu,void,Y,N,N,public);
Method(GanttResourcePanel,deleteHuman,void,Y,N,N,public);
Method(GanttResourcePanel,deleteRow,void,Y,N,N,public);
Method(GanttResourcePanel,deleteRows,void,Y,N,N,public);
Method(GanttResourcePanel,downResource,void,N,N,N,public);
Method(GanttResourcePanel,getColumnCount,int,N,N,N,public);
Method(GanttResourcePanel,getColumnName,String,Y,N,N,public);
Method(GanttResourcePanel,getContext,ResourceContext,N,N,N,public);
Method(GanttResourcePanel,getNameByNumber,String,Y,N,N,public);
Method(GanttResourcePanel,getPeople,ArrayList,N,N,N,public);
Method(GanttResourcePanel,getResources,ProjectResource[],N,N,N,public);
Method(GanttResourcePanel,getRowCount,int,N,N,N,public);
Method(GanttResourcePanel,getUserByNumber,HumanResource,Y,N,N,public);
Method(GanttResourcePanel,getValueAt,Object,Y,N,N,public);
Method(GanttResourcePanel,isCellEditable,boolean,Y,N,N,public);
Method(GanttResourcePanel,mousePressed,void,Y,N,N,public);
Method(GanttResourcePanel,moveDown,boolean,Y,N,N,public);
Method(GanttResourcePanel,moveUp,boolean,Y,N,N,public);
Method(GanttResourcePanel,nbPeople,int,N,N,N,public);
Method(GanttResourcePanel,newHuman,void,Y,N,N,public);
Method(GanttResourcePanel,propertiesHuman,void,Y,N,N,public);
Method(GanttResourcePanel,refresh,void,Y,N,N,public);
Method(GanttResourcePanel,reset,void,N,N,N,public);
Method(GanttResourcePanel,resourceAdded,void,Y,N,N,public);
Method(GanttResourcePanel,resourcesRemoved,void,Y,N,N,public);
Method(GanttResourcePanel,sendMail,void,Y,N,N,public);
Method(GanttResourcePanel,setPeople,void,Y,N,N,public);
Method(GanttResourcePanel,setResourceActions,void,Y,N,N,public);
Method(GanttResourcePanel,setTree,void,Y,N,N,public);
Method(GanttResourcePanel,upResource,void,N,N,N,public);
Method(GanttResourcePanel,updateRow,void,Y,N,N,public);
Parameter(GanttCSVExport,GanttCSVExport,peop,GanttResourcePanel,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,butGanttImagePanel,local);
Parameter(GanttResourcePanel,GanttResourcePanel,mlMouseListener,local);
Parameter(GanttResourcePanel,GanttResourcePanel,pPoint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,prj,GanttProject,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,selColint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,selRowint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,splitPaneJSplitPane,local);
Parameter(GanttResourcePanel,GanttResourcePanel,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,GanttTableModel,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,addHumans,humans,ArrayList,declaration);
Parameter(GanttResourcePanel,addRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,adjustmentValueChanged,e,AdjustmentEvent,declaration);
Parameter(GanttResourcePanel,changeLanguage,colsString[],local);
Parameter(GanttResourcePanel,changeLanguage,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,changePeople,list,ArrayList,declaration);
Parameter(GanttResourcePanel,createPopupMenu,menuJPopupMenu,local);
Parameter(GanttResourcePanel,createPopupMenu,resourceActionsAbstractAction[],local);
Parameter(GanttResourcePanel,createPopupMenu,x,int,declaration);
Parameter(GanttResourcePanel,createPopupMenu,y,int,declaration);
Parameter(GanttResourcePanel,deleteHuman,gdiGanttDialogInfo,local);
Parameter(GanttResourcePanel,deleteHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,deleteHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,deleteRow,row,int,declaration);
Parameter(GanttResourcePanel,deleteRows,deleted,ProjectResource[],declaration);
Parameter(GanttResourcePanel,deleteRows,deletedSetSet,local);
Parameter(GanttResourcePanel,deleteRows,nextDataObject,local);
Parameter(GanttResourcePanel,deleteRows,rowint,local);
Parameter(GanttResourcePanel,downResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,downResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,getColumnName,col,int,declaration);
Parameter(GanttResourcePanel,getNameByNumber,id,int,declaration);
Parameter(GanttResourcePanel,getNameByNumber,peopleHumanResource,local);
Parameter(GanttResourcePanel,getResources,resultProjectResource[],local);
Parameter(GanttResourcePanel,getUserByNumber,id,int,declaration);
Parameter(GanttResourcePanel,getValueAt,col,int,declaration);
Parameter(GanttResourcePanel,getValueAt,peopleHumanResource,local);
Parameter(GanttResourcePanel,getValueAt,row,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,columnIndex,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,rowIndex,int,declaration);
Parameter(GanttResourcePanel,mousePressed,e,MouseEvent,declaration);
Parameter(GanttResourcePanel,moveDown,objObject,local);
Parameter(GanttResourcePanel,moveDown,row,int,declaration);
Parameter(GanttResourcePanel,moveUp,objObject,local);
Parameter(GanttResourcePanel,moveUp,row,int,declaration);
Parameter(GanttResourcePanel,newHuman,people,HumanResource,declaration);
Parameter(GanttResourcePanel,propertiesHuman,dpGanttDialogPerson,local);
Parameter(GanttResourcePanel,propertiesHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,propertiesHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,refresh,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,reset,sizeint,local);
Parameter(GanttResourcePanel,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,sendMail,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,sendMail,peopleHumanResource,local);
Parameter(GanttResourcePanel,setPeople,list,ArrayList,declaration);
Parameter(GanttResourcePanel,setResourceActions,actionSet,ResourceActionSet,declaration);
Parameter(GanttResourcePanel,setTree,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,upResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,upResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,updateRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,updateRow,row,int,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,peop,GanttResourcePanel,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,resources,GanttResourcePanel,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,peop,GanttResourcePanel,declaration);
Relation(GanttCSVExport;beginToSave;getPeople,GanttResourcePanel,N);
Relation(GanttProject;actionPerformed;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;actionPerformed;sendMail,GanttResourcePanel,GanttProject);
Relation(GanttProject;addButtons;getContext,GanttResourcePanel,N);
Relation(GanttProject;addButtons;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;changeLanguage;refresh,GanttResourcePanel,GanttLanguage);
Relation(GanttProject;closeProject;reset,GanttResourcePanel,N);
Relation(GanttProject;downDatas;downResource,GanttResourcePanel,N);
Relation(GanttProject;downDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;downDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;getResourcePanel;setResourceActions,GanttResourcePanel,ResourceActionSet);
Relation(GanttProject;openXMLStream;reset,GanttResourcePanel,N);
Relation(GanttProject;refreshProjectInfos;nbPeople,GanttResourcePanel,N);
Relation(GanttProject;upDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;upDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;upDatas;upResource,GanttResourcePanel,N);
Relation(GanttResourcePanel;GanttResourcePanel;add,Container,Component-Object);
Relation(GanttResourcePanel;GanttResourcePanel;addAdjustmentListener,JScrollBar,AdjustmentListener);
Relation(GanttResourcePanel;GanttResourcePanel;addMouseListener,Component,MouseListener);
Relation(GanttResourcePanel;GanttResourcePanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttResourcePanel;GanttResourcePanel;columnAtPoint,JTable,Point);
Relation(GanttResourcePanel;GanttResourcePanel;createPopupMenu,GanttResourcePanel,int-int);
Relation(GanttResourcePanel;GanttResourcePanel;getButton,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getClickCount,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;GanttResourcePanel;getDefaultToolkit,Toolkit,N);
Relation(GanttResourcePanel;GanttResourcePanel;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;GanttResourcePanel;getPreferredSize,JComponent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getScreenSize,Toolkit,N);
Relation(GanttResourcePanel;GanttResourcePanel;getVerticalScrollBar,JScrollPane,N);
Relation(GanttResourcePanel;GanttResourcePanel;getViewport,JScrollPane,N);
Relation(GanttResourcePanel;GanttResourcePanel;getWidth,Dimension,N);
Relation(GanttResourcePanel;GanttResourcePanel;getX,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getY,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttResourcePanel;GanttResourcePanel;rowAtPoint,JTable,Point);
Relation(GanttResourcePanel;GanttResourcePanel;setBackground,JComponent,Color);
Relation(GanttResourcePanel;GanttResourcePanel;setDividerLocation,JSplitPane,int);
Relation(GanttResourcePanel;GanttResourcePanel;setLayout,Container,LayoutManager);
Relation(GanttResourcePanel;GanttResourcePanel;setLeftComponent,JSplitPane,Component);
Relation(GanttResourcePanel;GanttResourcePanel;setOneTouchExpandable,JSplitPane,boolean);
Relation(GanttResourcePanel;GanttResourcePanel;setPreferredSize,JComponent,Dimension);
Relation(GanttResourcePanel;GanttResourcePanel;setRightComponent,JSplitPane,Component);
Relation(GanttResourcePanel;GanttResourcePanel;setRowHeight,JTable,int);
Relation(GanttResourcePanel;GanttResourcePanel;setSelectionMode,JTable,int);
Relation(GanttResourcePanel;GanttTableModel;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;addHumans;get,ArrayList,int);
Relation(GanttResourcePanel;addHumans;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;addHumans;size,ArrayList,N);
Relation(GanttResourcePanel;addRow;add,ArrayList,Object);
Relation(GanttResourcePanel;addRow;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;addRow;size,ArrayList,N);
Relation(GanttResourcePanel;adjustmentValueChanged;getValue,AdjustmentEvent,N);
Relation(GanttResourcePanel;adjustmentValueChanged;repaint,Component,N);
Relation(GanttResourcePanel;adjustmentValueChanged;setScrollBar,ResourceLoadGraphicArea,int);
Relation(GanttResourcePanel;changeLanguage;add,ArrayList,Object);
Relation(GanttResourcePanel;changeLanguage;clear,ArrayList,N);
Relation(GanttResourcePanel;changeLanguage;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(GanttResourcePanel;changeLanguage;fireTableStructureChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;changeLanguage;getText,GanttLanguage,String);
Relation(GanttResourcePanel;changeLanguage;size,ArrayList,N);
Relation(GanttResourcePanel;changePeople;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;createPopupMenu;add,JPopupMenu,JMenuItem);
Relation(GanttResourcePanel;createPopupMenu;addSeparator,JPopupMenu,N);
Relation(GanttResourcePanel;createPopupMenu;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttResourcePanel;createPopupMenu;correctLabel,GanttProject,String);
Relation(GanttResourcePanel;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(GanttResourcePanel;createPopupMenu;getActions,ResourceActionSet,N);
Relation(GanttResourcePanel;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;createPopupMenu;getText,GanttLanguage,String);
Relation(GanttResourcePanel;createPopupMenu;getValue,JScrollBar,N);
Relation(GanttResourcePanel;createPopupMenu;show,JPopupMenu,Component-int-int);
Relation(GanttResourcePanel;deleteHuman;deleteRow,GanttTableModel,int);
Relation(GanttResourcePanel;deleteHuman;get,ArrayList,int);
Relation(GanttResourcePanel;deleteHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;deleteHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;deleteHuman;show,Dialog,N);
Relation(GanttResourcePanel;deleteHuman;size,ArrayList,N);
Relation(GanttResourcePanel;deleteHuman;toString,ProjectResource,N);
Relation(GanttResourcePanel;deleteRow;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;deleteRow;remove,ArrayList,int);
Relation(GanttResourcePanel;deleteRows;asList,Arrays,ProjectResource[]);
Relation(GanttResourcePanel;deleteRows;contains,Set,Object);
Relation(GanttResourcePanel;deleteRows;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;deleteRows;hasNext,Iterator,N);
Relation(GanttResourcePanel;deleteRows;iterator,ArrayList,N);
Relation(GanttResourcePanel;deleteRows;next,Iterator,N);
Relation(GanttResourcePanel;deleteRows;remove,Iterator,N);
Relation(GanttResourcePanel;downResource;changeSelection,JTable,int-int-boolean-boolean);
Relation(GanttResourcePanel;downResource;down,HumanResourceManager,int);
Relation(GanttResourcePanel;downResource;get,ArrayList,int);
Relation(GanttResourcePanel;downResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;downResource;moveDown,GanttTableModel,int);
Relation(GanttResourcePanel;downResource;println,PrintStream,String);
Relation(GanttResourcePanel;downResource;size,ArrayList,N);
Relation(GanttResourcePanel;getColumnCount;size,ArrayList,N);
Relation(GanttResourcePanel;getColumnName;get,ArrayList,int);
Relation(GanttResourcePanel;getNameByNumber;get,ArrayList,int);
Relation(GanttResourcePanel;getNameByNumber;getName,ProjectResource,N);
Relation(GanttResourcePanel;getResources;get,ArrayList,int);
Relation(GanttResourcePanel;getResources;size,ArrayList,N);
Relation(GanttResourcePanel;getRowCount;size,ArrayList,N);
Relation(GanttResourcePanel;getUserByNumber;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;getMail,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getName,ProjectResource,N);
Relation(GanttResourcePanel;getValueAt;getName,Role,N);
Relation(GanttResourcePanel;getValueAt;getPhone,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getRole,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;size,ArrayList,N);
Relation(GanttResourcePanel;moveDown;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveDown;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveDown;remove,ArrayList,int);
Relation(GanttResourcePanel;moveDown;size,ArrayList,N);
Relation(GanttResourcePanel;moveUp;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveUp;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveUp;remove,ArrayList,int);
Relation(GanttResourcePanel;nbPeople;size,ArrayList,N);
Relation(GanttResourcePanel;newHuman;addRow,GanttTableModel,HumanResource);
Relation(GanttResourcePanel;propertiesHuman;get,ArrayList,int);
Relation(GanttResourcePanel;propertiesHuman;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;propertiesHuman;getStatusBar,GanttProject,N);
Relation(GanttResourcePanel;propertiesHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;propertiesHuman;result,GanttDialogPerson,N);
Relation(GanttResourcePanel;propertiesHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;propertiesHuman;setFirstText,GanttStatusBar,String-int);
Relation(GanttResourcePanel;propertiesHuman;show,Dialog,N);
Relation(GanttResourcePanel;propertiesHuman;size,ArrayList,N);
Relation(GanttResourcePanel;propertiesHuman;updateRow,GanttTableModel,int-HumanResource);
Relation(GanttResourcePanel;refresh;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;reset;clear,ArrayList,N);
Relation(GanttResourcePanel;reset;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;reset;reset,GanttTableModel,N);
Relation(GanttResourcePanel;reset;size,ArrayList,N);
Relation(GanttResourcePanel;resourceAdded;getResource,ResourceEvent,N);
Relation(GanttResourcePanel;resourceAdded;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;resourcesRemoved;deleteRows,GanttTableModel,ProjectResource[]);
Relation(GanttResourcePanel;resourcesRemoved;getResources,ResourceEvent,N);
Relation(GanttResourcePanel;sendMail;displayURL,BrowserControl,String);
Relation(GanttResourcePanel;sendMail;get,ArrayList,int);
Relation(GanttResourcePanel;sendMail;getMail,HumanResource,N);
Relation(GanttResourcePanel;sendMail;println,PrintStream,Object);
Relation(GanttResourcePanel;sendMail;size,ArrayList,N);
Relation(GanttResourcePanel;setPeople;changePeople,GanttTableModel,ArrayList);
Relation(GanttResourcePanel;upResource;changeSelection,JTable,int-int-boolean-boolean);
Relation(GanttResourcePanel;upResource;get,ArrayList,int);
Relation(GanttResourcePanel;upResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;upResource;moveUp,GanttTableModel,int);
Relation(GanttResourcePanel;upResource;println,PrintStream,String);
Relation(GanttResourcePanel;upResource;size,ArrayList,N);
Relation(GanttResourcePanel;upResource;up,HumanResourceManager,int);
Relation(GanttResourcePanel;updateRow;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(GanttResourcePanel;updateRow;set,ArrayList,int-Object);
Relation(GanttXMLSaver;writeResources;getPeople,GanttResourcePanel,N);
end b17
start b18
Class(AbstractDocument,abstract,N,public);
Generalisation(AbstractURLDocument,AbstractDocument);
Generalisation(FileDocument,AbstractDocument);
Method(AbstractDocument,acquireLock,boolean,N,N,N,public);
Method(AbstractDocument,equals,boolean,Y,N,N,public);
Method(AbstractDocument,getFilePath,String,N,N,N,public);
Method(AbstractDocument,getLastError,String,N,N,N,public);
Method(AbstractDocument,getPassword,String,N,N,N,public);
Method(AbstractDocument,getURLPath,String,N,N,N,public);
Method(AbstractDocument,getUsername,String,N,N,N,public);
Method(AbstractDocument,releaseLock,void,N,N,N,public);
Method(AbstractDocument,setUserInfo,void,Y,N,N,public);
Parameter(AbstractDocument,equals,o,Object,declaration);
Parameter(AbstractDocument,setUserInfo,pass,String,declaration);
Parameter(AbstractDocument,setUserInfo,user,String,declaration);
Relation(AbstractDocument;equals;equals,String,Object);
Relation(AbstractDocument;equals;getPath,Document,N);
end b18
start b19
Attribute(HTMLSettingsPanel,appli,GanttProject,N,private);
Attribute(HTMLSettingsPanel,buttonXsl,JButton,N,package);
Attribute(HTMLSettingsPanel,cbDefault,JCheckBox,N,package);
Attribute(HTMLSettingsPanel,tfXsl,JTextField,N,package);
Class(HTMLSettingsPanel,N,N,public);
Generalisation(HTMLSettingsPanel,GeneralOptionPanel);
Method(HTMLSettingsPanel,HTMLSettingsPanel,N,Y,N,N,public);
Method(HTMLSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(HTMLSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(HTMLSettingsPanel,getXslDirectory,String,Y,N,N,public);
Method(HTMLSettingsPanel,initialize,void,N,N,N,public);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,defaultPanelJPanel,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,fcJFileChooser,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,htmlThemeJPanel,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,parent,GanttProject,declaration);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,returnValint,local);
Parameter(HTMLSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(HTMLSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(HTMLSettingsPanel,getXslDirectory,useDefault,boolean,declaration);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;add,Container,Component);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;add,Container,Component-Object);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;correctLabel,GanttProject,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getClass,Object,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getInstance,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getResource,Class<>,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getSelectedFile,JFileChooser,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getText,GanttLanguage,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getText,JTextComponent,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setApproveButtonToolTipText,JFileChooser,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setColumns,JTextField,int);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setDialogTitle,JFileChooser,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setEditable,JTextComponent,boolean);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setFileSelectionMode,JFileChooser,int);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setText,JTextComponent,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;showDialog,JFileChooser,Component-String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;toString,File,N);
Relation(HTMLSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(HTMLSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(HTMLSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(HTMLSettingsPanel;applyChanges;getXslDirectory,HTMLSettingsPanel,boolean);
Relation(HTMLSettingsPanel;applyChanges;isSelected,AbstractButton,N);
Relation(HTMLSettingsPanel;applyChanges;setXslDir,GanttOptions,String);
Relation(HTMLSettingsPanel;getXslDirectory;exists,File,N);
Relation(HTMLSettingsPanel;getXslDirectory;getResource,Class<HTMLSettingsPanel>,String);
Relation(HTMLSettingsPanel;getXslDirectory;getText,JTextComponent,N);
Relation(HTMLSettingsPanel;getXslDirectory;length,String,N);
Relation(HTMLSettingsPanel;getXslDirectory;toString,URL,N);
Relation(HTMLSettingsPanel;initialize;getMessage,Throwable,N);
Relation(HTMLSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(HTMLSettingsPanel;initialize;getProperty,System,String);
Relation(HTMLSettingsPanel;initialize;getXslDir,GanttOptions,N);
Relation(HTMLSettingsPanel;initialize;println,PrintStream,String);
Relation(HTMLSettingsPanel;initialize;setText,JTextComponent,String);
end b19
start b20
Class(GraphicPrimitive,N,static,package);
Generalisation(GraphicPrimitiveContainer,GraphicPrimitive);
Relation(ChartHeaderImpl;createFrames;setForegroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setBackgroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setForegroundColor,GraphicPrimitive,Color);
Relation(GraphicPrimitiveContainer;paint;getBackgroundColor,GraphicPrimitive,N);
Relation(GraphicPrimitiveContainer;paint;getForegroundColor,GraphicPrimitive,N);
end b20
start b21
Class(MouseOverHandler,N,N,package);
end b21
start b22
Attribute(DependencyTagHandler,myContext,ParsingContext,N,private);
Attribute(GanttXMLOpen,myContext,ParsingContext,N,private);
Attribute(ParsingContext,myTaskID,int,N,private);
Attribute(TaskTagHandler,myContext,ParsingContext,N,private);
Class(ParsingContext,N,N,public);
Method(DependencyTagHandler,getContext,ParsingContext,N,N,N,private);
Method(GanttXMLOpen,getContext,ParsingContext,N,N,N,public);
Method(ParsingContext,getTaskID,int,N,N,N,public);
Method(ParsingContext,setTaskID,void,Y,N,N,public);
Parameter(DependencyTagHandler,DependencyTagHandler,context,ParsingContext,declaration);
Parameter(ParsingContext,setTaskID,id,int,declaration);
Parameter(TaskTagHandler,TaskTagHandler,context,ParsingContext,declaration);
Relation(DependencyTagHandler;getDependencyAddressee;getTaskID,ParsingContext,N);
Relation(GanttXMLOpen;startElement;getTaskID,ParsingContext,N);
Relation(GanttXMLOpen;startElement;setTaskID,ParsingContext,int);
Relation(TaskTagHandler;loadTask;setTaskID,ParsingContext,int);
end b22
start b23
Attribute(GanttStatusBar,pbp,ProgressBarPanel,N,protected);
Class(ProgressBarPanel,N,N,private);
Relation(GanttStatusBar;GanttStatusBar;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;run;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;setProgressValue;setValue,ProgressBarPanel,int);
end b23
start b24
Attribute(DeleteHumanAction,ICON_URL,String,static,private);
Attribute(DeleteHumanAction,MENU_MASK,int,N,private);
Attribute(DeleteHumanAction,myContext,ResourceContext,N,private);
Attribute(DeleteHumanAction,myProjectFrame,GanttProject,N,private);
Class(DeleteHumanAction,N,N,public);
Generalisation(DeleteHumanAction,ResourceAction);
Method(DeleteHumanAction,DeleteHumanAction,N,Y,N,N,public);
Method(DeleteHumanAction,actionPerformed,void,Y,N,N,public);
Method(DeleteHumanAction,deleteResources,void,Y,N,N,private);
Method(DeleteHumanAction,getContext,ResourceContext,N,N,N,private);
Method(DeleteHumanAction,getDisplayName,String,Y,N,N,private);
Method(DeleteHumanAction,getProjectFrame,GanttProject,N,N,N,private);
Parameter(DeleteHumanAction,DeleteHumanAction,context,ResourceContext,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,hrManager,ResourceManager,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,iconUrlURL,local);
Parameter(DeleteHumanAction,DeleteHumanAction,projectFrame,GanttProject,declaration);
Parameter(DeleteHumanAction,actionPerformed,contextProjectResource[],local);
Parameter(DeleteHumanAction,actionPerformed,event,ActionEvent,declaration);
Parameter(DeleteHumanAction,actionPerformed,gdiGanttDialogInfo,local);
Parameter(DeleteHumanAction,deleteResources,context,ProjectResource[],declaration);
Parameter(DeleteHumanAction,getDisplayName,resources,ProjectResource[],declaration);
Parameter(DeleteHumanAction,getDisplayName,resultStringBuffer,local);
Relation(DeleteHumanAction;DeleteHumanAction;correctLabel,GanttProject,String);
Relation(DeleteHumanAction;DeleteHumanAction;getClass,Object,N);
Relation(DeleteHumanAction;DeleteHumanAction;getClassLoader,Class<>,N);
Relation(DeleteHumanAction;DeleteHumanAction;getKeyStroke,KeyStroke,int-int);
Relation(DeleteHumanAction;DeleteHumanAction;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;DeleteHumanAction;getResource,ClassLoader,String);
Relation(DeleteHumanAction;DeleteHumanAction;getText,GanttLanguage,String);
Relation(DeleteHumanAction;DeleteHumanAction;putValue,AbstractAction,String-Object);
Relation(DeleteHumanAction;NgetDefaultToolkit,Toolkit,N);
Relation(DeleteHumanAction;NgetMenuShortcutKeyMask,Toolkit,N);
Relation(DeleteHumanAction;actionPerformed;deleteResources,DeleteHumanAction,ProjectResource[]);
Relation(DeleteHumanAction;actionPerformed;getContext,DeleteHumanAction,N);
Relation(DeleteHumanAction;actionPerformed;getDisplayName,DeleteHumanAction,ProjectResource[]);
Relation(DeleteHumanAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;actionPerformed;getProjectFrame,DeleteHumanAction,N);
Relation(DeleteHumanAction;actionPerformed;getResources,ResourceContext,N);
Relation(DeleteHumanAction;actionPerformed;getText,GanttLanguage,String);
Relation(DeleteHumanAction;actionPerformed;refreshProjectInfos,GanttProject,N);
Relation(DeleteHumanAction;actionPerformed;setAskForSave,GanttProject,boolean);
Relation(DeleteHumanAction;actionPerformed;setSelectedIndex,JTabbedPane,int);
Relation(DeleteHumanAction;actionPerformed;show,Dialog,N);
Relation(DeleteHumanAction;deleteResources;getManager,ResourceAction,N);
Relation(DeleteHumanAction;deleteResources;remove,ResourceManager,ProjectResource);
Relation(DeleteHumanAction;getDisplayName;append,StringBuffer,String);
Relation(DeleteHumanAction;getDisplayName;toString,ProjectResource,N);
Relation(DeleteHumanAction;getDisplayName;toString,StringBuffer,N);
end b24
start b25
Class(ResourceView,N,N,public);
Method(ResourceView,resourceAdded,void,Y,N,N,public);
Method(ResourceView,resourcesRemoved,void,Y,N,N,public);
Parameter(HumanResourceManager,addView,view,ResourceView,declaration);
Parameter(HumanResourceManager,fireResourceAdded,nextViewResourceView,local);
Parameter(HumanResourceManager,fireResourcesRemoved,nextViewResourceView,local);
Parameter(ResourceManager,addView,view,ResourceView,declaration);
Parameter(ResourceView,resourceAdded,event,ResourceEvent,declaration);
Parameter(ResourceView,resourcesRemoved,event,ResourceEvent,declaration);
Relation(GanttProject;getHumanResourceManager;addView,ResourceManager,ResourceView);
Relation(HumanResourceManager;fireResourceAdded;resourceAdded,ResourceView,ResourceEvent);
Relation(HumanResourceManager;fireResourcesRemoved;resourcesRemoved,ResourceView,ResourceEvent);
end b25
start b26
Attribute(TaskImpl,myManager,TaskManagerImpl,N,private);
Attribute(TaskManagerImpl,myAlgorithmCollection,AlgorithmCollection,N,private);
Attribute(TaskManagerImpl,myConfig,TaskManagerConfig,N,private);
Attribute(TaskManagerImpl,myDependencyCollection,TaskDependencyCollectionImpl,N,private);
Attribute(TaskManagerImpl,myHierarchyManager,TaskHierarchyManagerImpl,N,private);
Attribute(TaskManagerImpl,myId2task,Map,N,private);
Attribute(TaskManagerImpl,myListeners,List,N,private);
Attribute(TaskManagerImpl,myMaxID,int,N,private);
Attribute(TaskManagerImpl,myRoot,Task,N,private);
Attribute(TaskManagerImpl,myTimeUnitManager,TimeUnitManager,N,private);
Class(TaskManagerImpl,N,N,public);
Method(TaskManagerImpl,FacadeImpl,N,Y,N,N,public);
Method(TaskManagerImpl,TaskManagerImpl,N,N,N,N,package);
Method(TaskManagerImpl,TaskManagerImpl,N,Y,N,N,package);
Method(TaskManagerImpl,addTaskListener,void,Y,N,N,public);
Method(TaskManagerImpl,clear,void,N,N,N,public);
Method(TaskManagerImpl,createConstraint,TaskDependencyConstraint,Y,N,N,public);
Method(TaskManagerImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,N,N,protected);
Method(TaskManagerImpl,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Method(TaskManagerImpl,createLength,TaskLength,Y,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,N,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,fireDependencyAdded,void,Y,N,N,private);
Method(TaskManagerImpl,fireDependencyAdded,void,Y,N,N,public);
Method(TaskManagerImpl,fireDependencyRemoved,void,Y,N,N,private);
Method(TaskManagerImpl,fireDependencyRemoved,void,Y,N,N,public);
Method(TaskManagerImpl,fireTaskAdded,void,Y,N,N,private);
Method(TaskManagerImpl,fireTaskRemoved,void,Y,N,N,private);
Method(TaskManagerImpl,fireTaskScheduleChanged,void,Y,N,N,package);
Method(TaskManagerImpl,getAlgorithmCollection,AlgorithmCollection,N,N,N,public);
Method(TaskManagerImpl,getConfig,TaskManagerConfig,N,N,N,public);
Method(TaskManagerImpl,getContainer,Task,Y,N,N,public);
Method(TaskManagerImpl,getDefaultColor,Color,N,N,N,public);
Method(TaskManagerImpl,getDependencyCollection,TaskDependencyCollection,N,N,N,public);
Method(TaskManagerImpl,getHierarchyManager,TaskHierarchyManagerImpl,N,N,N,public);
Method(TaskManagerImpl,getMaxID,int,N,N,N,public);
Method(TaskManagerImpl,getNestedTasks,Task[],Y,N,N,public);
Method(TaskManagerImpl,getRoot,Task,N,N,N,public);
Method(TaskManagerImpl,getRootTask,Task,N,N,N,public);
Method(TaskManagerImpl,getTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TaskManagerImpl,increaseMaxID,void,N,N,N,package);
Method(TaskManagerImpl,registerTask,void,Y,N,N,public);
Method(TaskManagerImpl,setMaxID,void,Y,N,N,private);
Method(TaskManagerImpl,setTask,void,Y,N,N,public);
Parameter(GanttTree,insertClonedNode,tmiTaskManagerImpl,local);
Parameter(TaskManagerImpl,FacadeImpl,root,Task,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg1FindPossibleDependeesAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg2RecalculateTaskScheduleAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg3AdjustTaskBoundsAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg4RecalculateTaskCompletionPercentageAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,config,TaskManagerConfig,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,containmentFacadeFactory,Factory,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,factoryFactory,local);
Parameter(TaskManagerImpl,addTaskListener,listener,TaskListener,declaration);
Parameter(TaskManagerImpl,createConstraint,constraintID,int,declaration);
Parameter(TaskManagerImpl,createConstraint,resultTaskDependencyConstraint,local);
Parameter(TaskManagerImpl,createLength,count,long,declaration);
Parameter(TaskManagerImpl,createLength,unit,TimeUnit,declaration);
Parameter(TaskManagerImpl,createTask,resultGanttTask,local);
Parameter(TaskManagerImpl,createTask,taskId,int,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,eTaskDependencyEvent,local);
Parameter(TaskManagerImpl,fireDependencyAdded,newDependency,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,dep,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyRemoved,eTaskDependencyEvent,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskAdded,eTaskHierarchyEvent,local);
Parameter(TaskManagerImpl,fireTaskAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskAdded,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,eTaskHierarchyEvent,local);
Parameter(TaskManagerImpl,fireTaskRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskRemoved,oldSupertask,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,changedTask,Task,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,eTaskScheduleEvent,local);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldFinishDate,GanttCalendar,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldStartDate,GanttCalendar,declaration);
Parameter(TaskManagerImpl,getContainer,nestedTask,Task,declaration);
Parameter(TaskManagerImpl,getNestedTasks,container,Task,declaration);
Parameter(TaskManagerImpl,getRootTask,todayDate,local);
Parameter(TaskManagerImpl,getTask,taskId,int,declaration);
Parameter(TaskManagerImpl,registerTask,task,Task,declaration);
Parameter(TaskManagerImpl,registerTask,taskIDint,local);
Parameter(TaskManagerImpl,setMaxID,id,int,declaration);
Parameter(TaskManagerImpl,setTask,task,Task,declaration);
Parameter(TaskManagerImpl,setTask,taskIDint,local);
Relation(GanttTree;insertClonedNode;getMaxID,TaskManagerImpl,N);
Relation(GanttXMLOpen;GanttXMLOpen;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getHierarchyManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;increaseMaxID,TaskManagerImpl,N);
Relation(TaskImpl;getColor;getConfig,TaskManagerImpl,N);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskManagerImpl;TaskManagerImpl;clear,TaskManagerImpl,N);
Relation(TaskManagerImpl;TaskManagerImpl;createFacede,Factory,N);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyAdded,TaskManagerImpl,TaskDependency);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyRemoved,TaskManagerImpl,TaskDependency);
Relation(TaskManagerImpl;addTaskListener;add,List,Object);
Relation(TaskManagerImpl;clear;clear,Map,N);
Relation(TaskManagerImpl;clear;clear,TaskDependencyCollectionImpl,N);
Relation(TaskManagerImpl;clear;setMaxID,TaskManagerImpl,int);
Relation(TaskManagerImpl;createTask;createTask,TaskManagerImpl,int);
Relation(TaskManagerImpl;createTask;fireTaskAdded,TaskManagerImpl,Task);
Relation(TaskManagerImpl;createTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;getRootTask,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;getTaskID,TaskImpl,N);
Relation(TaskManagerImpl;createTask;increaseMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;move,TaskImpl,Task);
Relation(TaskManagerImpl;createTask;setTaskID,GanttTask,int);
Relation(TaskManagerImpl;fireDependencyAdded;dependencyAdded,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyAdded;get,List,int);
Relation(TaskManagerImpl;fireDependencyAdded;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskManagerImpl;fireDependencyAdded;size,List,N);
Relation(TaskManagerImpl;fireDependencyRemoved;dependencyRemoved,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyRemoved;get,List,int);
Relation(TaskManagerImpl;fireDependencyRemoved;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskManagerImpl;fireDependencyRemoved;size,List,N);
Relation(TaskManagerImpl;fireTaskAdded;get,List,int);
Relation(TaskManagerImpl;fireTaskAdded;getSupertask,Task,N);
Relation(TaskManagerImpl;fireTaskAdded;size,List,N);
Relation(TaskManagerImpl;fireTaskAdded;taskAdded,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskRemoved;get,List,int);
Relation(TaskManagerImpl;fireTaskRemoved;size,List,N);
Relation(TaskManagerImpl;fireTaskRemoved;taskRemoved,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskScheduleChanged;get,List,int);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getEnd,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getStart,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;size,List,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;taskScheduleChanged,TaskListener,TaskScheduleEvent);
Relation(TaskManagerImpl;getContainer;getSupertask,Task,N);
Relation(TaskManagerImpl;getNestedTasks;getNestedTasks,Task,N);
Relation(TaskManagerImpl;getRootTask;createLength,TaskManagerImpl,TimeUnit-long);
Relation(TaskManagerImpl;getRootTask;getInstance,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTime,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTimeUnit,TimeUnitManager,int);
Relation(TaskManagerImpl;getRootTask;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskManagerImpl;getRootTask;setDuration,MutableTask,TaskLength);
Relation(TaskManagerImpl;getRootTask;setExpand,MutableTask,boolean);
Relation(TaskManagerImpl;getRootTask;setStart,MutableTask,GanttCalendar);
Relation(TaskManagerImpl;getTask;get,Map,Object);
Relation(TaskManagerImpl;registerTask;get,Map,Object);
Relation(TaskManagerImpl;registerTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;registerTask;getTaskID,Task,N);
Relation(TaskManagerImpl;registerTask;put,Map,Object-Object);
Relation(TaskManagerImpl;registerTask;setMaxID,TaskManagerImpl,int);
Relation(TaskManagerImpl;setTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;setTask;getTaskID,Task,N);
Relation(TaskManagerImpl;setTask;put,Map,Object-Object);
Relation(TaskManagerImpl;setTask;setMaxID,TaskManagerImpl,int);
end b26
start b27
Attribute(ChartHeaderImpl,myChartModel,ChartModelImpl,N,private);
Attribute(ChartModelImpl,myAtomUnitPixels,int,N,private);
Attribute(ChartModelImpl,myBottomUnit,TimeUnit,N,private);
Attribute(ChartModelImpl,myBounds,Dimension,N,private);
Attribute(ChartModelImpl,myChartHeader,ChartHeader,N,private);
Attribute(ChartModelImpl,myChartUIConfiguration,ChartUIConfiguration,N,private);
Attribute(ChartModelImpl,myStartDate,Date,N,private);
Attribute(ChartModelImpl,myTimeFrames,TimeFrame[],N,private);
Attribute(ChartModelImpl,myTimeUnitStack,GregorianTimeUnitStack,N,private);
Attribute(ChartModelImpl,myTopUnit,TimeUnit,N,private);
Class(ChartModelImpl,N,N,public);
Method(ChartModelImpl,ChartModelImpl,N,N,N,N,public);
Method(ChartModelImpl,calculateTimeFrames,TimeFrame[],N,N,N,private);
Method(ChartModelImpl,getBottomUnitWidth,int,N,N,N,package);
Method(ChartModelImpl,getBounds,Dimension,N,N,N,package);
Method(ChartModelImpl,getChartHeader,ChartHeader,N,N,N,public);
Method(ChartModelImpl,getChartUIConfiguration,ChartUIConfiguration,N,N,N,package);
Method(ChartModelImpl,getTimeFrames,TimeFrame[],N,N,N,package);
Method(ChartModelImpl,setBottomTimeUnit,void,Y,N,N,public);
Method(ChartModelImpl,setBottomUnitWidth,void,Y,N,N,public);
Method(ChartModelImpl,setBounds,void,Y,N,N,public);
Method(ChartModelImpl,setStartDate,void,Y,N,N,public);
Method(ChartModelImpl,setTopTimeUnit,void,Y,N,N,public);
Parameter(ChartHeaderImpl,ChartHeaderImpl,model,ChartModelImpl,declaration);
Parameter(ChartModelImpl,calculateTimeFrames,currentDateDate,local);
Parameter(ChartModelImpl,calculateTimeFrames,currentFrameTimeFrame,local);
Parameter(ChartModelImpl,calculateTimeFrames,resultArrayList,local);
Parameter(ChartModelImpl,calculateTimeFrames,totalFramesWidthint,local);
Parameter(ChartModelImpl,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(ChartModelImpl,setBottomUnitWidth,pixelsWidth,int,declaration);
Parameter(ChartModelImpl,setBounds,bounds,Dimension,declaration);
Parameter(ChartModelImpl,setStartDate,startDate,Date,declaration);
Parameter(ChartModelImpl,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Relation(ChartHeaderImpl;createFrames;getBottomUnitWidth,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getTimeFrames,ChartModelImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;getHeight;getBounds,ChartModelImpl,N);
Relation(ChartHeaderImpl;getWidth;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;add,ArrayList,Object);
Relation(ChartModelImpl;calculateTimeFrames;createTimeFrame,GregorianTimeUnitStack,Date-TimeUnit-TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;getFinishDate,TimeFrame,N);
Relation(ChartModelImpl;calculateTimeFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getWidth,Dimension,N);
Relation(ChartModelImpl;calculateTimeFrames;toArray,ArrayList,Object[]);
Relation(ChartModelImpl;getTimeFrames;calculateTimeFrames,ChartModelImpl,N);
Relation(ChartModelImpl;setStartDate;equals,Date,Object);
Relation(ChartModelImpl;setStartDate;println,PrintStream,String);
Relation(ChartModelImpl;setTopTimeUnit;createTimeUnit,TimeUnitFunctionOfDate,Date);
end b27
start b28
Class(RangeSearchFromKey,N,N,package);
Generalisation(RangeSearchFromKey,SearchKey);
Method(RangeSearchFromKey,RangeSearchFromKey,N,Y,N,N,public);
Parameter(RangeSearchFromKey,RangeSearchFromKey,task,Task,declaration);
Relation(RangeSearchFromKey;RangeSearchFromKey;getTaskID,Task,N);
end b28
start b29
Class(TaskListenerAdapter,abstract,N,public);
Method(TaskListenerAdapter,dependencyAdded,void,Y,N,N,public);
Method(TaskListenerAdapter,dependencyRemoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskAdded,void,Y,N,N,public);
Method(TaskListenerAdapter,taskMoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskRemoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskScheduleChanged,void,Y,N,N,public);
Parameter(TaskListenerAdapter,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskMoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskScheduleChanged,e,TaskScheduleEvent,declaration);
end b29
start b30
Attribute(WizardImpl,myBackAction,BackAction,N,private);
Class(BackAction,N,N,public);
end b30
start b31
Attribute(GanttGraphicArea,taskToMove,GanttTask,N,private);
Attribute(GanttTask,HIGHT,int,static,public);
Attribute(GanttTask,LOW,int,static,public);
Attribute(GanttTask,NORMAL,int,static,public);
Attribute(GanttTask,checked,boolean,N,private);
Attribute(GanttTaskPropertiesBean,selectedTask,GanttTask,N,protected);
Class(GanttTask,N,N,public);
Generalisation(GanttTask,TaskImpl);
Method(GanttTask,Clone,GanttTask,N,N,N,public);
Method(GanttTask,GanttTask,N,Y,N,N,private);
Method(GanttTask,GanttTask,N,Y,N,N,public);
Method(GanttTask,getLength,int,N,N,N,public);
Method(GanttTask,getPredecessorsOld,Vector,N,N,N,public);
Method(GanttTask,getSuccessorsOld,Vector,N,N,N,public);
Method(GanttTask,isChecked,boolean,N,N,N,public);
Method(GanttTask,setChecked,void,Y,N,N,public);
Method(GanttTask,setLength,void,Y,N,N,public);
Method(GanttTask,setTaskID,void,Y,N,N,public);
Method(GanttTask,toString,String,N,N,N,public);
Method(GanttTask,unlink,void,N,N,N,public);
Method(GanttTaskRelationship,getPredecessorTask,GanttTask,N,N,N,public);
Method(GanttTree,getSelectedTask,GanttTask,N,N,N,public);
Method(TaskManager,createTask,GanttTask,N,N,N,public);
Method(TaskManager,createTask,GanttTask,Y,N,N,public);
Method(TaskManager,getTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,N,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,getTask,GanttTask,Y,N,N,public);
Parameter(GanttCSVExport,getAssignments,task,GanttTask,declaration);
Parameter(GanttCSVExport,getMaxSize,taskGanttTask,local);
Parameter(GanttCSVExport,getName,task,GanttTask,declaration);
Parameter(GanttCSVExport,getWebLink,task,GanttTask,declaration);
Parameter(GanttCSVExport,writeTasks,taskGanttTask,local);
Parameter(GanttDialogProperties,GanttDialogProperties,task,GanttTask,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,secondTaskGanttTask,local);
Parameter(GanttGraphicArea,paintDepend,taskGanttTask,local);
Parameter(GanttGraphicArea,paintTasks,taskGanttTask,local);
Parameter(GanttProject,deleteTasks,taskFatherGanttTask,local);
Parameter(GanttProject,linkRelationships,firstTaskGanttTask,local);
Parameter(GanttProject,linkRelationships,secondTaskGanttTask,local);
Parameter(GanttProject,newTask,currentGanttTask,local);
Parameter(GanttProject,newTask,taskGanttTask,local);
Parameter(GanttProject,propertiesTask,tGanttTask,local);
Parameter(GanttProject,unlinkRelationships,tGanttTask,local);
Parameter(GanttTXTOpen,load,taskGanttTask,local);
Parameter(GanttTask,GanttTask,copy,GanttTask,declaration);
Parameter(GanttTask,GanttTask,length,long,declaration);
Parameter(GanttTask,GanttTask,mutatorTaskMutator,local);
Parameter(GanttTask,GanttTask,name,String,declaration);
Parameter(GanttTask,GanttTask,start,GanttCalendar,declaration);
Parameter(GanttTask,GanttTask,taskManager,TaskManager,declaration);
Parameter(GanttTask,GanttTask,timeManagerTimeUnitManager,local);
Parameter(GanttTask,getPredecessorsOld,depsTaskDependency[],local);
Parameter(GanttTask,getPredecessorsOld,nextTaskDependency,local);
Parameter(GanttTask,getPredecessorsOld,relGanttTaskRelationship,local);
Parameter(GanttTask,getPredecessorsOld,resultVector,local);
Parameter(GanttTask,getSuccessorsOld,depsTaskDependency[],local);
Parameter(GanttTask,getSuccessorsOld,nextTaskDependency,local);
Parameter(GanttTask,getSuccessorsOld,relGanttTaskRelationship,local);
Parameter(GanttTask,getSuccessorsOld,resultVector,local);
Parameter(GanttTask,setChecked,checked,boolean,declaration);
Parameter(GanttTask,setLength,l,int,declaration);
Parameter(GanttTask,setLength,mutatorTaskMutator,local);
Parameter(GanttTask,setTaskID,taskID,int,declaration);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,selectedTask,GanttTask,declaration);
Parameter(GanttTaskPropertiesBean,getReturnTask,returnTaskGanttTask,local);
Parameter(GanttTaskPropertiesBean,setSelectedTask,selectedTask,GanttTask,declaration);
Parameter(GanttTree,checkDepend,task2,GanttTask,declaration);
Parameter(GanttTree,checkDepend,tempTaskGanttTask,local);
Parameter(GanttTree,computePercentComplete,temptaskGanttTask,local);
Parameter(GanttTree,cutSelectedNode,taskFatherGanttTask,local);
Parameter(GanttTree,insertClonedNode,_cGanttTask,local);
Parameter(GanttTree,insertClonedNode,_tGanttTask,local);
Parameter(GanttTree,insertClonedNode,newTaskGanttTask,local);
Parameter(GanttTree,insertClonedNode,originalTaskGanttTask,local);
Parameter(GanttTree,setAllTasksUnchecked,taskGanttTask,local);
Parameter(GanttXFIGSaver,drawTasks,taskGanttTask,local);
Parameter(GanttXFIGSaver,searchUserColor,taskGanttTask,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,taskGanttTask,local);
Parameter(GanttXFIGSaver,task2box,task,GanttTask,declaration);
Parameter(GanttXFIGSaver,task2text,task,GanttTask,declaration);
Parameter(GanttXMLOpen,startElement,taskGanttTask,local);
Parameter(GanttXMLSaver,writeTask,taskGanttTask,local);
Parameter(TaskManagerImpl,createTask,resultGanttTask,local);
Parameter(TaskTagHandler,loadTask,taskGanttTask,local);
Relation(GanttCSVExport;getMaxSize;getAssignments,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;getMaxSize;getLength,GanttTask,N);
Relation(GanttCSVExport;getMaxSize;getName,GanttCSVExport,DefaultMutableTreeNode-GanttTask);
Relation(GanttCSVExport;getMaxSize;getWebLink,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;writeTasks;getAssignments,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;writeTasks;getLength,GanttTask,N);
Relation(GanttCSVExport;writeTasks;getName,GanttCSVExport,DefaultMutableTreeNode-GanttTask);
Relation(GanttCSVExport;writeTasks;getWebLink,GanttCSVExport,GanttTask);
Relation(GanttDialogProperties;GanttDialogProperties;getLength,GanttTask,N);
Relation(GanttDialogProperties;GanttDialogProperties;toString,GanttTask,N);
Relation(GanttGraphicArea;GanttGraphicArea;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttGraphicArea;GanttGraphicArea;getLength,GanttTask,N);
Relation(GanttGraphicArea;GanttGraphicArea;setLength,GanttTask,int);
Relation(GanttGraphicArea;paintDepend;getSuccessorsOld,GanttTask,N);
Relation(GanttGraphicArea;paintTasks;getLength,GanttTask,N);
Relation(GanttProject;newTask;setLength,GanttTask,int);
Relation(GanttProject;newTask;toString,GanttTask,N);
Relation(GanttProject;unlinkRelationships;unlink,GanttTask,N);
Relation(GanttTXTOpen;load;setLength,GanttTask,int);
Relation(GanttTask;GanttTask;commit,TaskMutator,N);
Relation(GanttTask;GanttTask;createLength,TaskManager,TimeUnit-long);
Relation(GanttTask;GanttTask;createMutator,TaskImpl,N);
Relation(GanttTask;GanttTask;enableEvents,TaskImpl,boolean);
Relation(GanttTask;GanttTask;getTimeUnit,TimeUnitManager,int);
Relation(GanttTask;GanttTask;getTimeUnitManager,TaskImpl,N);
Relation(GanttTask;GanttTask;setDuration,MutableTask,TaskLength);
Relation(GanttTask;GanttTask;setName,MutableTask,String);
Relation(GanttTask;GanttTask;setStart,MutableTask,GanttCalendar);
Relation(GanttTask;getLength;getDuration,TaskImpl,N);
Relation(GanttTask;getLength;getLength,TaskLength,N);
Relation(GanttTask;getPredecessorsOld;add,Vector,Object);
Relation(GanttTask;getPredecessorsOld;getConstraint,TaskDependency,N);
Relation(GanttTask;getPredecessorsOld;getDependee,TaskDependency,N);
Relation(GanttTask;getPredecessorsOld;getDependenciesAsDependant,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;getID,TaskDependencyConstraint,N);
Relation(GanttTask;getPredecessorsOld;getManager,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;getTaskID,Task,N);
Relation(GanttTask;getPredecessorsOld;getTaskID,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;toArray,TaskDependencySlice,N);
Relation(GanttTask;getSuccessorsOld;add,Vector,Object);
Relation(GanttTask;getSuccessorsOld;getConstraint,TaskDependency,N);
Relation(GanttTask;getSuccessorsOld;getDependant,TaskDependency,N);
Relation(GanttTask;getSuccessorsOld;getDependenciesAsDependee,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;getID,TaskDependencyConstraint,N);
Relation(GanttTask;getSuccessorsOld;getManager,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;getTaskID,Task,N);
Relation(GanttTask;getSuccessorsOld;getTaskID,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;toArray,TaskDependencySlice,N);
Relation(GanttTask;setLength;commit,TaskMutator,N);
Relation(GanttTask;setLength;createLength,TaskManager,TimeUnit-long);
Relation(GanttTask;setLength;createMutator,TaskImpl,N);
Relation(GanttTask;setLength;getDuration,TaskImpl,N);
Relation(GanttTask;setLength;getManager,TaskImpl,N);
Relation(GanttTask;setLength;getTimeUnit,TaskLength,N);
Relation(GanttTask;setLength;setDuration,MutableTask,TaskLength);
Relation(GanttTask;setTaskID;setTaskIDHack,TaskImpl,int);
Relation(GanttTask;toString;getName,TaskImpl,N);
Relation(GanttTask;unlink;clear,TaskDependencySlice,N);
Relation(GanttTask;unlink;getDependencies,TaskImpl,N);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;getPredecessorsOld,GanttTask,N);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;setSelectedTask,GanttTaskPropertiesBean,GanttTask);
Relation(GanttTaskPropertiesBean;getReturnTask;setChecked,GanttTask,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setLength,GanttTask,int);
Relation(GanttTaskPropertiesBean;setSelectedTask;getLength,GanttTask,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;toString,GanttTask,N);
Relation(GanttTree;checkDepend;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttTree;checkDepend;getSuccessorsOld,GanttTask,N);
Relation(GanttTree;computePercentComplete;getLength,GanttTask,N);
Relation(GanttTree;insertClonedNode;Clone,GanttTask,N);
Relation(GanttTree;insertClonedNode;getLength,GanttTask,N);
Relation(GanttTree;insertClonedNode;setLength,GanttTask,int);
Relation(GanttTree;insertClonedNode;setTaskID,GanttTask,int);
Relation(GanttTree;insertClonedNode;toString,GanttTask,N);
Relation(GanttTree;setAllTasksUnchecked;setChecked,GanttTask,boolean);
Relation(GanttXFIGSaver;setProjectPlotTimes;task2box,GanttXFIGSaver,GanttTask-int-int-boolean);
Relation(GanttXFIGSaver;setProjectPlotTimes;task2text,GanttXFIGSaver,GanttTask-int-int-int);
Relation(GanttXFIGSaver;task2box;getLength,GanttTask,N);
Relation(GanttXMLOpen;startElement;setLength,GanttTask,int);
Relation(GanttXMLOpen;startElement;setTaskID,GanttTask,int);
Relation(GanttXMLSaver;writeTask;getLength,GanttTask,N);
Relation(GanttXMLSaver;writeTask;getSuccessorsOld,GanttTask,N);
Relation(TaskManagerImpl;createTask;setTaskID,GanttTask,int);
Relation(TaskTagHandler;loadTask;setLength,GanttTask,int);
end b31
start b32
Attribute(TaskDependencyConstraint,NO_VARIATION,int,N,package);
Attribute(TaskDependencyConstraint,START_EARLIER_VARIATION,int,N,package);
Attribute(TaskDependencyConstraint,START_LATER_VARIATION,int,N,package);
Attribute(TaskDependencyConstraint,isActive,boolean,N,private);
Attribute(TaskDependencyConstraint,myAcceptableStart,GanttCalendar,N,private);
Attribute(TaskDependencyConstraint,myVariation,int,N,private);
Attribute(TaskDependencyImpl,myConstraint,TaskDependencyConstraint,N,private);
Class(TaskDependencyConstraint,N,N,public);
Method(TaskDependency,getConstraint,TaskDependencyConstraint,N,N,N,package);
Method(TaskDependencyConstraint,DefaultCollision,N,Y,N,N,public);
Method(TaskDependencyConstraint,getAcceptableStart,GanttCalendar,N,N,N,package);
Method(TaskDependencyConstraint,getAcceptableStart,GanttCalendar,N,N,N,public);
Method(TaskDependencyConstraint,getCollision,Collision,N,N,N,package);
Method(TaskDependencyConstraint,getID,int,N,N,N,package);
Method(TaskDependencyConstraint,getName,String,N,N,N,package);
Method(TaskDependencyConstraint,getVariation,int,N,N,N,package);
Method(TaskDependencyConstraint,getVariation,int,N,N,N,public);
Method(TaskDependencyConstraint,isActive,boolean,N,N,N,package);
Method(TaskDependencyConstraint,isActive,boolean,N,N,N,public);
Method(TaskDependencyConstraint,setTaskDependency,void,Y,N,N,package);
Method(TaskDependencyImpl,getConstraint,TaskDependencyConstraint,N,N,N,public);
Method(TaskManager,createConstraint,TaskDependencyConstraint,Y,N,N,package);
Method(TaskManagerImpl,createConstraint,TaskDependencyConstraint,Y,N,N,public);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextConstraintTaskDependencyConstraint,local);
Parameter(TaskDependency,setConstraint,constraint,TaskDependencyConstraint,declaration);
Parameter(TaskDependencyConstraint,DefaultCollision,isActive,boolean,declaration);
Parameter(TaskDependencyConstraint,DefaultCollision,myAcceptableStart,GanttCalendar,declaration);
Parameter(TaskDependencyConstraint,DefaultCollision,myVariation,int,declaration);
Parameter(TaskDependencyConstraint,setTaskDependency,dependency,TaskDependency,declaration);
Parameter(TaskDependencyImpl,setConstraint,constraint,TaskDependencyConstraint,declaration);
Parameter(TaskManagerImpl,createConstraint,resultTaskDependencyConstraint,local);
Relation(DependencyTableModel;getValueAt;getName,TaskDependencyConstraint,N);
Relation(DependencyTableModel;updateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(DependencyTagHandler;parsingFinished;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(GanttTask;getPredecessorsOld;getID,TaskDependencyConstraint,N);
Relation(GanttTask;getSuccessorsOld;getID,TaskDependencyConstraint,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getCollision,TaskDependencyConstraint,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;getCollision,TaskDependencyConstraint,N);
Relation(TaskDependencyCollectionImpl;auxCreateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(TaskDependencyImpl;setConstraint;setTaskDependency,TaskDependencyConstraint,TaskDependency);
end b32
start b33
Attribute(GanttCalendar,isFixed,boolean,N,private);
Attribute(GanttCalendar,language,GanttLanguage,N,private);
Attribute(GanttCalendar,serialVersionUID,long,static,package);
Attribute(GanttGraphicArea,beg,GanttCalendar,N,public);
Attribute(GanttGraphicArea,date,GanttCalendar,N,public);
Attribute(GanttGraphicArea,end,GanttCalendar,N,public);
Attribute(GanttGraphicArea,olddate,GanttCalendar,N,public);
Attribute(GanttGraphicArea,storeTaskStart,GanttCalendar,N,private);
Attribute(GanttPanelDate,date,GanttCalendar,N,public);
Attribute(GanttPanelDate,save,GanttCalendar,N,private);
Attribute(GanttTaskPropertiesBean,end,GanttCalendar,N,private);
Attribute(GanttTaskPropertiesBean,start,GanttCalendar,N,private);
Attribute(GanttXFIGSaver,dateShift,GanttCalendar,N,package);
Attribute(ResourceLoadGraphicArea,beg,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,date,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,end,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,olddate,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,storeTaskStart,GanttCalendar,N,private);
Attribute(TaskDependencyConstraint,myAcceptableStart,GanttCalendar,N,private);
Attribute(TaskImpl,myEnd,GanttCalendar,N,private);
Attribute(TaskImpl,myStart,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myNewFinishDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myNewStartDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myOldFinishDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myOldStartDate,GanttCalendar,N,private);
Class(GanttCalendar,N,N,public);
Generalisation(GanttCalendar,GregorianCalendar);
Method(GanttCalendar,Clone,GanttCalendar,N,N,N,public);
Method(GanttCalendar,GanttCalendar,N,N,N,N,public);
Method(GanttCalendar,GanttCalendar,N,Y,N,N,public);
Method(GanttCalendar,add,void,Y,N,N,public);
Method(GanttCalendar,compareTo,int,Y,N,N,public);
Method(GanttCalendar,diff,int,Y,N,N,public);
Method(GanttCalendar,equals,boolean,Y,N,N,public);
Method(GanttCalendar,getDate,int,N,N,N,public);
Method(GanttCalendar,getDateAndTime,String,N,N,static,public);
Method(GanttCalendar,getDay,int,N,N,N,public);
Method(GanttCalendar,getDayMonthLanguage,String[],N,N,N,public);
Method(GanttCalendar,getDayWeek,int,N,N,N,public);
Method(GanttCalendar,getDayWeekLanguage,String[],N,N,N,public);
Method(GanttCalendar,getMonth,int,N,N,N,public);
Method(GanttCalendar,getNumberOfDay,int,N,N,N,public);
Method(GanttCalendar,getWeek,int,N,N,N,public);
Method(GanttCalendar,getYear,int,N,N,N,public);
Method(GanttCalendar,getdayMonth,String,N,N,N,public);
Method(GanttCalendar,getdayWeek,String,N,N,N,public);
Method(GanttCalendar,go,void,Y,N,N,public);
Method(GanttCalendar,goNextMonth,void,N,N,N,public);
Method(GanttCalendar,goPrevMonth,void,N,N,N,public);
Method(GanttCalendar,isFixed,boolean,N,N,N,public);
Method(GanttCalendar,module,int,Y,N,N,private);
Method(GanttCalendar,newAdd,GanttCalendar,Y,N,N,public);
Method(GanttCalendar,parseXMLDate,GanttCalendar,Y,N,static,public);
Method(GanttCalendar,setDay,void,Y,N,N,public);
Method(GanttCalendar,setFixed,void,Y,N,N,public);
Method(GanttCalendar,setMonth,void,Y,N,N,public);
Method(GanttCalendar,setYear,void,Y,N,N,public);
Method(GanttCalendar,toString,String,N,N,N,public);
Method(GanttCalendar,toXMLString,String,N,N,N,public);
Method(GanttDialogDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttGraphicArea,getDate,GanttCalendar,N,N,N,public);
Method(GanttLanguage,parseDate,GanttCalendar,Y,N,N,public);
Method(GanttPanelDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttTaskPropertiesBean,getEnd,GanttCalendar,N,N,N,public);
Method(GanttTaskPropertiesBean,getStart,GanttCalendar,N,N,N,public);
Method(ResourceLoadGraphicArea,getDate,GanttCalendar,N,N,N,public);
Method(Task,getEnd,GanttCalendar,N,N,N,package);
Method(Task,getStart,GanttCalendar,N,N,N,package);
Method(TaskDependencyConstraint,getAcceptableStart,GanttCalendar,N,N,N,package);
Method(TaskDependencyConstraint,getAcceptableStart,GanttCalendar,N,N,N,public);
Method(TaskImpl,getEnd,GanttCalendar,N,N,N,public);
Method(TaskImpl,getStart,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getNewFinishDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getNewStartDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getOldFinishDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getOldStartDate,GanttCalendar,N,N,N,public);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskEnd,taskEnd,GanttCalendar,declaration);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,newStart,GanttCalendar,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,maxEndGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,minStartGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextEndGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextStartGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependantEndGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependeeEndGanttCalendar,local);
Parameter(FinishStartConstraintImpl,getCollision,dependantStartGanttCalendar,local);
Parameter(FinishStartConstraintImpl,getCollision,dependeeEndGanttCalendar,local);
Parameter(GanttCalendar,Clone,cloneGanttCalendar,local);
Parameter(GanttCalendar,GanttCalendar,date,Date,declaration);
Parameter(GanttCalendar,GanttCalendar,date,int,declaration);
Parameter(GanttCalendar,GanttCalendar,g,GanttCalendar,declaration);
Parameter(GanttCalendar,GanttCalendar,month,int,declaration);
Parameter(GanttCalendar,GanttCalendar,year,int,declaration);
Parameter(GanttCalendar,add,dayNumber,int,declaration);
Parameter(GanttCalendar,compareTo,comparissonsint[],local);
Parameter(GanttCalendar,compareTo,when,GanttCalendar,declaration);
Parameter(GanttCalendar,diff,d,GanttCalendar,declaration);
Parameter(GanttCalendar,diff,d1GanttCalendar,local);
Parameter(GanttCalendar,diff,d2GanttCalendar,local);
Parameter(GanttCalendar,diff,resint,local);
Parameter(GanttCalendar,equals,when,GanttCalendar,declaration);
Parameter(GanttCalendar,getDateAndTime,cGanttCalendar,local);
Parameter(GanttCalendar,getDayMonthLanguage,resString[],local);
Parameter(GanttCalendar,getDayWeekLanguage,resString[],local);
Parameter(GanttCalendar,go,field,int,declaration);
Parameter(GanttCalendar,go,value,int,declaration);
Parameter(GanttCalendar,module,number,int,declaration);
Parameter(GanttCalendar,newAdd,dayNumber,int,declaration);
Parameter(GanttCalendar,newAdd,gcGanttCalendar,local);
Parameter(GanttCalendar,parseXMLDate,dString,local);
Parameter(GanttCalendar,parseXMLDate,fbint,local);
Parameter(GanttCalendar,parseXMLDate,mString,local);
Parameter(GanttCalendar,parseXMLDate,s,String,declaration);
Parameter(GanttCalendar,parseXMLDate,sbint,local);
Parameter(GanttCalendar,parseXMLDate,tmpGanttCalendar,local);
Parameter(GanttCalendar,parseXMLDate,yString,local);
Parameter(GanttCalendar,setDay,d,int,declaration);
Parameter(GanttCalendar,setFixed,fixed,boolean,declaration);
Parameter(GanttCalendar,setMonth,m,int,declaration);
Parameter(GanttCalendar,setYear,y,int,declaration);
Parameter(GanttCalendarDays,insert,day,GanttCalendar,declaration);
Parameter(GanttCalendarDays,remove,day,GanttCalendar,declaration);
Parameter(GanttDialogDate,GanttDialogDate,date,GanttCalendar,declaration);
Parameter(GanttDialogDate,getDate,resultGanttCalendar,local);
Parameter(GanttDialogProperties,actionPerformed,dateGanttCalendar,local);
Parameter(GanttGraphicArea,GanttGraphicArea,enddateGanttCalendar,local);
Parameter(GanttGraphicArea,changeDate2,gc,GanttCalendar,declaration);
Parameter(GanttGraphicArea,detectPosition,enddateGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,finishGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,maxFinishGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,minStartGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,startGanttCalendar,local);
Parameter(GanttGraphicArea,getChart,date2GanttCalendar,local);
Parameter(GanttGraphicArea,getChart,startGanttCalendar,local);
Parameter(GanttGraphicArea,getGranit,calGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,dateToPaintGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,tmpdateGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,todayGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar2Old,calGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar2Old,date_2GanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar2Old,tmpdateGanttCalendar,local);
Parameter(GanttGraphicArea,setDate,d,GanttCalendar,declaration);
Parameter(GanttLanguage,formatDate,date,GanttCalendar,declaration);
Parameter(GanttLanguage,formatTime,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttDialogDateDay,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttPanelDate,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,clickFunction,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,paintComponent,tmpdateGanttCalendar,local);
Parameter(GanttProject,newTask,calGanttCalendar,local);
Parameter(GanttTask,GanttTask,start,GanttCalendar,declaration);
Parameter(GanttTaskPropertiesBean,changeLength,_endGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,setEnd,_startGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,setEnd,dend,GanttCalendar,declaration);
Parameter(GanttTaskPropertiesBean,setStart,_endGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,setStart,dstart,GanttCalendar,declaration);
Parameter(GanttXFIGSaver,setProjectPlotTimes,endDateGanttCalendar,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,startDateGanttCalendar,local);
Parameter(MutableTask,setEnd,end,GanttCalendar,declaration);
Parameter(MutableTask,setStart,start,GanttCalendar,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,acceptableStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,earliestStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,latestStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,notVariableStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,solutionGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskEnd,taskEnd,GanttCalendar,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,newStart,GanttCalendar,declaration);
Parameter(ResourceLoadGraphicArea,calculateLoad,displayEndGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,displayStartGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,changeDate2,gc,GanttCalendar,declaration);
Parameter(ResourceLoadGraphicArea,getChart,date2GanttCalendar,local);
Parameter(ResourceLoadGraphicArea,getChart,startGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,getGranit,calGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,dateToPaintGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,tmpdateGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,todayGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,calGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,tmpdateGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintLoads,firstStartGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintLoads,lastEndGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,setDate,d,GanttCalendar,declaration);
Parameter(StartFinishConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(StartFinishConstraintImpl,getCollision,dependantEndGanttCalendar,local);
Parameter(StartFinishConstraintImpl,getCollision,dependeeStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,dependantStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,dependeeStartGanttCalendar,local);
Parameter(TaskDependencyConstraint,DefaultCollision,myAcceptableStart,GanttCalendar,declaration);
Parameter(TaskImpl,setDuration,oldFinishGanttCalendar,local);
Parameter(TaskImpl,setEnd,end,GanttCalendar,declaration);
Parameter(TaskImpl,setEnd,oldFinishGanttCalendar,local);
Parameter(TaskImpl,setStart,oldStartGanttCalendar,local);
Parameter(TaskImpl,setStart,start,GanttCalendar,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldFinishDate,GanttCalendar,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldStartDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,newFinishDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,newStartDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,oldFinishDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,oldStartDate,GanttCalendar,declaration);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;compareTo,GanttCalendar,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskEnd,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskStart,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(FinishFinishConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(FinishFinishConstraintImpl;getCollision;newAdd,GanttCalendar,int);
Relation(FinishStartConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttCSVExport;writeTasks;toString,GanttCalendar,N);
Relation(GanttCalendar;Clone;getDay,GanttCalendar,N);
Relation(GanttCalendar;Clone;getMonth,GanttCalendar,N);
Relation(GanttCalendar;Clone;getYear,GanttCalendar,N);
Relation(GanttCalendar;Clone;isFixed,GanttCalendar,N);
Relation(GanttCalendar;Clone;setFixed,GanttCalendar,boolean);
Relation(GanttCalendar;GanttCalendar;getDate,GanttCalendar,N);
Relation(GanttCalendar;GanttCalendar;getMonth,GanttCalendar,N);
Relation(GanttCalendar;GanttCalendar;getYear,GanttCalendar,N);
Relation(GanttCalendar;GanttCalendar;setTime,Calendar,Date);
Relation(GanttCalendar;NgetInstance,GanttLanguage,N);
Relation(GanttCalendar;add;add,GregorianCalendar,int-int);
Relation(GanttCalendar;compareTo;get,Calendar,int);
Relation(GanttCalendar;compareTo;module,GanttCalendar,int);
Relation(GanttCalendar;diff;Clone,GanttCalendar,N);
Relation(GanttCalendar;diff;add,GanttCalendar,int);
Relation(GanttCalendar;diff;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttCalendar;equals;getDay,GanttCalendar,N);
Relation(GanttCalendar;equals;getMonth,GanttCalendar,N);
Relation(GanttCalendar;equals;getYear,GanttCalendar,N);
Relation(GanttCalendar;getDate;get,Calendar,int);
Relation(GanttCalendar;getDateAndTime;formatTime,GanttLanguage,GanttCalendar);
Relation(GanttCalendar;getDateAndTime;getInstance,GanttLanguage,N);
Relation(GanttCalendar;getDateAndTime;toString,GanttCalendar,N);
Relation(GanttCalendar;getDay;get,Calendar,int);
Relation(GanttCalendar;getDayMonthLanguage;getMonth,GanttLanguage,int);
Relation(GanttCalendar;getDayWeek;get,Calendar,int);
Relation(GanttCalendar;getDayWeekLanguage;getDay,GanttLanguage,int);
Relation(GanttCalendar;getMonth;get,Calendar,int);
Relation(GanttCalendar;getNumberOfDay;getActualMaximum,GregorianCalendar,int);
Relation(GanttCalendar;getWeek;get,Calendar,int);
Relation(GanttCalendar;getYear;get,Calendar,int);
Relation(GanttCalendar;getdayMonth;getMonth,GanttCalendar,N);
Relation(GanttCalendar;getdayMonth;getMonth,GanttLanguage,int);
Relation(GanttCalendar;getdayWeek;get,Calendar,int);
Relation(GanttCalendar;getdayWeek;getDay,GanttLanguage,int);
Relation(GanttCalendar;go;add,GregorianCalendar,int-int);
Relation(GanttCalendar;goNextMonth;add,GregorianCalendar,int-int);
Relation(GanttCalendar;goPrevMonth;add,GregorianCalendar,int-int);
Relation(GanttCalendar;newAdd;add,GregorianCalendar,int-int);
Relation(GanttCalendar;newAdd;getDate,GanttCalendar,N);
Relation(GanttCalendar;newAdd;getMonth,GanttCalendar,N);
Relation(GanttCalendar;newAdd;getYear,GanttCalendar,N);
Relation(GanttCalendar;parseXMLDate;hashCode,Integer,N);
Relation(GanttCalendar;parseXMLDate;indexOf,String,int);
Relation(GanttCalendar;parseXMLDate;indexOf,String,int-int);
Relation(GanttCalendar;parseXMLDate;set,Calendar,int-int);
Relation(GanttCalendar;parseXMLDate;substring,String,int);
Relation(GanttCalendar;parseXMLDate;substring,String,int-int);
Relation(GanttCalendar;setDay;set,Calendar,int-int);
Relation(GanttCalendar;setMonth;set,Calendar,int-int);
Relation(GanttCalendar;setYear;set,Calendar,int-int);
Relation(GanttCalendar;toString;formatDate,GanttLanguage,GanttCalendar);
Relation(GanttCalendar;toXMLString;getDate,GanttCalendar,N);
Relation(GanttCalendar;toXMLString;getMonth,GanttCalendar,N);
Relation(GanttCalendar;toXMLString;getYear,GanttCalendar,N);
Relation(GanttDialogDate;GanttDialogDate;isFixed,GanttCalendar,N);
Relation(GanttDialogDate;getDate;setFixed,GanttCalendar,boolean);
Relation(GanttDialogProperties;actionPerformed;setEnd,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttDialogProperties;actionPerformed;setStart,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttGraphicArea;GanttGraphicArea;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;GanttGraphicArea;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;GanttGraphicArea;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;GanttGraphicArea;setDay,GanttCalendar,int);
Relation(GanttGraphicArea;GanttGraphicArea;setStart,TaskImpl,GanttCalendar);
Relation(GanttGraphicArea;GanttGraphicArea;toString,GanttCalendar,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;add,GanttCalendar,int);
Relation(GanttGraphicArea;calcProjectBegAndEnd;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;changeDate2;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;changeDate;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;detectPosition;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;detectPosition;toString,GanttCalendar,N);
Relation(GanttGraphicArea;fitWholeProject;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;fitWholeProject;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;fitWholeProject;diff,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;fitWholeProject;setDate,GanttGraphicArea,GanttCalendar);
Relation(GanttGraphicArea;getChart;changeDate2,GanttGraphicArea,GanttCalendar);
Relation(GanttGraphicArea;getChart;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;getFoot;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;getGranit;goNextMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;add,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar1;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintCalendar1;equals,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintCalendar1;getDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getdayMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getdayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar1;toString,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;add,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar2Old;getDate,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getdayMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getdayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;goNextMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;paintTasks;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintTasks;diff,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;zoomLess;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;zoomLess;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;zoomMore;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;zoomToBegin;add,GanttCalendar,int);
Relation(GanttGraphicArea;zoomToBegin;getDayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;zoomToBegin;setDay,GanttCalendar,int);
Relation(GanttGraphicArea;zoomToBegin;setMonth,GanttCalendar,int);
Relation(GanttHTMLExport;save;getDateAndTime,GanttCalendar,N);
Relation(GanttPanelDate;GanttPanelDate;Clone,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;Clone,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;go,GanttCalendar,int-int);
Relation(GanttPanelDate;clickFunction;setDay,GanttCalendar,int);
Relation(GanttPanelDate;paintComponent;Clone,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDate,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDayWeekLanguage,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getMonth,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;go,GanttCalendar,int-int);
Relation(GanttPanelDate;paintComponent;setDay,GanttCalendar,int);
Relation(GanttProject;newTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttProject;setResourcePanelToGraphicArea;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttTask;GanttTask;setStart,MutableTask,GanttCalendar);
Relation(GanttTaskPropertiesBean;changeLength;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;changeLength;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getDateAndTime,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;getReturnTask;setEnd,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getReturnTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getStart;setFixed,GanttCalendar,boolean);
Relation(GanttTaskPropertiesBean;setEnd;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setEnd;diff,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setEnd;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;setEnd;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;Clone,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;setEnd,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;setStart,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setStart;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setStart;diff,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setStart;isFixed,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setStart;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;setStart;toString,GanttCalendar,N);
Relation(GanttTree;insertClonedNode;setStart,TaskImpl,GanttCalendar);
Relation(GanttXFIGSaver;setProjectPlotTimes;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttXFIGSaver;setProjectPlotTimes;diff,GanttCalendar,GanttCalendar);
Relation(GanttXFIGSaver;task2box;diff,GanttCalendar,GanttCalendar);
Relation(GanttXMLOpen;startElement;parseXMLDate,GanttCalendar,String);
Relation(GanttXMLOpen;startElement;setDate,GanttGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setStart,TaskImpl,GanttCalendar);
Relation(GanttXMLSaver;save;toXMLString,GanttCalendar,N);
Relation(GanttXMLSaver;writeTask;toXMLString,GanttCalendar,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;compareTo,GanttCalendar,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;modifyTaskStart,RecalculateTaskScheduleAlgorithm,Task-GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setDay,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;calculateLoad;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;calculateLoad;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;calculateLoad;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;calculateLoad;diff,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;changeDate2;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;changeDate;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;getChart;changeDate2,ResourceLoadGraphicArea,GanttCalendar);
Relation(ResourceLoadGraphicArea;getChart;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;getFoot;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;getGranit;goNextMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;paintCalendar1;getDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getdayMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getdayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;newAdd,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;toString,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar2;getDate,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getdayMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getdayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;goNextMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintLoads;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;paintLoads;diff,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;zoomLess;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomLess;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomMore;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomToBegin;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;zoomToBegin;getDayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomToBegin;setDay,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;zoomToBegin;setMonth,GanttCalendar,int);
Relation(StartFinishConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(StartFinishConstraintImpl;getCollision;newAdd,GanttCalendar,int);
Relation(StartStartConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(TaskImpl;getEnd;Clone,GanttCalendar,N);
Relation(TaskImpl;getEnd;add,GanttCalendar,int);
Relation(TaskImpl;setDuration;Clone,GanttCalendar,N);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setDuration;newAdd,GanttCalendar,int);
Relation(TaskImpl;setEnd;Clone,GanttCalendar,N);
Relation(TaskImpl;setEnd;diff,GanttCalendar,GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;setEnd,TaskImpl,GanttCalendar);
Relation(TaskImpl;setStart;Clone,GanttCalendar,N);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;setStart,TaskImpl,GanttCalendar);
Relation(TaskManagerImpl;getRootTask;setStart,MutableTask,GanttCalendar);
Relation(TaskTagHandler;loadTask;parseXMLDate,GanttCalendar,String);
Relation(TaskTagHandler;loadTask;setStart,TaskImpl,GanttCalendar);
end b33
start b34
Attribute(HumanResource,myRole,Role,N,private);
Attribute(HumanResourceManager,myDefaultRole,Role,N,private);
Class(Role,N,N,public);
Method(HumanResource,getRole,Role,N,N,N,public);
Method(ResourceTagHandler,findRole,Role,Y,N,N,private);
Method(Role,getID,int,N,N,N,package);
Method(Role,getName,String,N,N,N,package);
Method(Role,getPersistentID,String,N,N,N,package);
Method(RoleManager,getDefaultRole,Role,N,N,N,public);
Method(RoleManagerImpl,getDefaultRole,Role,N,N,N,public);
Method(RoleSet,createRole,Role,Y,N,N,package);
Method(RoleSet,findRole,Role,Y,N,N,package);
Method(RoleSetImpl,createRole,Role,Y,N,N,public);
Method(RoleSetImpl,findRole,Role,Y,N,N,public);
Parameter(GanttCSVExport,getMaxSize,roleRole,local);
Parameter(GanttCSVExport,writeResources,roleRole,local);
Parameter(GanttOptions,saveRoles,nextRole,local);
Parameter(GanttXMLSaver,saveRoles,nextRole,local);
Parameter(GanttXMLSaver,writeRoles,nextRole,local);
Parameter(HumanResource,setRole,role,Role,declaration);
Parameter(HumanResourceManager,HumanResourceManager,defaultRole,Role,declaration);
Parameter(I18N,formatRoleForTooltip,role,Role,declaration);
Parameter(ResourceTagHandler,findRole,resultRole,local);
Parameter(ResourceTagHandler,parsingFinished,nextRoleRole,local);
Parameter(RoleSet,deleteRole,role,Role,declaration);
Parameter(RoleSetImpl,deleteRole,role,Role,declaration);
Parameter(RoleSetImpl,findRole,nextRole,local);
Parameter(RoleSetImpl,findRole,resultRole,local);
Parameter(RoleSetPage,createTooltipText,nextRoleRole,local);
Parameter(RoleTagHandler,loadRoles,existingRoleRole,local);
Relation(GanttCSVExport;getMaxSize;getPersistentID,Role,N);
Relation(GanttCSVExport;writeResources;getPersistentID,Role,N);
Relation(GanttDialogPerson;okButtonActionPerformed;setRole,HumanResource,Role);
Relation(GanttHTMLExport;writeResources;getName,Role,N);
Relation(GanttOptions;saveRoles;getID,Role,N);
Relation(GanttOptions;saveRoles;getName,Role,N);
Relation(GanttPDFExport;writeResources;getName,Role,N);
Relation(GanttResourcePanel;getValueAt;getName,Role,N);
Relation(GanttXMLSaver;saveRoles;getName,Role,N);
Relation(GanttXMLSaver;saveRoles;getPersistentID,Role,N);
Relation(GanttXMLSaver;writeResources;getPersistentID,Role,N);
Relation(GanttXMLSaver;writeRoles;getName,Role,N);
Relation(GanttXMLSaver;writeRoles;getPersistentID,Role,N);
Relation(HumanResourceManager;create;setRole,HumanResource,Role);
Relation(HumanResourceManager;newHumanResource;setRole,HumanResource,Role);
Relation(I18N;formatRoleForTooltip;getName,Role,N);
Relation(NewHumanAction;actionPerformed;setRole,HumanResource,Role);
Relation(ResourceTagHandler;parsingFinished;setRole,HumanResource,Role);
Relation(RoleSetImpl;findRole;getID,Role,N);
Relation(RoleSetPage;createTooltipText;formatRoleForTooltip,I18N,Role);
Relation(RolesTableModel;RolesTableModel;getName,Role,N);
Relation(RolesTableModel;hasChanges;getName,Role,N);
end b34
start b35
Class(Rectangle,N,static,package);
Method(GraphicPrimitiveContainer,createRectangle,Rectangle,Y,N,N,package);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,headerRectangleRectangle,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,spanningHeaderBorderRectangle,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,timeunitHeaderBorderRectangle,local);
Parameter(GanttTree,autoscroll,raOuterRectangle,local);
Parameter(GanttTree,dragGestureRecognized,raPathRectangle,local);
Parameter(GanttTree,dragOver,raPathRectangle,local);
Parameter(GanttTree,getAutoscrollInsets,raInnerRectangle,local);
Parameter(GanttTree,getAutoscrollInsets,raOuterRectangle,local);
Parameter(GraphicPrimitiveContainer,createRectangle,resultRectangle,local);
Parameter(GraphicPrimitiveContainer,paint,nextRectangle,local);
Parameter(PaintCellRenderer,paintComponent,rectRectangle,local);
Parameter(PreviewPanel,paintComponent,rectRectangle,local);
Relation(GanttTree;dragExit;repaint,JComponent,Rectangle);
Relation(GanttTree;dragGestureRecognized;getHeight,Rectangle,N);
Relation(GanttTree;dragGestureRecognized;getWidth,Rectangle,N);
Relation(GanttTree;dragOver;getHeight,Rectangle,N);
Relation(GanttTree;dragOver;paintImmediately,JComponent,Rectangle);
end b35
start b36
Class(Line,N,static,package);
Method(GraphicPrimitiveContainer,createLine,Line,Y,N,N,package);
Parameter(ChartHeaderImpl,createFrames,nextLineLine,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,bottomGutterLine,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,middleGutter1Line,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,middleGutter2Line,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,topGutterLine,local);
Parameter(GraphicPrimitiveContainer,createLine,resultLine,local);
Parameter(GraphicPrimitiveContainer,paint,nextLine,local);
end b36
start b37
Attribute(AboutLibraryPanel,columnClasses,Class[],N,package);
Attribute(AboutLibraryPanel,columnNames,String[],N,package);
Attribute(AboutLibraryPanel,data,Vector,N,package);
Attribute(AboutLibraryPanel,language,GanttLanguage,N,private);
Attribute(AboutLibraryPanel,libComment,String,N,private);
Attribute(AboutLibraryPanel,libName,String,N,private);
Attribute(AboutLibraryPanel,libWeb,String,N,private);
Class(AboutLibraryPanel,N,N,public);
Generalisation(AboutLibraryPanel,AbstractTableModel);
Generalisation(AboutLibraryPanel,GeneralOptionPanel);
Method(AboutLibraryPanel,AboutLibraryPanel,N,Y,N,N,public);
Method(AboutLibraryPanel,LibraryInfo,N,Y,N,N,public);
Method(AboutLibraryPanel,addField,void,Y,N,N,public);
Method(AboutLibraryPanel,applyChanges,boolean,Y,N,N,public);
Method(AboutLibraryPanel,getColumnClass,Class,Y,N,N,public);
Method(AboutLibraryPanel,getColumnCount,int,N,N,N,public);
Method(AboutLibraryPanel,getColumnName,String,Y,N,N,public);
Method(AboutLibraryPanel,getComment,String,N,N,N,public);
Method(AboutLibraryPanel,getName,String,N,N,N,public);
Method(AboutLibraryPanel,getRowCount,int,N,N,N,public);
Method(AboutLibraryPanel,getValueAt,Object,Y,N,N,public);
Method(AboutLibraryPanel,getWeb,String,N,N,N,public);
Method(AboutLibraryPanel,initialize,void,N,N,N,public);
Method(AboutLibraryPanel,isCellEditable,boolean,Y,N,N,public);
Parameter(AboutLibraryPanel,AboutLibraryPanel,jTableLibJTable,local);
Parameter(AboutLibraryPanel,AboutLibraryPanel,libraryPanelJPanel,local);
Parameter(AboutLibraryPanel,AboutLibraryPanel,modellibLibraryFieldTableModel,local);
Parameter(AboutLibraryPanel,AboutLibraryPanel,parent,GanttProject,declaration);
Parameter(AboutLibraryPanel,LibraryInfo,libComment,String,declaration);
Parameter(AboutLibraryPanel,LibraryInfo,libCompany,String,declaration);
Parameter(AboutLibraryPanel,LibraryInfo,libName,String,declaration);
Parameter(AboutLibraryPanel,addField,w,LibraryInfo,declaration);
Parameter(AboutLibraryPanel,applyChanges,askForApply,boolean,declaration);
Parameter(AboutLibraryPanel,getColumnClass,c,int,declaration);
Parameter(AboutLibraryPanel,getColumnName,col,int,declaration);
Parameter(AboutLibraryPanel,getValueAt,col,int,declaration);
Parameter(AboutLibraryPanel,getValueAt,infoLibraryInfo,local);
Parameter(AboutLibraryPanel,getValueAt,row,int,declaration);
Parameter(AboutLibraryPanel,isCellEditable,col,int,declaration);
Parameter(AboutLibraryPanel,isCellEditable,row,int,declaration);
Relation(AboutLibraryPanel;AboutLibraryPanel;add,Container,Component);
Relation(AboutLibraryPanel;AboutLibraryPanel;add,Container,Component-Object);
Relation(AboutLibraryPanel;AboutLibraryPanel;addField,LibraryFieldTableModel,LibraryInfo);
Relation(AboutLibraryPanel;AboutLibraryPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(AboutLibraryPanel;AboutLibraryPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutLibraryPanel;AboutLibraryPanel;getInstance,GanttLanguage,N);
Relation(AboutLibraryPanel;AboutLibraryPanel;getText,GanttLanguage,String);
Relation(AboutLibraryPanel;AboutLibraryPanel;setModel,JTable,TableModel);
Relation(AboutLibraryPanel;AboutLibraryPanel;setPreferredSize,JComponent,Dimension);
Relation(AboutLibraryPanel;NgetInstance,GanttLanguage,N);
Relation(AboutLibraryPanel;NgetText,GanttLanguage,String);
Relation(AboutLibraryPanel;addField;addElement,Vector,Object);
Relation(AboutLibraryPanel;addField;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(AboutLibraryPanel;addField;size,Vector,N);
Relation(AboutLibraryPanel;getRowCount;size,Vector,N);
Relation(AboutLibraryPanel;getValueAt;elementAt,Vector,int);
Relation(AboutLibraryPanel;getValueAt;getComment,LibraryInfo,N);
Relation(AboutLibraryPanel;getValueAt;getName,LibraryInfo,N);
Relation(AboutLibraryPanel;getValueAt;getWeb,LibraryInfo,N);
end b37
start b38
Class(TaskMutator,N,N,public);
Method(Task,createMutator,TaskMutator,N,N,N,package);
Method(TaskImpl,createMutator,TaskMutator,N,N,N,public);
Method(TaskMutator,commit,void,N,N,N,package);
Parameter(GanttTask,GanttTask,mutatorTaskMutator,local);
Parameter(GanttTask,setLength,mutatorTaskMutator,local);
Relation(GanttTask;GanttTask;commit,TaskMutator,N);
Relation(GanttTask;setLength;commit,TaskMutator,N);
end b38
start b39
Attribute(TaskImpl,myLength,TaskLength,N,private);
Class(TaskLength,N,N,public);
Method(Task,getDuration,TaskLength,N,N,N,package);
Method(TaskImpl,getDuration,TaskLength,N,N,N,public);
Method(TaskLength,getLength,long,N,N,N,package);
Method(TaskLength,getLength,long,Y,N,N,package);
Method(TaskLength,getTimeUnit,TimeUnit,N,N,N,package);
Method(TaskManager,createLength,TaskLength,Y,N,N,package);
Method(TaskManagerImpl,createLength,TaskLength,Y,N,N,public);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,durationTaskLength,local);
Parameter(GanttGraphicArea,GanttGraphicArea,durationTaskLength,local);
Parameter(MutableTask,setDuration,length,TaskLength,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,durationTaskLength,local);
Parameter(TaskImpl,setDuration,length,TaskLength,declaration);
Parameter(TaskLength,getLength,unit,TimeUnit,declaration);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(CommonPanel;setupCommonFields;getLength,TaskLength,N);
Relation(FinishFinishConstraintImpl;getCollision;getLength,TaskLength,N);
Relation(GanttGraphicArea;GanttGraphicArea;setDuration,TaskImpl,TaskLength);
Relation(GanttTask;GanttTask;setDuration,MutableTask,TaskLength);
Relation(GanttTask;getLength;getLength,TaskLength,N);
Relation(GanttTask;setLength;getTimeUnit,TaskLength,N);
Relation(GanttTask;setLength;setDuration,MutableTask,TaskLength);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getLength,TaskLength,N);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(StartFinishConstraintImpl;getCollision;getLength,TaskLength,N);
Relation(TaskImpl;getEnd;getLength,TaskLength,N);
Relation(TaskImpl;setDuration;getLength,TaskLength,N);
Relation(TaskImpl;setDuration;setDuration,TaskImpl,TaskLength);
Relation(TaskImpl;setEnd;getTimeUnit,TaskLength,N);
Relation(TaskManagerImpl;getRootTask;setDuration,MutableTask,TaskLength);
end b39
start b40
Attribute(ExportSettingsPanel,appli,GanttProject,N,private);
Attribute(ExportSettingsPanel,cb3dBorder,JCheckBox,N,package);
Attribute(ExportSettingsPanel,cbComplete,JCheckBox,N,package);
Attribute(ExportSettingsPanel,cbName,JCheckBox,N,package);
Attribute(ExportSettingsPanel,cbRelations,JCheckBox,N,package);
Class(ExportSettingsPanel,N,N,public);
Generalisation(ExportSettingsPanel,GeneralOptionPanel);
Method(ExportSettingsPanel,ExportSettingsPanel,N,Y,N,N,public);
Method(ExportSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(ExportSettingsPanel,getExport3DBorder,boolean,N,N,N,package);
Method(ExportSettingsPanel,getExportComplete,boolean,N,N,N,package);
Method(ExportSettingsPanel,getExportName,boolean,N,N,N,package);
Method(ExportSettingsPanel,getExportRelations,boolean,N,N,N,package);
Method(ExportSettingsPanel,initialize,void,N,N,N,public);
Parameter(ExportSettingsPanel,ExportSettingsPanel,bordersPanelJPanel,local);
Parameter(ExportSettingsPanel,ExportSettingsPanel,completePanelJPanel,local);
Parameter(ExportSettingsPanel,ExportSettingsPanel,namePanelJPanel,local);
Parameter(ExportSettingsPanel,ExportSettingsPanel,parent,GanttProject,declaration);
Parameter(ExportSettingsPanel,ExportSettingsPanel,relationsPanelJPanel,local);
Parameter(ExportSettingsPanel,applyChanges,askForApply,boolean,declaration);
Relation(ExportSettingsPanel;ExportSettingsPanel;add,Container,Component);
Relation(ExportSettingsPanel;ExportSettingsPanel;add,Container,Component-Object);
Relation(ExportSettingsPanel;ExportSettingsPanel;correctLabel,GanttProject,String);
Relation(ExportSettingsPanel;ExportSettingsPanel;getInstance,GanttLanguage,N);
Relation(ExportSettingsPanel;ExportSettingsPanel;getText,GanttLanguage,String);
Relation(ExportSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ExportSettingsPanel;applyChanges;getExport3DBorder,ExportSettingsPanel,N);
Relation(ExportSettingsPanel;applyChanges;getExport3dBorders,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportComplete,ExportSettingsPanel,N);
Relation(ExportSettingsPanel;applyChanges;getExportComplete,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportName,ExportSettingsPanel,N);
Relation(ExportSettingsPanel;applyChanges;getExportName,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportRelations,ExportSettingsPanel,N);
Relation(ExportSettingsPanel;applyChanges;getExportRelations,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(ExportSettingsPanel;applyChanges;setExport3dBorders,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportComplete,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportName,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportRelations,GanttOptions,boolean);
Relation(ExportSettingsPanel;getExport3DBorder;isSelected,AbstractButton,N);
Relation(ExportSettingsPanel;getExportComplete;isSelected,AbstractButton,N);
Relation(ExportSettingsPanel;getExportName;isSelected,AbstractButton,N);
Relation(ExportSettingsPanel;getExportRelations;isSelected,AbstractButton,N);
Relation(ExportSettingsPanel;initialize;getExport3dBorders,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportComplete,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportName,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportRelations,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(ExportSettingsPanel;initialize;setSelected,AbstractButton,boolean);
end b40
start b41
Attribute(NewArtefactAction,myProvider,ActiveActionProvider,N,private);
Class(ActiveActionProvider,N,static,public);
Parameter(NewArtefactAction,NewArtefactAction,provider,ActiveActionProvider,declaration);
Relation(NewArtefactAction;actionPerformed;getActiveAction,ActiveActionProvider,N);
end b41
start b42
Class(TaskDependencySliceAsDependant,N,N,public);
Generalisation(TaskDependencySliceAsDependant,TaskDependencySliceImpl);
Method(TaskDependencySliceAsDependant,TaskDependencySliceAsDependant,N,Y,N,N,public);
Method(TaskDependencySliceAsDependant,toArray,TaskDependency[],N,N,N,public);
Parameter(TaskDependencySliceAsDependant,TaskDependencySliceAsDependant,dependencyCollection,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceAsDependant,TaskDependencySliceAsDependant,task,Task,declaration);
Relation(TaskDependencySliceAsDependant;toArray;getDependenciesAsDependant,TaskDependencyCollection,Task);
Relation(TaskDependencySliceAsDependant;toArray;getDependencyCollection,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceAsDependant;toArray;getTask,TaskDependencySliceImpl,N);
end b42
start b43
Class(GanttTreeModelListener,N,N,public);
end b43
start b44
Class(GanttPaintParam,N,N,public);
Parameter(GanttGraphicArea,GanttGraphicArea,paramGanttPaintParam,local);
Parameter(GanttGraphicArea,detectPosition,paramGanttPaintParam,local);
Parameter(GanttGraphicArea,setTaskToMove,paramGanttPaintParam,local);
end b44
start b45
Attribute(RoleManagerImpl,DEFAULT_ROLE_SET,RoleSetImpl,static,package);
Attribute(RoleManagerImpl,SOFTWARE_DEVELOPMENT_ROLE_SET,RoleSetImpl,static,package);
Attribute(RoleManagerImpl,myProjectRoleSet,RoleSetImpl,N,private);
Attribute(RoleSetImpl,isEnabled,boolean,N,private);
Attribute(RoleSetImpl,myName,String,N,private);
Attribute(RoleSetImpl,myRoles,ArrayList,N,private);
Class(RoleSetImpl,N,N,public);
Method(RoleSetImpl,RoleSetImpl,N,N,N,N,public);
Method(RoleSetImpl,RoleSetImpl,N,Y,N,N,package);
Method(RoleSetImpl,clear,void,N,N,N,public);
Method(RoleSetImpl,createRole,Role,Y,N,N,public);
Method(RoleSetImpl,deleteRole,void,Y,N,N,public);
Method(RoleSetImpl,findRole,Role,Y,N,N,public);
Method(RoleSetImpl,getName,String,N,N,N,public);
Method(RoleSetImpl,getRoles,Role[],N,N,N,public);
Method(RoleSetImpl,isEmpty,boolean,N,N,N,public);
Method(RoleSetImpl,isEnabled,boolean,N,N,N,public);
Method(RoleSetImpl,setEnabled,void,Y,N,N,public);
Method(RoleSetImpl,toString,String,N,N,N,public);
Parameter(RoleSetImpl,RoleSetImpl,name,String,declaration);
Parameter(RoleSetImpl,createRole,name,String,declaration);
Parameter(RoleSetImpl,createRole,persistentID,int,declaration);
Parameter(RoleSetImpl,createRole,resultRoleImpl,local);
Parameter(RoleSetImpl,deleteRole,role,Role,declaration);
Parameter(RoleSetImpl,findRole,nextRole,local);
Parameter(RoleSetImpl,findRole,resultRole,local);
Parameter(RoleSetImpl,findRole,roleID,int,declaration);
Parameter(RoleSetImpl,setEnabled,isEnabled,boolean,declaration);
Relation(RoleManagerImpl;NcreateRole,RoleSetImpl,String-int);
Relation(RoleManagerImpl;NsetEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;RoleManagerImpl;setEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;add;createRole,RoleSetImpl,String-int);
Relation(RoleManagerImpl;clear;setEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;getDefaultRole;findRole,RoleSetImpl,int);
Relation(RoleManagerImpl;getProjectLevelRoles;getRoles,RoleSetImpl,N);
Relation(RoleSetImpl;clear;clear,ArrayList,N);
Relation(RoleSetImpl;createRole;add,ArrayList,Object);
Relation(RoleSetImpl;deleteRole;remove,ArrayList,Object);
Relation(RoleSetImpl;findRole;get,ArrayList,int);
Relation(RoleSetImpl;findRole;getID,Role,N);
Relation(RoleSetImpl;findRole;size,ArrayList,N);
Relation(RoleSetImpl;getRoles;toArray,ArrayList,Object[]);
Relation(RoleSetImpl;isEmpty;isEmpty,ArrayList,N);
Relation(RoleSetImpl;toString;getName,RoleSetImpl,N);
end b45
start b46
Attribute(FontTriplet,isBold,boolean,N,private);
Attribute(FontTriplet,isItalic,boolean,N,private);
Attribute(FontTriplet,myName,String,N,private);
Class(FontTriplet,N,N,public);
Method(FontTriplet,FontTriplet,N,Y,N,N,public);
Method(FontTriplet,getName,String,N,N,N,public);
Method(FontTriplet,isBold,boolean,N,N,N,public);
Method(FontTriplet,isItalic,boolean,N,N,N,public);
Parameter(FontRecord,addTriplet,triplet,FontTriplet,declaration);
Parameter(FontTriplet,FontTriplet,bold,boolean,declaration);
Parameter(FontTriplet,FontTriplet,italic,boolean,declaration);
Parameter(FontTriplet,FontTriplet,name,String,declaration);
Parameter(GanttPDFExport,writeTriplets,nextFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,monospaceTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,sansTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,serifTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,tripletFontTriplet,local);
Parameter(PDFExportProcessor,writeTriplets,nextFontTriplet,local);
Relation(GanttPDFExport;writeTriplets;getName,FontTriplet,N);
Relation(GanttPDFExport;writeTriplets;isBold,FontTriplet,N);
Relation(GanttPDFExport;writeTriplets;isItalic,FontTriplet,N);
Relation(JDKFontLocator;populateWithTriplets;addTriplet,FontRecord,FontTriplet);
Relation(PDFExportProcessor;writeTriplets;getName,FontTriplet,N);
Relation(PDFExportProcessor;writeTriplets;isBold,FontTriplet,N);
Relation(PDFExportProcessor;writeTriplets;isItalic,FontTriplet,N);
end b46
start b47
Attribute(GanttDialogCalendar,bDelete,JButton,N,private);
Attribute(GanttDialogCalendar,bImport,JButton,N,private);
Attribute(GanttDialogCalendar,bNew,JButton,N,private);
Attribute(GanttDialogCalendar,bNonWork,JRadioButton,N,private);
Attribute(GanttDialogCalendar,bSelectDays,JButton,N,private);
Attribute(GanttDialogCalendar,bWork,JRadioButton,N,private);
Attribute(GanttDialogCalendar,language,GanttLanguage,N,private);
Attribute(GanttDialogCalendar,listCalendar,JList,N,private);
Attribute(GanttDialogCalendar,panelDate,GanttPanelDate,N,private);
Class(GanttDialogCalendar,N,N,public);
Generalisation(GanttDialogCalendar,JDialog);
Method(GanttDialogCalendar,GanttDialogCalendar,N,Y,N,N,public);
Method(GanttDialogCalendar,actionPerformed,void,Y,N,N,public);
Parameter(GanttDialogCalendar,GanttDialogCalendar,cancelJButton,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,listString[],local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,okJButton,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,pJPanel,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,panel1JPanel,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,panel2JPanel,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,panel3JPanel,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,parent,JFrame,declaration);
Parameter(GanttDialogCalendar,GanttDialogCalendar,topJToolBar,local);
Parameter(GanttDialogCalendar,GanttDialogCalendar,vb1Box,local);
Parameter(GanttDialogCalendar,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttDialogCalendar,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttProject,actionPerformed,dialogCalendarGanttDialogCalendar,local);
Relation(GanttDialogCalendar;GanttDialogCalendar;add,Container,Component);
Relation(GanttDialogCalendar;GanttDialogCalendar;add,Container,Component-Object);
Relation(GanttDialogCalendar;GanttDialogCalendar;addActionListener,AbstractButton,ActionListener);
Relation(GanttDialogCalendar;GanttDialogCalendar;addSeparator,JToolBar,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogCalendar;GanttDialogCalendar;center,DialogAligner,JDialog-Container);
Relation(GanttDialogCalendar;GanttDialogCalendar;correctLabel,GanttProject,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;createVerticalBox,Box,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getClass,Object,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getContentPane,JDialog,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getInstance,GanttLanguage,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getParent,Component,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getResource,Class<>,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;getRootPane,JDialog,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getText,GanttLanguage,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;getToolTip,GanttProject,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;pack,Window,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogCalendar;GanttDialogCalendar;setFloatable,JToolBar,boolean);
Relation(GanttDialogCalendar;GanttDialogCalendar;setResizable,Dialog,boolean);
Relation(GanttDialogCalendar;GanttDialogCalendar;setToolTipText,JComponent,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;setVisible,Dialog,boolean);
Relation(GanttDialogCalendar;NgetInstance,GanttLanguage,N);
end b47
start b48
Attribute(GanttDialogProperties,aarea,GanttGraphicArea,N,private);
Attribute(GanttDialogProperties,advancementLabel,JLabel,N,private);
Attribute(GanttDialogProperties,area,GanttGraphicArea,N,private);
Attribute(GanttDialogProperties,button,JButton,N,private);
Attribute(GanttDialogProperties,change,boolean,N,public);
Attribute(GanttDialogProperties,colorChooser,JColorChooser,static,protected);
Attribute(GanttDialogProperties,haschild,boolean,N,package);
Attribute(GanttDialogProperties,jcbbilan,JCheckBox,N,private);
Attribute(GanttDialogProperties,jcbfather,JComboBox,N,private);
Attribute(GanttDialogProperties,jtfbegin,JTextField,N,private);
Attribute(GanttDialogProperties,jtflength,JTextField,N,private);
Attribute(GanttDialogProperties,jtfname,JTextField,N,private);
Attribute(GanttDialogProperties,lang,GanttLanguage,N,private);
Attribute(GanttDialogProperties,parent,JFrame,N,private);
Attribute(GanttDialogProperties,percentValue,int,N,package);
Attribute(GanttDialogProperties,prj,JFrame,N,package);
Attribute(GanttDialogProperties,saveColor,Color,N,package);
Attribute(GanttDialogProperties,saveDuration,int,N,package);
Attribute(GanttDialogProperties,spercent,JSlider,N,private);
Attribute(GanttDialogProperties,task,Task,N,private);
Attribute(GanttDialogProperties,taskPropertiesBean,GanttTaskPropertiesBean,N,private);
Attribute(GanttDialogProperties,tree,GanttTree,N,private);
Attribute(GanttDialogProperties,ttask,Task,N,private);
Attribute(GanttDialogProperties,ttree,GanttTree,N,private);
Class(GanttDialogProperties,N,N,public);
Generalisation(GanttDialogProperties,JDialog);
Method(GanttDialogProperties,GanttDialogProperties,N,Y,N,N,public);
Method(GanttDialogProperties,actionPerformed,void,Y,N,N,public);
Method(GanttDialogProperties,findTheIndex,int,Y,N,N,private);
Method(GanttDialogProperties,getTaskManager,TaskManager,N,N,N,private);
Parameter(GanttDialogProperties,GanttDialogProperties,area,GanttGraphicArea,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,cpContainer,local);
Parameter(GanttDialogProperties,GanttDialogProperties,managerHash,Hashtable,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,parent,JFrame,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,task,GanttTask,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,tree,GanttTree,declaration);
Parameter(GanttDialogProperties,actionPerformed,buttonJButton,local);
Parameter(GanttDialogProperties,actionPerformed,buttonTestGanttRolloverButton,local);
Parameter(GanttDialogProperties,actionPerformed,dateGanttCalendar,local);
Parameter(GanttDialogProperties,actionPerformed,ddGanttDialogDate,local);
Parameter(GanttDialogProperties,actionPerformed,durationint,local);
Parameter(GanttDialogProperties,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogProperties,actionPerformed,fatherDefaultMutableTreeNode,local);
Parameter(GanttDialogProperties,actionPerformed,gdiErrorGanttDialogInfo,local);
Parameter(GanttDialogProperties,actionPerformed,returnTaskTask,local);
Parameter(GanttDialogProperties,actionPerformed,textfieldJTextField,local);
Parameter(GanttDialogProperties,findTheIndex,lot,String[],declaration);
Parameter(GanttDialogProperties,findTheIndex,s,Object,declaration);
Parameter(GanttProject,propertiesTask,pdGanttDialogProperties,local);
Relation(GanttDialogProperties;GanttDialogProperties;add,Container,Component-Object);
Relation(GanttDialogProperties;GanttDialogProperties;addActionListener,GanttTaskPropertiesBean,ActionListener);
Relation(GanttDialogProperties;GanttDialogProperties;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogProperties;GanttDialogProperties;center,DialogAligner,JDialog-Container);
Relation(GanttDialogProperties;GanttDialogProperties;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogProperties;GanttDialogProperties;getContentPane,JDialog,N);
Relation(GanttDialogProperties;GanttDialogProperties;getInstance,GanttLanguage,N);
Relation(GanttDialogProperties;GanttDialogProperties;getLength,GanttTask,N);
Relation(GanttDialogProperties;GanttDialogProperties;getParent,Component,N);
Relation(GanttDialogProperties;GanttDialogProperties;getRootPane,JDialog,N);
Relation(GanttDialogProperties;GanttDialogProperties;getText,GanttLanguage,String);
Relation(GanttDialogProperties;GanttDialogProperties;pack,Window,N);
Relation(GanttDialogProperties;GanttDialogProperties;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogProperties;GanttDialogProperties;setResizable,Dialog,boolean);
Relation(GanttDialogProperties;GanttDialogProperties;toString,GanttTask,N);
Relation(GanttDialogProperties;NgetInstance,GanttLanguage,N);
Relation(GanttDialogProperties;actionPerformed;changeLength,GanttTaskPropertiesBean,int);
Relation(GanttDialogProperties;actionPerformed;changeNameOfTask,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;dispose,Window,N);
Relation(GanttDialogProperties;actionPerformed;equals,String,Object);
Relation(GanttDialogProperties;actionPerformed;getDate,GanttDialogDate,N);
Relation(GanttDialogProperties;actionPerformed;getEnd,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttDialogProperties;actionPerformed;getJTree,GanttTree,N);
Relation(GanttDialogProperties;actionPerformed;getName,Component,N);
Relation(GanttDialogProperties;actionPerformed;getNode,GanttTree,int);
Relation(GanttDialogProperties;actionPerformed;getReturnTask,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getSource,EventObject,N);
Relation(GanttDialogProperties;actionPerformed;getStart,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getTaskID,Task,N);
Relation(GanttDialogProperties;actionPerformed;getText,GanttLanguage,String);
Relation(GanttDialogProperties;actionPerformed;getText,JTextComponent,N);
Relation(GanttDialogProperties;actionPerformed;parseInt,Integer,String);
Relation(GanttDialogProperties;actionPerformed;repaint,Component,N);
Relation(GanttDialogProperties;actionPerformed;setEnd,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttDialogProperties;actionPerformed;setRowHeight,JTree,int);
Relation(GanttDialogProperties;actionPerformed;setStart,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttDialogProperties;actionPerformed;setText,JTextComponent,String);
Relation(GanttDialogProperties;actionPerformed;setUserObject,DefaultMutableTreeNode,Object);
Relation(GanttDialogProperties;actionPerformed;setVisible,Dialog,boolean);
Relation(GanttDialogProperties;actionPerformed;show,Dialog,N);
Relation(GanttDialogProperties;actionPerformed;trim,String,N);
Relation(GanttDialogProperties;actionPerformed;updateUI,JTree,N);
Relation(GanttDialogProperties;findTheIndex;toString,Object,N);
Relation(GanttDialogProperties;getTaskManager;getManager,Task,N);
end b48
start b49
Attribute(GanttXMLSaver,myProject,IGanttProject,N,private);
Attribute(NewTaskAction,myProject,IGanttProject,N,private);
Attribute(ProjectSettingsPanel,myProject,IGanttProject,N,private);
Class(IGanttProject,N,N,public);
Method(GanttXMLSaver,getProject,IGanttProject,N,N,N,package);
Method(GeneralDialog,getProject,IGanttProject,N,N,N,protected);
Method(IGanttProject,getDescription,String,N,N,N,package);
Method(IGanttProject,getHumanResourceManager,ResourceManager,N,N,N,package);
Method(IGanttProject,getI18n,GanttLanguage,N,N,N,package);
Method(IGanttProject,getOrganization,String,N,N,N,package);
Method(IGanttProject,getProjectName,String,N,N,N,package);
Method(IGanttProject,getRoleManager,RoleManager,N,N,N,package);
Method(IGanttProject,getTaskManager,TaskManager,N,N,N,package);
Method(IGanttProject,getUIConfiguration,UIConfiguration,N,N,N,package);
Method(IGanttProject,getWebLink,String,N,N,N,package);
Method(IGanttProject,newTask,Task,N,N,N,package);
Method(IGanttProject,setDescription,void,Y,N,N,package);
Method(IGanttProject,setOrganization,void,Y,N,N,package);
Method(IGanttProject,setProjectName,void,Y,N,N,package);
Method(IGanttProject,setWebLink,void,Y,N,N,package);
Parameter(GanttPDFExport,save,ganttProject,IGanttProject,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,project,IGanttProject,declaration);
Parameter(IGanttProject,setDescription,description,String,declaration);
Parameter(IGanttProject,setOrganization,organization,String,declaration);
Parameter(IGanttProject,setProjectName,projectName,String,declaration);
Parameter(IGanttProject,setWebLink,webLink,String,declaration);
Parameter(NewProjectWizard,createNewProject,project,IGanttProject,declaration);
Parameter(NewProjectWizardWindow,addProjectNamePage,project,IGanttProject,declaration);
Parameter(NewTaskAction,NewTaskAction,project,IGanttProject,declaration);
Parameter(ProjectNamePage,ProjectNamePage,project,IGanttProject,declaration);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,project,IGanttProject,declaration);
Parameter(ResourceActionSet,ResourceActionSet,project,IGanttProject,declaration);
Relation(GanttPDFExport;save;getDescription,IGanttProject,N);
Relation(GanttPDFExport;save;getOrganization,IGanttProject,N);
Relation(GanttPDFExport;save;getProjectName,IGanttProject,N);
Relation(GanttPDFExport;save;getWebLink,IGanttProject,N);
Relation(GanttProject;showNewProjectWizard;createNewProject,NewProjectWizard,IGanttProject);
Relation(GanttXMLSaver;_save;getDescription,IGanttProject,N);
Relation(GanttXMLSaver;save;getOrganization,IGanttProject,N);
Relation(GanttXMLSaver;save;getProjectName,IGanttProject,N);
Relation(GanttXMLSaver;save;getWebLink,IGanttProject,N);
Relation(GanttXMLSaver;saveRoles;getRoleManager,IGanttProject,N);
Relation(NewProjectWizard;createNewProject;addProjectNamePage,NewProjectWizardWindow,IGanttProject);
Relation(NewProjectWizard;createNewProject;getRoleManager,IGanttProject,N);
Relation(NewTaskAction;NewTaskAction;getI18n,IGanttProject,N);
Relation(NewTaskAction;actionPerformed;newTask,IGanttProject,N);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ProjectSettingsPanel;applyChanges;getDescription,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getOrganization,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getProjectName,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getWebLink,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;setDescription,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setOrganization,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setProjectName,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setWebLink,IGanttProject,String);
Relation(ProjectSettingsPanel;initialize;getDescription,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getOrganization,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getProjectName,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getWebLink,IGanttProject,N);
Relation(ResourceActionSet;ResourceActionSet;getHumanResourceManager,IGanttProject,N);
Relation(ResourceActionSet;ResourceActionSet;getRoleManager,IGanttProject,N);
end b49
start b50
Class(DefaultCollision,N,N,package);
end b50
start b51
Class(GanttPNGFileFilter,N,N,public);
Generalisation(GanttPNGFileFilter,FileFilter);
Method(GanttPNGFileFilter,accept,boolean,Y,N,N,public);
Method(GanttPNGFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttPNGFileFilter,accept,f,File,declaration);
Relation(GanttPNGFileFilter;accept;endsWith,String,String);
Relation(GanttPNGFileFilter;accept;getName,File,N);
Relation(GanttPNGFileFilter;accept;isDirectory,File,N);
Relation(GanttPNGFileFilter;accept;toLowerCase,String,N);
Relation(GanttPNGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttPNGFileFilter;getDescription;getText,GanttLanguage,String);
end b51
start b52
Attribute(FindPossibleDependeesAlgorithmImpl,myContainmentFacade,TaskContainmentHierarchyFacade,N,private);
Attribute(ProjectExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,N,package);
Class(TaskContainmentHierarchyFacade,N,N,public);
Method(AdjustTaskBoundsAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(FindPossibleDependeesAlgorithmImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(GanttProject,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Method(RecalculateTaskCompletionPercentageAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(RecalculateTaskScheduleAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(TaskContainmentHierarchyFacade,createFacede,TaskContainmentHierarchyFacade,N,N,N,package);
Method(TaskContainmentHierarchyFacade,getContainer,Task,Y,N,N,package);
Method(TaskContainmentHierarchyFacade,getNestedTasks,Task[],Y,N,N,package);
Method(TaskContainmentHierarchyFacade,getRoot,Task,N,N,N,package);
Method(TaskManagerImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,N,N,protected);
Method(TaskManagerImpl,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,containmentFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,containmentFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(AdjustTaskBoundsAlgorithm,run,containmentFacadeTaskContainmentHierarchyFacade,local);
Parameter(PDFExportData,PDFExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(ProjectExportData,ProjectExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,run,facadeTaskContainmentHierarchyFacade,local);
Parameter(RecalculateTaskScheduleAlgorithm,run,facadeTaskContainmentHierarchyFacade,local);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(TaskContainmentHierarchyFacade,getContainer,nestedTask,Task,declaration);
Parameter(TaskContainmentHierarchyFacade,getNestedTasks,container,Task,declaration);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;recalculateSupertaskSchedule,AdjustTaskBoundsAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(AdjustTaskBoundsAlgorithm;run;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(AdjustTaskBoundsAlgorithm;run;recalculateSupertaskScheduleBottomUp,AdjustTaskBoundsAlgorithm,Set-TaskContainmentHierarchyFacade);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;run;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;run;getRoot,TaskContainmentHierarchyFacade,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;recalculateSupertaskCompletionPercentage,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(RecalculateTaskCompletionPercentageAlgorithm;run;recalculateSupertaskCompletionPercentageBottomUp,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(RecalculateTaskScheduleAlgorithm;run;getRoot,TaskContainmentHierarchyFacade,N);
Relation(RecalculateTaskScheduleAlgorithm;run;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
Relation(RecalculateTaskScheduleAlgorithm;traverse;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskScheduleAlgorithm;traverse;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
end b52
start b53
Attribute(DocumentsMRU,documents,List,N,private);
Attribute(DocumentsMRU,maxSize,int,N,private);
Attribute(GanttOptions,documentsMRU,DocumentsMRU,N,private);
Attribute(GanttProject,documentsMRU,DocumentsMRU,N,private);
Class(DocumentsMRU,N,N,public);
Method(DocumentsMRU,DocumentsMRU,N,Y,N,N,public);
Method(DocumentsMRU,add,boolean,Y,N,N,public);
Method(DocumentsMRU,append,boolean,Y,N,N,public);
Method(DocumentsMRU,clear,void,N,N,N,public);
Method(DocumentsMRU,iterator,Iterator,N,N,N,public);
Parameter(DocumentsMRU,DocumentsMRU,maxSize,int,declaration);
Parameter(DocumentsMRU,add,document,Document,declaration);
Parameter(DocumentsMRU,add,iint,local);
Parameter(DocumentsMRU,append,document,Document,declaration);
Parameter(DocumentsMRU,append,iint,local);
Parameter(GanttOptions,setDocumentsMRU,documentsMRU,DocumentsMRU,declaration);
Relation(DocumentsMRU;add;add,List,int-Object);
Relation(DocumentsMRU;add;indexOf,List,Object);
Relation(DocumentsMRU;add;isValidForMRU,Document,N);
Relation(DocumentsMRU;add;remove,List,int);
Relation(DocumentsMRU;add;size,List,N);
Relation(DocumentsMRU;append;add,List,Object);
Relation(DocumentsMRU;append;indexOf,List,Object);
Relation(DocumentsMRU;append;isValidForMRU,Document,N);
Relation(DocumentsMRU;append;remove,List,int);
Relation(DocumentsMRU;append;size,List,N);
Relation(DocumentsMRU;clear;clear,List,N);
Relation(DocumentsMRU;iterator;iterator,List,N);
Relation(GanttOptions;load;clear,DocumentsMRU,N);
Relation(GanttOptions;save;iterator,DocumentsMRU,N);
Relation(GanttOptions;startElement;append,DocumentsMRU,Document);
Relation(GanttProject;GanttProject;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;openDocument;add,DocumentsMRU,Document);
Relation(GanttProject;quitApplication;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;saveProject;add,DocumentsMRU,Document);
Relation(GanttProject;updateMenuMRU;iterator,DocumentsMRU,N);
end b53
start b54
Class(GanttXMLParser,N,N,package);
Relation(GanttXMLOpen;characters;getCorrectString,GanttXMLParser,String);
end b54
start b55
Attribute(AlgorithmCollection,myRecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,isRunning,boolean,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myAdjuster,AdjustTaskBoundsAlgorithm,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myDistance2dependencyList,SortedMap,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myEntranceCounter,int,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myMarkedTasks,Set,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myModifiedTasks,Set,N,private);
Class(RecalculateTaskScheduleAlgorithm,abstract,N,public);
Generalisation(RecalculateTaskScheduleAlgorithm,AlgorithmBase);
Method(AlgorithmCollection,getRecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,N,N,N,public);
Method(RecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,N,Y,N,N,public);
Method(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,void,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(RecalculateTaskScheduleAlgorithm,fulfilConstraints,void,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,fulfilDependencies,void,N,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,isMarked,boolean,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,isRunning,boolean,N,N,N,public);
Method(RecalculateTaskScheduleAlgorithm,markTask,void,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,modifyTaskEnd,void,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,modifyTaskStart,void,Y,N,N,private);
Method(RecalculateTaskScheduleAlgorithm,run,void,N,N,N,public);
Method(RecalculateTaskScheduleAlgorithm,run,void,Y,N,N,public);
Method(RecalculateTaskScheduleAlgorithm,traverse,void,Y,N,N,private);
Parameter(AlgorithmCollection,AlgorithmCollection,recalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,algRecalculateTaskScheduleAlgorithm,local);
Parameter(GanttTree,forwardScheduling,algRecalculateTaskScheduleAlgorithm,local);
Parameter(RecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,adjuster,AdjustTaskBoundsAlgorithm,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,changedTask,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,dependantTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,deps,TaskDependency[],declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,depsAsDependeeTaskDependency[],local);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,depsListList,local);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,distance,int,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,keyInteger,local);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,nextStepDepsTaskDependency[],local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,acceptableStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,dependantTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,dependency,TaskDependency,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,depsAsDependantTaskDependency[],local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,earliestStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,latestStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,nextCollisionCollision,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,nextTaskDependency,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,noVariationsArrayList,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,notVariableStartGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,solutionGanttCalendar,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,startEarlierVariationsArrayList,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,startLaterVariationsArrayList,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,collisionCollision,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextConstraintTaskDependencyConstraint,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextDependenciesListList,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextDependencyTaskDependency,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextEntryEntry,local);
Parameter(RecalculateTaskScheduleAlgorithm,isMarked,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,markTask,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskEnd,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskEnd,taskEnd,GanttCalendar,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,durationTaskLength,local);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,newStart,GanttCalendar,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,run,changedTask,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,run,facadeTaskContainmentHierarchyFacade,local);
Parameter(RecalculateTaskScheduleAlgorithm,run,independentTasksSet,local);
Parameter(RecalculateTaskScheduleAlgorithm,run,nextTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,asDependantTaskDependency[],local);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,independentTasks,Set,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,nestedTasksTask[],local);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,root,Task,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg2RecalculateTaskScheduleAlgorithm,local);
Relation(GanttGraphicArea;GanttGraphicArea;isRunning,RecalculateTaskScheduleAlgorithm,N);
Relation(GanttGraphicArea;GanttGraphicArea;run,RecalculateTaskScheduleAlgorithm,Task);
Relation(GanttTree;forwardScheduling;run,RecalculateTaskScheduleAlgorithm,N);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;addAll,List,Collection);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;asList,Arrays,TaskDependency[]);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;buildDistanceGraph,RecalculateTaskScheduleAlgorithm,TaskDependency[]-int);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;get,Map,Object);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;getDependant,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;getDependenciesAsDependee,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;put,Map,Object-Object);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;toArray,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;add,ArrayList,Object);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;compareTo,GanttCalendar,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;get,ArrayList,int);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getAcceptableStart,Collision,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getCollision,TaskDependencyConstraint,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getConstraint,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getDependant,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getDependenciesAsDependant,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getStart,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getVariation,Collision,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;modifyTaskStart,RecalculateTaskScheduleAlgorithm,Task-GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;size,ArrayList,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;sort,Collections,List);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;toArray,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;entrySet,SortedMap,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;fulfilConstraints,RecalculateTaskScheduleAlgorithm,TaskDependency);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;get,List,int);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;getCollision,TaskDependencyConstraint,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;getConstraint,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;getValue,Entry,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;hasNext,Iterator,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;isActive,Collision,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;iterator,Set,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;next,Iterator,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;size,List,N);
Relation(RecalculateTaskScheduleAlgorithm;isMarked;contains,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;markTask;add,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskEnd;add,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;add,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;getDuration,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;run;add,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;run;buildDistanceGraph,RecalculateTaskScheduleAlgorithm,Task);
Relation(RecalculateTaskScheduleAlgorithm;run;clear,Map,N);
Relation(RecalculateTaskScheduleAlgorithm;run;clear,Set,N);
Relation(RecalculateTaskScheduleAlgorithm;run;createContainmentFacade,RecalculateTaskScheduleAlgorithm,N);
Relation(RecalculateTaskScheduleAlgorithm;run;fulfilDependencies,RecalculateTaskScheduleAlgorithm,N);
Relation(RecalculateTaskScheduleAlgorithm;run;getRoot,TaskContainmentHierarchyFacade,N);
Relation(RecalculateTaskScheduleAlgorithm;run;hasNext,Iterator,N);
Relation(RecalculateTaskScheduleAlgorithm;run;isEnabled,AlgorithmBase,N);
Relation(RecalculateTaskScheduleAlgorithm;run;iterator,Set,N);
Relation(RecalculateTaskScheduleAlgorithm;run;next,Iterator,N);
Relation(RecalculateTaskScheduleAlgorithm;run;run,AdjustTaskBoundsAlgorithm,Task[]);
Relation(RecalculateTaskScheduleAlgorithm;run;toArray,Set,Object[]);
Relation(RecalculateTaskScheduleAlgorithm;run;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
Relation(RecalculateTaskScheduleAlgorithm;traverse;add,Set,Object);
Relation(RecalculateTaskScheduleAlgorithm;traverse;getDependenciesAsDependant,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;traverse;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskScheduleAlgorithm;traverse;toArray,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;traverse;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
end b55
start b56
Attribute(DeleteHumanAction,myContext,ResourceContext,N,private);
Attribute(GanttResourcePanel,myContext,ResourceContext,N,private);
Attribute(ResourceActionSet,myContext,ResourceContext,N,private);
Class(ResourceContext,N,N,public);
Method(DeleteHumanAction,getContext,ResourceContext,N,N,N,private);
Method(GanttResourcePanel,getContext,ResourceContext,N,N,N,public);
Method(ResourceContext,getResources,ProjectResource[],N,N,N,public);
Parameter(DeleteHumanAction,DeleteHumanAction,context,ResourceContext,declaration);
Parameter(ResourceActionSet,ResourceActionSet,context,ResourceContext,declaration);
Relation(DeleteHumanAction;actionPerformed;getResources,ResourceContext,N);
Relation(GanttProject;addButtons;getResources,ResourceContext,N);
end b56
start b57
Attribute(TaskDependencyEvent,myDependency,TaskDependency,N,private);
Class(TaskDependencyEvent,N,N,public);
Generalisation(TaskDependencyEvent,EventObject);
Method(TaskDependencyEvent,TaskDependencyEvent,N,Y,N,N,public);
Method(TaskDependencyEvent,getDependency,TaskDependency,N,N,N,public);
Parameter(GanttGraphicArea,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskDependencyEvent,TaskDependencyEvent,dependency,TaskDependency,declaration);
Parameter(TaskDependencyEvent,TaskDependencyEvent,source,TaskDependencyCollection,declaration);
Parameter(TaskListener,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskListener,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,eTaskDependencyEvent,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,eTaskDependencyEvent,local);
Relation(GanttGraphicArea;GanttGraphicArea;getDependency,TaskDependencyEvent,N);
Relation(TaskManagerImpl;fireDependencyAdded;dependencyAdded,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyRemoved;dependencyRemoved,TaskListener,TaskDependencyEvent);
end b57
start b58
Class(WizardPage,N,N,public);
Method(WizardImpl,getCurrentPage,WizardPage,N,N,N,private);
Method(WizardPage,getComponent,Component,N,N,N,package);
Method(WizardPage,getTitle,String,N,N,N,package);
Method(WizardPage,setActive,void,Y,N,N,package);
Parameter(NewProjectWizardWindow,addProjectNamePage,projectNamePageWizardPage,local);
Parameter(NewProjectWizardWindow,addRoleSetPage,roleSetPageWizardPage,local);
Parameter(WizardImpl,addPage,page,WizardPage,declaration);
Parameter(WizardImpl,show,nextPageWizardPage,local);
Parameter(WizardPage,setActive,b,boolean,declaration);
Relation(NewProjectWizardWindow;addProjectNamePage;addPage,WizardImpl,WizardPage);
Relation(NewProjectWizardWindow;addRoleSetPage;addPage,WizardImpl,WizardPage);
Relation(WizardImpl;actionPerformed;setActive,WizardPage,boolean);
Relation(WizardImpl;backPage;setActive,WizardPage,boolean);
Relation(WizardImpl;nextPage;setActive,WizardPage,boolean);
Relation(WizardImpl;show;getComponent,WizardPage,N);
Relation(WizardImpl;show;getTitle,WizardPage,N);
end b58
start b59
Class(ServerDialog,N,N,public);
Generalisation(ServerDialog,GeneralDialog);
Method(ServerDialog,ServerDialog,N,Y,N,N,public);
Method(ServerDialog,constructSections,void,N,N,N,public);
Method(ServerDialog,valueChanged,void,Y,N,N,public);
Parameter(ServerDialog,ServerDialog,parent,GanttProject,declaration);
Parameter(ServerDialog,valueChanged,e,TreeSelectionEvent,declaration);
Parameter(ServerDialog,valueChanged,nodeDefaultMutableTreeNode,local);
Parameter(ServerDialog,valueChanged,sNodeString,local);
Relation(ServerDialog;ServerDialog;correctLabel,GanttProject,String);
Relation(ServerDialog;ServerDialog;getInstance,GanttLanguage,N);
Relation(ServerDialog;ServerDialog;getText,GanttLanguage,String);
Relation(ServerDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(ServerDialog;constructSections;correctLabel,GanttProject,String);
Relation(ServerDialog;constructSections;getText,GanttLanguage,String);
Relation(ServerDialog;valueChanged;add,Container,Component-int);
Relation(ServerDialog;valueChanged;correctLabel,GanttProject,String);
Relation(ServerDialog;valueChanged;equals,String,Object);
Relation(ServerDialog;valueChanged;getLastPathComponent,TreePath,N);
Relation(ServerDialog;valueChanged;getPath,TreeSelectionEvent,N);
Relation(ServerDialog;valueChanged;getText,GanttLanguage,String);
Relation(ServerDialog;valueChanged;getUserObject,DefaultMutableTreeNode,N);
Relation(ServerDialog;valueChanged;initialize,GeneralOptionPanel,N);
Relation(ServerDialog;valueChanged;remove,Container,int);
Relation(ServerDialog;valueChanged;repaint,Component,N);
Relation(ServerDialog;valueChanged;validate,Container,N);
end b59
start b60
Attribute(PDFExportProcessor,myStylesheetPath,String,N,private);
Class(PDFExportProcessor,N,N,public);
Generalisation(PDFExportProcessor,ProjectExportProcessor);
Method(PDFExportProcessor,createConfiguration,void,Y,N,N,private);
Method(PDFExportProcessor,createDriver,Driver,Y,N,N,private);
Method(PDFExportProcessor,createOptions,Options,N,N,N,private);
Method(PDFExportProcessor,doExport,void,Y,N,N,public);
Method(PDFExportProcessor,exportGanttChart,File,Y,N,N,protected);
Method(PDFExportProcessor,exportProject,void,Y,N,N,protected);
Method(PDFExportProcessor,exportResourceChart,File,Y,N,N,protected);
Method(PDFExportProcessor,run,void,Y,N,N,public);
Method(PDFExportProcessor,writeTriplets,void,Y,N,N,private);
Parameter(PDFExportProcessor,createConfiguration,attrsAttributesImpl,local);
Parameter(PDFExportProcessor,createConfiguration,fontRecords,FontRecord[],declaration);
Parameter(PDFExportProcessor,createConfiguration,handler,TransformerHandler,declaration);
Parameter(PDFExportProcessor,createConfiguration,nextRecordFontRecord,local);
Parameter(PDFExportProcessor,createDriver,data,PDFExportData,declaration);
Parameter(PDFExportProcessor,createDriver,driverDriver,local);
Parameter(PDFExportProcessor,createDriver,oOptions,local);
Parameter(PDFExportProcessor,createDriver,outOutputStream,local);
Parameter(PDFExportProcessor,createOptions,fontRecordsFontRecord[],local);
Parameter(PDFExportProcessor,createOptions,handlerTransformerHandler,local);
Parameter(PDFExportProcessor,createOptions,outputStreamByteArrayOutputStream,local);
Parameter(PDFExportProcessor,createOptions,outputStreamResult,local);
Parameter(PDFExportProcessor,createOptions,resultOptions,local);
Parameter(PDFExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Parameter(PDFExportProcessor,doExport,fileFile,local);
Parameter(PDFExportProcessor,doExport,filenameString,local);
Parameter(PDFExportProcessor,doExport,reportStringBuffer,local);
Parameter(PDFExportProcessor,exportGanttChart,chartExportDataGanttChartExportData,local);
Parameter(PDFExportProcessor,exportGanttChart,exportData,ProjectExportData,declaration);
Parameter(PDFExportProcessor,exportGanttChart,outputFileFile,local);
Parameter(PDFExportProcessor,exportProject,attrsAttributesImpl,local);
Parameter(PDFExportProcessor,exportProject,handler,TransformerHandler,declaration);
Parameter(PDFExportProcessor,exportResourceChart,chartExportDataResourceChartExportData,local);
Parameter(PDFExportProcessor,exportResourceChart,exportData,ProjectExportData,declaration);
Parameter(PDFExportProcessor,exportResourceChart,outputFileFile,local);
Parameter(PDFExportProcessor,run,chartFileFile,local);
Parameter(PDFExportProcessor,run,data,PDFExportData,declaration);
Parameter(PDFExportProcessor,run,factorySAXTransformerFactory,local);
Parameter(PDFExportProcessor,run,fopDriverDriver,local);
Parameter(PDFExportProcessor,run,ganttProjectHandlerTransformerHandler,local);
Parameter(PDFExportProcessor,run,resourceChartFileFile,local);
Parameter(PDFExportProcessor,run,stylesheetHandlerTransformerHandler,local);
Parameter(PDFExportProcessor,writeTriplets,attrsAttributesImpl,local);
Parameter(PDFExportProcessor,writeTriplets,fontTriplets,FontTriplet[],declaration);
Parameter(PDFExportProcessor,writeTriplets,handler,TransformerHandler,declaration);
Parameter(PDFExportProcessor,writeTriplets,nextFontTriplet,local);
Relation(PDFExportProcessor;createConfiguration;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(PDFExportProcessor;createConfiguration;clear,AttributesImpl,N);
Relation(PDFExportProcessor;createConfiguration;endDocument,ContentHandler,N);
Relation(PDFExportProcessor;createConfiguration;endElement,ContentHandler,String-String-String);
Relation(PDFExportProcessor;createConfiguration;getFontLocation,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getFontTriplets,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getMetricsLocation,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getPath,URI,N);
Relation(PDFExportProcessor;createConfiguration;startDocument,ContentHandler,N);
Relation(PDFExportProcessor;createConfiguration;startElement,ContentHandler,String-String-String-Attributes);
Relation(PDFExportProcessor;createConfiguration;toString,URI,N);
Relation(PDFExportProcessor;createConfiguration;writeTriplets,PDFExportProcessor,TransformerHandler-FontTriplet[]);
Relation(PDFExportProcessor;createDriver;createOptions,PDFExportProcessor,N);
Relation(PDFExportProcessor;createDriver;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;createDriver;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;createDriver;setOutputStream,Driver,OutputStream);
Relation(PDFExportProcessor;createDriver;setRenderer,Driver,int);
Relation(PDFExportProcessor;createOptions;createConfiguration,PDFExportProcessor,TransformerHandler-FontRecord[]);
Relation(PDFExportProcessor;createOptions;getTransformerFactory,ProjectExportProcessor,N);
Relation(PDFExportProcessor;createOptions;newTransformerHandler,SAXTransformerFactory,N);
Relation(PDFExportProcessor;createOptions;printStackTrace,Throwable,N);
Relation(PDFExportProcessor;createOptions;printStackTrace,TransformerException,N);
Relation(PDFExportProcessor;createOptions;println,PrintStream,String);
Relation(PDFExportProcessor;createOptions;setResult,TransformerHandler,Result);
Relation(PDFExportProcessor;createOptions;toByteArray,ByteArrayOutputStream,N);
Relation(PDFExportProcessor;createOptions;toString,ByteArrayOutputStream,N);
Relation(PDFExportProcessor;doExport;append,StringBuffer,String);
Relation(PDFExportProcessor;doExport;canWrite,File,N);
Relation(PDFExportProcessor;doExport;endsWith,String,String);
Relation(PDFExportProcessor;doExport;forName,Class,String);
Relation(PDFExportProcessor;doExport;getAbsolutePath,File,N);
Relation(PDFExportProcessor;doExport;getHumanResourceManager,GanttProject,N);
Relation(PDFExportProcessor;doExport;length,File,N);
Relation(PDFExportProcessor;doExport;newInstance,Class<>,N);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(PDFExportProcessor;doExport;toString,StringBuffer,N);
Relation(PDFExportProcessor;doExport;toUpperCase,String,N);
Relation(PDFExportProcessor;exportGanttChart;createTempFile,File,String-String);
Relation(PDFExportProcessor;exportGanttChart;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;exportGanttChart;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportGanttChart;run,GanttChartExportProcessor,GanttChartExportData);
Relation(PDFExportProcessor;exportProject;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(PDFExportProcessor;exportProject;endDocument,ContentHandler,N);
Relation(PDFExportProcessor;exportProject;endElement,ContentHandler,String-String-String);
Relation(PDFExportProcessor;exportProject;endPrefixMapping,ContentHandler,String);
Relation(PDFExportProcessor;exportProject;getCleanAttrs,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportProject;startDocument,ContentHandler,N);
Relation(PDFExportProcessor;exportProject;startElement,ContentHandler,String-String-String-Attributes);
Relation(PDFExportProcessor;exportProject;startPrefixMapping,ContentHandler,String-String);
Relation(PDFExportProcessor;exportResourceChart;createTempFile,File,String-String);
Relation(PDFExportProcessor;exportResourceChart;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;exportResourceChart;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportResourceChart;run,ResourceChartExportProcessor,ResourceChartExportData);
Relation(PDFExportProcessor;run;createDriver,PDFExportProcessor,PDFExportData);
Relation(PDFExportProcessor;run;exportGanttChart,PDFExportProcessor,ProjectExportData);
Relation(PDFExportProcessor;run;exportProject,PDFExportProcessor,TransformerHandler);
Relation(PDFExportProcessor;run;exportResourceChart,PDFExportProcessor,ProjectExportData);
Relation(PDFExportProcessor;run;getContentHandler,Driver,N);
Relation(PDFExportProcessor;run;getParent,File,N);
Relation(PDFExportProcessor;run;getTransformerFactory,ProjectExportProcessor,N);
Relation(PDFExportProcessor;run;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;run;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;run;newTransformerHandler,SAXTransformerFactory,N);
Relation(PDFExportProcessor;run;newTransformerHandler,SAXTransformerFactory,Source);
Relation(PDFExportProcessor;run;setResult,TransformerHandler,Result);
Relation(PDFExportProcessor;writeTriplets;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(PDFExportProcessor;writeTriplets;clear,AttributesImpl,N);
Relation(PDFExportProcessor;writeTriplets;endElement,ContentHandler,String-String-String);
Relation(PDFExportProcessor;writeTriplets;getName,FontTriplet,N);
Relation(PDFExportProcessor;writeTriplets;isBold,FontTriplet,N);
Relation(PDFExportProcessor;writeTriplets;isItalic,FontTriplet,N);
Relation(PDFExportProcessor;writeTriplets;startElement,ContentHandler,String-String-String-Attributes);
end b60
start b61
Class(myIconPanel,N,N,private);
end b61
start b62
Class(WelcomeSettingsPanel,N,N,public);
Generalisation(WelcomeSettingsPanel,GeneralOptionPanel);
Method(WelcomeSettingsPanel,WelcomeSettingsPanel,N,Y,N,N,public);
Method(WelcomeSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(WelcomeSettingsPanel,initialize,void,N,N,N,public);
Parameter(WelcomeSettingsPanel,WelcomeSettingsPanel,parent,GanttProject,declaration);
Parameter(WelcomeSettingsPanel,applyChanges,askForApply,boolean,declaration);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;correctLabel,GanttProject,String);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getInstance,GanttLanguage,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getText,GanttLanguage,String);
end b62
start b63
Attribute(GanttProject,myResourceActions,ResourceActionSet,N,private);
Attribute(GanttResourcePanel,myResourceActionSet,ResourceActionSet,N,private);
Attribute(ResourceActionSet,myActions,AbstractAction[],N,private);
Attribute(ResourceActionSet,myContext,ResourceContext,N,private);
Attribute(ResourceActionSet,myManager,ResourceManager,N,private);
Attribute(ResourceActionSet,myProjectFrame,GanttProject,N,private);
Attribute(ResourceActionSet,myRoleManager,RoleManager,N,private);
Class(ResourceActionSet,N,N,public);
Method(GanttProject,getResourceActions,ResourceActionSet,N,N,N,private);
Method(ResourceActionSet,ResourceActionSet,N,Y,N,N,public);
Method(ResourceActionSet,getActions,AbstractAction[],N,N,N,public);
Parameter(GanttResourcePanel,setResourceActions,actionSet,ResourceActionSet,declaration);
Parameter(ResourceActionSet,ResourceActionSet,context,ResourceContext,declaration);
Parameter(ResourceActionSet,ResourceActionSet,project,IGanttProject,declaration);
Parameter(ResourceActionSet,ResourceActionSet,projectFrame,GanttProject,declaration);
Relation(GanttProject;getResourcePanel;setResourceActions,GanttResourcePanel,ResourceActionSet);
Relation(GanttResourcePanel;createPopupMenu;getActions,ResourceActionSet,N);
Relation(ResourceActionSet;ResourceActionSet;getHumanResourceManager,IGanttProject,N);
Relation(ResourceActionSet;ResourceActionSet;getRoleManager,IGanttProject,N);
end b63
start b64
Attribute(ChartHeaderImpl,myPrimitiveContainer,GraphicPrimitiveContainer,N,private);
Attribute(GraphicPrimitiveContainer,myBackgroundColor,Color,N,private);
Attribute(GraphicPrimitiveContainer,myBottomY,int,N,private);
Attribute(GraphicPrimitiveContainer,myFinishX,int,N,private);
Attribute(GraphicPrimitiveContainer,myFinishY,int,N,private);
Attribute(GraphicPrimitiveContainer,myFont,Font,N,private);
Attribute(GraphicPrimitiveContainer,myForegroundColor,Color,N,private);
Attribute(GraphicPrimitiveContainer,myHeight,int,N,private);
Attribute(GraphicPrimitiveContainer,myLeftX,int,N,private);
Attribute(GraphicPrimitiveContainer,myLines,ArrayList,N,private);
Attribute(GraphicPrimitiveContainer,myRectangles,ArrayList,N,private);
Attribute(GraphicPrimitiveContainer,myStartX,int,N,private);
Attribute(GraphicPrimitiveContainer,myStartY,int,N,private);
Attribute(GraphicPrimitiveContainer,myText,String,N,private);
Attribute(GraphicPrimitiveContainer,myTexts,ArrayList,N,private);
Attribute(GraphicPrimitiveContainer,myTopY,int,N,private);
Attribute(GraphicPrimitiveContainer,myWidth,int,N,private);
Class(GraphicPrimitiveContainer,N,N,package);
Generalisation(GraphicPrimitiveContainer,GraphicPrimitive);
Method(GraphicPrimitiveContainer,Line,N,Y,N,N,private);
Method(GraphicPrimitiveContainer,Rectangle,N,Y,N,N,private);
Method(GraphicPrimitiveContainer,Text,N,Y,N,N,package);
Method(GraphicPrimitiveContainer,createLine,Line,Y,N,N,package);
Method(GraphicPrimitiveContainer,createRectangle,Rectangle,Y,N,N,package);
Method(GraphicPrimitiveContainer,createText,Text,Y,N,N,package);
Method(GraphicPrimitiveContainer,getBackgroundColor,Color,N,N,N,public);
Method(GraphicPrimitiveContainer,getForegroundColor,Color,N,N,N,public);
Method(GraphicPrimitiveContainer,paint,void,Y,N,N,package);
Method(GraphicPrimitiveContainer,setBackgroundColor,void,Y,N,N,public);
Method(GraphicPrimitiveContainer,setFont,void,Y,N,N,public);
Method(GraphicPrimitiveContainer,setForegroundColor,void,Y,N,N,public);
Parameter(GraphicPrimitiveContainer,Line,finishx,int,declaration);
Parameter(GraphicPrimitiveContainer,Line,finishy,int,declaration);
Parameter(GraphicPrimitiveContainer,Line,startx,int,declaration);
Parameter(GraphicPrimitiveContainer,Line,starty,int,declaration);
Parameter(GraphicPrimitiveContainer,Rectangle,height,int,declaration);
Parameter(GraphicPrimitiveContainer,Rectangle,leftx,int,declaration);
Parameter(GraphicPrimitiveContainer,Rectangle,topy,int,declaration);
Parameter(GraphicPrimitiveContainer,Rectangle,width,int,declaration);
Parameter(GraphicPrimitiveContainer,Text,bottomY,int,declaration);
Parameter(GraphicPrimitiveContainer,Text,leftX,int,declaration);
Parameter(GraphicPrimitiveContainer,Text,text,String,declaration);
Parameter(GraphicPrimitiveContainer,createLine,finishx,int,declaration);
Parameter(GraphicPrimitiveContainer,createLine,finishy,int,declaration);
Parameter(GraphicPrimitiveContainer,createLine,resultLine,local);
Parameter(GraphicPrimitiveContainer,createLine,startx,int,declaration);
Parameter(GraphicPrimitiveContainer,createLine,starty,int,declaration);
Parameter(GraphicPrimitiveContainer,createRectangle,height,int,declaration);
Parameter(GraphicPrimitiveContainer,createRectangle,leftx,int,declaration);
Parameter(GraphicPrimitiveContainer,createRectangle,resultRectangle,local);
Parameter(GraphicPrimitiveContainer,createRectangle,topy,int,declaration);
Parameter(GraphicPrimitiveContainer,createRectangle,width,int,declaration);
Parameter(GraphicPrimitiveContainer,createText,bottomy,int,declaration);
Parameter(GraphicPrimitiveContainer,createText,leftx,int,declaration);
Parameter(GraphicPrimitiveContainer,createText,resultText,local);
Parameter(GraphicPrimitiveContainer,createText,text,String,declaration);
Parameter(GraphicPrimitiveContainer,paint,foreColorColor,local);
Parameter(GraphicPrimitiveContainer,paint,g,Graphics,declaration);
Parameter(GraphicPrimitiveContainer,paint,nextLine,local);
Parameter(GraphicPrimitiveContainer,paint,nextRectangle,local);
Parameter(GraphicPrimitiveContainer,paint,nextText,local);
Parameter(GraphicPrimitiveContainer,setBackgroundColor,myBackgroundColor,Color,declaration);
Parameter(GraphicPrimitiveContainer,setFont,font,Font,declaration);
Parameter(GraphicPrimitiveContainer,setForegroundColor,myForegroundColor,Color,declaration);
Relation(ChartHeaderImpl;createFrames;createLine,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;createFrames;createText,GraphicPrimitiveContainer,int-int-String);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;createLine,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;createRectangle,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;paint;paint,GraphicPrimitiveContainer,Graphics);
Relation(GraphicPrimitiveContainer;createLine;add,ArrayList,Object);
Relation(GraphicPrimitiveContainer;createRectangle;add,ArrayList,Object);
Relation(GraphicPrimitiveContainer;createText;add,ArrayList,Object);
Relation(GraphicPrimitiveContainer;paint;drawLine,Graphics,int-int-int-int);
Relation(GraphicPrimitiveContainer;paint;drawRect,Graphics,int-int-int-int);
Relation(GraphicPrimitiveContainer;paint;drawString,Graphics,String-int-int);
Relation(GraphicPrimitiveContainer;paint;fillRect,Graphics,int-int-int-int);
Relation(GraphicPrimitiveContainer;paint;get,ArrayList,int);
Relation(GraphicPrimitiveContainer;paint;getBackgroundColor,GraphicPrimitive,N);
Relation(GraphicPrimitiveContainer;paint;getForegroundColor,GraphicPrimitive,N);
Relation(GraphicPrimitiveContainer;paint;setColor,Graphics,Color);
Relation(GraphicPrimitiveContainer;paint;setFont,Graphics,Font);
Relation(GraphicPrimitiveContainer;paint;size,ArrayList,N);
end b64
start b65
Attribute(ProjectExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,N,package);
Class(ResourceChartExportProcessor,N,N,public);
Method(ResourceChartExportProcessor,run,void,Y,N,N,public);
Parameter(PDFExportData,PDFExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,declaration);
Parameter(ProjectExportData,ProjectExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,declaration);
Parameter(ResourceChartExportProcessor,run,exportData,ResourceChartExportData,declaration);
Relation(PDFExportProcessor;exportResourceChart;run,ResourceChartExportProcessor,ResourceChartExportData);
end b65
start b66
Attribute(MonthTextFormatter,myFormat,SimpleDateFormat,N,private);
Class(MonthTextFormatter,N,N,public);
Method(MonthTextFormatter,format,String,Y,N,N,public);
Parameter(MonthTextFormatter,format,adjustedLeftDate,local);
Parameter(MonthTextFormatter,format,baseDate,Date,declaration);
Parameter(MonthTextFormatter,format,resultString,local);
Parameter(MonthTextFormatter,format,timeUnit,TimeUnit,declaration);
Relation(MonthTextFormatter;format;adjustLeft,DateFrameable,Date);
Relation(MonthTextFormatter;format;format,DateFormat,Date);
Relation(MonthTextFormatter;format;format,MessageFormat,String-Object[]);
end b66
start b67
Class(GanttAdjustmentListener,N,N,public);
end b67
start b68
Attribute(GanttHTMLExport,language,GanttLanguage,static,private);
Class(GanttHTMLExport,N,N,public);
Method(GanttHTMLExport,correct,String,Y,N,static,public);
Method(GanttHTMLExport,getExtention,String,Y,N,static,public);
Method(GanttHTMLExport,getFileName,String,Y,N,static,public);
Method(GanttHTMLExport,save,void,Y,N,static,public);
Method(GanttHTMLExport,writeResources,String,Y,N,static,private);
Method(GanttHTMLExport,writeTasks,String,Y,N,static,private);
Parameter(GanttHTMLExport,correct,resString,local);
Parameter(GanttHTMLExport,correct,s,String,declaration);
Parameter(GanttHTMLExport,getExtention,extString,local);
Parameter(GanttHTMLExport,getExtention,f,File,declaration);
Parameter(GanttHTMLExport,getExtention,iint,local);
Parameter(GanttHTMLExport,getExtention,sString,local);
Parameter(GanttHTMLExport,getFileName,extString,local);
Parameter(GanttHTMLExport,getFileName,f,File,declaration);
Parameter(GanttHTMLExport,getFileName,iint,local);
Parameter(GanttHTMLExport,getFileName,sString,local);
Parameter(GanttHTMLExport,save,absoluteString,local);
Parameter(GanttHTMLExport,save,area,GanttGraphicArea,declaration);
Parameter(GanttHTMLExport,save,bool,GanttExportSettings,declaration);
Parameter(GanttHTMLExport,save,extString,local);
Parameter(GanttHTMLExport,save,file,File,declaration);
Parameter(GanttHTMLExport,save,ganttXMLStringBuffer,local);
Parameter(GanttHTMLExport,save,imageDirectoryFile,local);
Parameter(GanttHTMLExport,save,lofFile[],local);
Parameter(GanttHTMLExport,save,newImgDirFile,local);
Parameter(GanttHTMLExport,save,pathString,local);
Parameter(GanttHTMLExport,save,prj,GanttProject,declaration);
Parameter(GanttHTMLExport,save,prjInfos,PrjInfos,declaration);
Parameter(GanttHTMLExport,save,rarea,ResourceLoadGraphicArea,declaration);
Parameter(GanttHTMLExport,save,tFactoryTransformerFactory,local);
Parameter(GanttHTMLExport,save,transformerTransformer,local);
Parameter(GanttHTMLExport,save,tree,GanttTree,declaration);
Parameter(GanttHTMLExport,writeResources,appli,GanttProject,declaration);
Parameter(GanttHTMLExport,writeResources,lorArrayList,local);
Parameter(GanttHTMLExport,writeResources,outStringBuffer,local);
Parameter(GanttHTMLExport,writeResources,pHumanResource,local);
Parameter(GanttHTMLExport,writeResources,resManHumanResourceManager,local);
Parameter(GanttHTMLExport,writeTasks,assignmentsResourceAssignment[],local);
Parameter(GanttHTMLExport,writeTasks,depthint,local);
Parameter(GanttHTMLExport,writeTasks,lotArrayList,local);
Parameter(GanttHTMLExport,writeTasks,nodeDefaultMutableTreeNode,local);
Parameter(GanttHTMLExport,writeTasks,outStringBuffer,local);
Parameter(GanttHTMLExport,writeTasks,tTask,local);
Parameter(GanttHTMLExport,writeTasks,tree,GanttTree,declaration);
Parameter(GanttHTMLExport,writeTasks,upTreeNode,local);
Parameter(GanttHTMLExport,writeTasks,usersSStringBuffer,local);
Relation(GanttHTMLExport;NgetInstance,GanttLanguage,N);
Relation(GanttHTMLExport;correct;replaceAll,String,String-String);
Relation(GanttHTMLExport;getExtention;getName,File,N);
Relation(GanttHTMLExport;getExtention;lastIndexOf,String,int);
Relation(GanttHTMLExport;getExtention;length,String,N);
Relation(GanttHTMLExport;getExtention;substring,String,int-int);
Relation(GanttHTMLExport;getExtention;toLowerCase,String,N);
Relation(GanttHTMLExport;getFileName;getName,File,N);
Relation(GanttHTMLExport;getFileName;lastIndexOf,String,int);
Relation(GanttHTMLExport;getFileName;length,String,N);
Relation(GanttHTMLExport;getFileName;println,PrintStream,String);
Relation(GanttHTMLExport;getFileName;substring,String,int-int);
Relation(GanttHTMLExport;save;append,StringBuffer,String);
Relation(GanttHTMLExport;save;correct,GanttHTMLExport,String);
Relation(GanttHTMLExport;save;correctLabel,GanttProject,String);
Relation(GanttHTMLExport;save;exists,File,N);
Relation(GanttHTMLExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttHTMLExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttHTMLExport;save;getDateAndTime,GanttCalendar,N);
Relation(GanttHTMLExport;save;getDescription,PrjInfos,N);
Relation(GanttHTMLExport;save;getExtention,GanttHTMLExport,File);
Relation(GanttHTMLExport;save;getFileName,GanttHTMLExport,File);
Relation(GanttHTMLExport;save;getMessage,Throwable,N);
Relation(GanttHTMLExport;save;getMessageAndLocation,TransformerException,N);
Relation(GanttHTMLExport;save;getName,File,N);
Relation(GanttHTMLExport;save;getName,PrjInfos,N);
Relation(GanttHTMLExport;save;getOrganization,PrjInfos,N);
Relation(GanttHTMLExport;save;getParent,File,N);
Relation(GanttHTMLExport;save;getText,GanttLanguage,String);
Relation(GanttHTMLExport;save;getWebLink,PrjInfos,N);
Relation(GanttHTMLExport;save;getXslDir,GanttProject,N);
Relation(GanttHTMLExport;save;isDirectory,File,N);
Relation(GanttHTMLExport;save;length,String,N);
Relation(GanttHTMLExport;save;listFiles,File,N);
Relation(GanttHTMLExport;save;mkdir,File,N);
Relation(GanttHTMLExport;save;newInstance,TransformerFactory,N);
Relation(GanttHTMLExport;save;newTransformer,TransformerFactory,Source);
Relation(GanttHTMLExport;save;printStackTrace,Throwable,N);
Relation(GanttHTMLExport;save;println,PrintStream,Object);
Relation(GanttHTMLExport;save;println,PrintStream,String);
Relation(GanttHTMLExport;save;read,ImageIO,InputStream);
Relation(GanttHTMLExport;save;toString,StringBuffer,N);
Relation(GanttHTMLExport;save;transform,Transformer,Source-Result);
Relation(GanttHTMLExport;save;write,ImageIO,RenderedImage-String-File);
Relation(GanttHTMLExport;save;writeResources,GanttHTMLExport,GanttProject);
Relation(GanttHTMLExport;save;writeTasks,GanttHTMLExport,GanttTree);
Relation(GanttHTMLExport;writeResources;append,StringBuffer,String);
Relation(GanttHTMLExport;writeResources;correct,GanttHTMLExport,String);
Relation(GanttHTMLExport;writeResources;get,ArrayList,int);
Relation(GanttHTMLExport;writeResources;getHumanResourceManager,GanttProject,N);
Relation(GanttHTMLExport;writeResources;getMail,HumanResource,N);
Relation(GanttHTMLExport;writeResources;getName,Role,N);
Relation(GanttHTMLExport;writeResources;getPhone,HumanResource,N);
Relation(GanttHTMLExport;writeResources;getResources,HumanResourceManager,N);
Relation(GanttHTMLExport;writeResources;getRole,HumanResource,N);
Relation(GanttHTMLExport;writeResources;length,String,N);
Relation(GanttHTMLExport;writeResources;size,ArrayList,N);
Relation(GanttHTMLExport;writeResources;toString,ProjectResource,N);
Relation(GanttHTMLExport;writeResources;toString,StringBuffer,N);
Relation(GanttHTMLExport;writeTasks;append,StringBuffer,String);
Relation(GanttHTMLExport;writeTasks;correct,GanttHTMLExport,String);
Relation(GanttHTMLExport;writeTasks;get,ArrayList,int);
Relation(GanttHTMLExport;writeTasks;getAllTasks,GanttTree,N);
Relation(GanttHTMLExport;writeTasks;getAssignments,Task,N);
Relation(GanttHTMLExport;writeTasks;getCompletionPercentage,Task,N);
Relation(GanttHTMLExport;writeTasks;getEnd,Task,N);
Relation(GanttHTMLExport;writeTasks;getManager,Task,N);
Relation(GanttHTMLExport;writeTasks;getName,ProjectResource,N);
Relation(GanttHTMLExport;writeTasks;getName,Task,N);
Relation(GanttHTMLExport;writeTasks;getNotes,Task,N);
Relation(GanttHTMLExport;writeTasks;getParent,TreeNode,N);
Relation(GanttHTMLExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttHTMLExport;writeTasks;getRoot,GanttTree,N);
Relation(GanttHTMLExport;writeTasks;getRootTask,TaskManager,N);
Relation(GanttHTMLExport;writeTasks;getStart,Task,N);
Relation(GanttHTMLExport;writeTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttHTMLExport;writeTasks;isMilestone,Task,N);
Relation(GanttHTMLExport;writeTasks;length,String,N);
Relation(GanttHTMLExport;writeTasks;size,ArrayList,N);
Relation(GanttHTMLExport;writeTasks;toString,StringBuffer,N);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
end b68
start b69
Attribute(ProjectExportData,myGanttChartExportProcessor,GanttChartExportProcessor,N,package);
Class(GanttChartExportProcessor,N,N,public);
Method(GanttChartExportProcessor,run,void,Y,N,N,public);
Parameter(GanttChartExportProcessor,run,exportData,GanttChartExportData,declaration);
Parameter(PDFExportData,PDFExportData,myGanttChartExportProcessor,GanttChartExportProcessor,declaration);
Parameter(ProjectExportData,ProjectExportData,myGanttChartExportProcessor,GanttChartExportProcessor,declaration);
Relation(PDFExportProcessor;exportGanttChart;run,GanttChartExportProcessor,GanttChartExportData);
end b69
start b70
Attribute(GanttProject,myNewHumanAction,NewHumanAction,N,private);
Attribute(NewHumanAction,MENU_MASK,int,N,private);
Attribute(NewHumanAction,myProjectFrame,JFrame,N,private);
Attribute(NewHumanAction,myRoleManager,RoleManager,N,private);
Class(NewHumanAction,N,N,public);
Generalisation(NewHumanAction,ResourceAction);
Method(NewHumanAction,NewHumanAction,N,Y,N,N,public);
Method(NewHumanAction,actionPerformed,void,Y,N,N,public);
Method(NewHumanAction,getProjectFrame,JFrame,N,N,N,private);
Method(NewHumanAction,languageChanged,void,N,N,N,public);
Parameter(NewHumanAction,NewHumanAction,hrManager,ResourceManager,declaration);
Parameter(NewHumanAction,NewHumanAction,iconUrlURL,local);
Parameter(NewHumanAction,NewHumanAction,projectFrame,JFrame,declaration);
Parameter(NewHumanAction,NewHumanAction,roleManager,RoleManager,declaration);
Parameter(NewHumanAction,actionPerformed,dpGanttDialogPerson,local);
Parameter(NewHumanAction,actionPerformed,event,ActionEvent,declaration);
Parameter(NewHumanAction,actionPerformed,peopleHumanResource,local);
Relation(NewHumanAction;NewHumanAction;correctLabel,GanttProject,String);
Relation(NewHumanAction;NewHumanAction;getClass,Object,N);
Relation(NewHumanAction;NewHumanAction;getClassLoader,Class<>,N);
Relation(NewHumanAction;NewHumanAction;getKeyStroke,KeyStroke,int-int);
Relation(NewHumanAction;NewHumanAction;getLanguage,ResourceAction,N);
Relation(NewHumanAction;NewHumanAction;getResource,ClassLoader,String);
Relation(NewHumanAction;NewHumanAction;getText,GanttLanguage,String);
Relation(NewHumanAction;NewHumanAction;putValue,AbstractAction,String-Object);
Relation(NewHumanAction;NgetDefaultToolkit,Toolkit,N);
Relation(NewHumanAction;NgetMenuShortcutKeyMask,Toolkit,N);
Relation(NewHumanAction;actionPerformed;add,ResourceManager,ProjectResource);
Relation(NewHumanAction;actionPerformed;getDefaultRole,RoleManager,N);
Relation(NewHumanAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(NewHumanAction;actionPerformed;getManager,ResourceAction,N);
Relation(NewHumanAction;actionPerformed;getProjectFrame,NewHumanAction,N);
Relation(NewHumanAction;actionPerformed;newHumanResource,HumanResourceManager,N);
Relation(NewHumanAction;actionPerformed;result,GanttDialogPerson,N);
Relation(NewHumanAction;actionPerformed;setRole,HumanResource,Role);
Relation(NewHumanAction;actionPerformed;show,Dialog,N);
Relation(NewHumanAction;languageChanged;correctLabel,GanttProject,String);
Relation(NewHumanAction;languageChanged;getLanguage,ResourceAction,N);
Relation(NewHumanAction;languageChanged;getText,GanttLanguage,String);
Relation(NewHumanAction;languageChanged;putValue,AbstractAction,String-Object);
end b70
start b71
Attribute(OpenFileDialog,myStartDirectory,File,N,private);
Attribute(OpenFileDialog,myproject,GanttProject,N,private);
Class(OpenFileDialog,N,N,public);
Method(OpenFileDialog,OpenFileDialog,N,Y,N,N,public);
Method(OpenFileDialog,show,File,N,N,N,public);
Parameter(ImportResources,getResourcesFile,openDialogOpenFileDialog,local);
Parameter(OpenFileDialog,OpenFileDialog,project,GanttProject,declaration);
Parameter(OpenFileDialog,OpenFileDialog,startDirectory,String,declaration);
Parameter(OpenFileDialog,show,fcJFileChooser,local);
Parameter(OpenFileDialog,show,resultFile,local);
Parameter(OpenFileDialog,show,returnValint,local);
Relation(ImportResources;getResourcesFile;show,OpenFileDialog,N);
Relation(OpenFileDialog;OpenFileDialog;getParentFile,File,N);
Relation(OpenFileDialog;OpenFileDialog;getProperty,System,String);
Relation(OpenFileDialog;OpenFileDialog;isDirectory,File,N);
Relation(OpenFileDialog;show;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(OpenFileDialog;show;getSelectedFile,JFileChooser,N);
Relation(OpenFileDialog;show;showOpenDialog,JFileChooser,Component);
end b71
start b72
Attribute(GeneralDialog,appli,GanttProject,N,protected);
Attribute(GeneralDialog,applyButton,JButton,N,protected);
Attribute(GeneralDialog,cancelButton,JButton,N,protected);
Attribute(GeneralDialog,language,GanttLanguage,N,protected);
Attribute(GeneralDialog,mainPanel2,JPanel,N,protected);
Attribute(GeneralDialog,okButton,JButton,N,protected);
Attribute(GeneralDialog,rootNode,DefaultMutableTreeNode,N,protected);
Attribute(GeneralDialog,settingPanel,GeneralOptionPanel,N,protected);
Attribute(GeneralDialog,southPanel,JPanel,N,protected);
Attribute(GeneralDialog,treeModel,DefaultTreeModel,N,protected);
Attribute(GeneralDialog,treeSections,JTree,N,protected);
Class(GeneralDialog,abstract,N,public);
Generalisation(AboutDialog,GeneralDialog);
Generalisation(GeneralDialog,DefaultTreeCellRenderer);
Generalisation(GeneralDialog,JDialog);
Generalisation(ServerDialog,GeneralDialog);
Generalisation(SettingsDialog,GeneralDialog);
Method(GeneralDialog,GeneralDialog,N,Y,N,N,public);
Method(GeneralDialog,SettinsDefaultTreeCellRenderer,N,N,N,N,public);
Method(GeneralDialog,actionPerformed,void,Y,N,N,public);
Method(GeneralDialog,addObject,DefaultMutableTreeNode,Y,N,N,public);
Method(GeneralDialog,constructSections,void,N,abstract,N,public);
Method(GeneralDialog,getProject,IGanttProject,N,N,N,protected);
Method(GeneralDialog,getTreeCellRendererComponent,Component,Y,N,N,public);
Parameter(GeneralDialog,GeneralDialog,firstPanel,GeneralOptionPanel,declaration);
Parameter(GeneralDialog,GeneralDialog,mainPanelJPanel,local);
Parameter(GeneralDialog,GeneralDialog,modal,boolean,declaration);
Parameter(GeneralDialog,GeneralDialog,parent,GanttProject,declaration);
Parameter(GeneralDialog,GeneralDialog,scrollpaneJScrollPane,local);
Parameter(GeneralDialog,GeneralDialog,southBoxBox,local);
Parameter(GeneralDialog,GeneralDialog,title,String,declaration);
Parameter(GeneralDialog,GeneralDialog,tmpPanelJPanel,local);
Parameter(GeneralDialog,GeneralDialog,treePanelJPanel,local);
Parameter(GeneralDialog,GeneralDialog,vbBox,local);
Parameter(GeneralDialog,actionPerformed,event,ActionEvent,declaration);
Parameter(GeneralDialog,addObject,child,Object,declaration);
Parameter(GeneralDialog,addObject,childNodeDefaultMutableTreeNode,local);
Parameter(GeneralDialog,addObject,parent,DefaultMutableTreeNode,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,expanded,boolean,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,hasFocus,boolean,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,leaf,boolean,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,row,int,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,selected,boolean,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,textString,local);
Parameter(GeneralDialog,getTreeCellRendererComponent,tree,JTree,declaration);
Parameter(GeneralDialog,getTreeCellRendererComponent,value,Object,declaration);
Relation(AboutDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(GeneralDialog;GeneralDialog;add,Container,Component);
Relation(GeneralDialog;GeneralDialog;add,Container,Component-Object);
Relation(GeneralDialog;GeneralDialog;add,Container,Component-int);
Relation(GeneralDialog;GeneralDialog;addActionListener,AbstractButton,ActionListener);
Relation(GeneralDialog;GeneralDialog;addTreeSelectionListener,JTree,TreeSelectionListener);
Relation(GeneralDialog;GeneralDialog;applyComponentOrientation,Container,ComponentOrientation);
Relation(GeneralDialog;GeneralDialog;center,DialogAligner,JDialog-Container);
Relation(GeneralDialog;GeneralDialog;constructSections,GeneralDialog,N);
Relation(GeneralDialog;GeneralDialog;correctLabel,GanttProject,String);
Relation(GeneralDialog;GeneralDialog;createVerticalBox,Box,N);
Relation(GeneralDialog;GeneralDialog;getComment,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;getComponentOrientation,GanttLanguage,N);
Relation(GeneralDialog;GeneralDialog;getContentPane,JDialog,N);
Relation(GeneralDialog;GeneralDialog;getParent,Component,N);
Relation(GeneralDialog;GeneralDialog;getRootPane,JDialog,N);
Relation(GeneralDialog;GeneralDialog;getText,GanttLanguage,String);
Relation(GeneralDialog;GeneralDialog;getTitle,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;initialize,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;pack,Window,N);
Relation(GeneralDialog;GeneralDialog;setBackground,JComponent,Color);
Relation(GeneralDialog;GeneralDialog;setCellRenderer,JTree,TreeCellRenderer);
Relation(GeneralDialog;GeneralDialog;setDefaultButton,JRootPane,JButton);
Relation(GeneralDialog;GeneralDialog;setEditable,JTree,boolean);
Relation(GeneralDialog;GeneralDialog;setPreferredSize,JComponent,Dimension);
Relation(GeneralDialog;GeneralDialog;setResizable,Dialog,boolean);
Relation(GeneralDialog;GeneralDialog;setRootVisible,JTree,boolean);
Relation(GeneralDialog;GeneralDialog;setRowHeight,JTree,int);
Relation(GeneralDialog;GeneralDialog;setShowsRootHandles,JTree,boolean);
Relation(GeneralDialog;NgetInstance,GanttLanguage,N);
Relation(GeneralDialog;SettinsDefaultTreeCellRenderer;setOpaque,JComponent,boolean);
Relation(GeneralDialog;actionPerformed;applyChanges,GeneralOptionPanel,boolean);
Relation(GeneralDialog;actionPerformed;dispose,Window,N);
Relation(GeneralDialog;actionPerformed;getSource,EventObject,N);
Relation(GeneralDialog;actionPerformed;setVisible,Dialog,boolean);
Relation(GeneralDialog;addObject;getChildCount,DefaultMutableTreeNode,N);
Relation(GeneralDialog;addObject;getPath,DefaultMutableTreeNode,N);
Relation(GeneralDialog;addObject;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GeneralDialog;addObject;scrollPathToVisible,JTree,TreePath);
Relation(GeneralDialog;getTreeCellRendererComponent;getClass,Object,N);
Relation(GeneralDialog;getTreeCellRendererComponent;getResource,Class<>,String);
Relation(GeneralDialog;getTreeCellRendererComponent;getUserObject,DefaultMutableTreeNode,N);
Relation(GeneralDialog;getTreeCellRendererComponent;setBackground,DefaultTreeCellRenderer,Color);
Relation(GeneralDialog;getTreeCellRendererComponent;setFont,DefaultTreeCellRenderer,Font);
Relation(GeneralDialog;getTreeCellRendererComponent;setForeground,JComponent,Color);
Relation(GeneralDialog;getTreeCellRendererComponent;setIcon,JLabel,Icon);
Relation(GeneralDialog;getTreeCellRendererComponent;setText,JLabel,String);
Relation(ServerDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(SettingsDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(SettingsDialog;valueChanged;getProject,GeneralDialog,N);
end b72
start b73
Attribute(TimeUnitFunctionOfDateImpl,myTextFormatter,TextFormatter,N,private);
Attribute(TimeUnitImpl,myTextFormatter,TextFormatter,N,private);
Class(TextFormatter,N,N,public);
Method(TextFormatter,format,String,Y,N,N,public);
Method(TimeUnitImpl,getTextFormatter,TextFormatter,N,N,N,protected);
Parameter(TextFormatter,format,baseDate,Date,declaration);
Parameter(TextFormatter,format,timeUnit,TimeUnit,declaration);
Parameter(TimeUnit,setTextFormatter,formatter,TextFormatter,declaration);
Parameter(TimeUnitFunctionOfDateImpl,format,formatterTextFormatter,local);
Parameter(TimeUnitFunctionOfDateImpl,setTextFormatter,formatter,TextFormatter,declaration);
Parameter(TimeUnitImpl,setTextFormatter,formatter,TextFormatter,declaration);
Relation(GregorianTimeUnitStack;NsetTextFormatter,TimeUnit,TextFormatter);
Relation(TimeUnitFunctionOfDateImpl;format;format,TextFormatter,TimeUnit-Date);
Relation(TimeUnitFunctionOfDateImpl;setTextFormatter;setTextFormatter,TimeUnitImpl,TextFormatter);
Relation(TimeUnitImpl;format;format,TextFormatter,TimeUnit-Date);
end b73
start b74
Attribute(NewProjectWizardWindow,myI18n,I18N,N,private);
Attribute(ProjectNamePage,myI18N,I18N,N,private);
Attribute(RoleSetPage,myI18N,I18N,N,private);
Attribute(RoleSetPage,myI18n,I18N,N,private);
Class(I18N,N,N,public);
Method(I18N,formatRoleForTooltip,String,Y,N,N,public);
Method(I18N,getNewProjectWizardWindowTitle,String,N,N,N,public);
Method(I18N,getProjectDomainPageTitle,String,N,N,N,public);
Method(I18N,getRolesetTooltipFooter,String,N,N,N,public);
Method(I18N,getRolesetTooltipHeader,String,Y,N,N,public);
Parameter(I18N,formatRoleForTooltip,role,Role,declaration);
Parameter(I18N,getRolesetTooltipHeader,roleSetName,String,declaration);
Parameter(NewProjectWizardWindow,NewProjectWizardWindow,i18n,I18N,declaration);
Parameter(ProjectNamePage,ProjectNamePage,i18n,I18N,declaration);
Parameter(RoleSetPage,RoleSetListModel,i18n,I18N,declaration);
Parameter(RoleSetPage,RoleSetPage,i18n,I18N,declaration);
Relation(I18N;formatRoleForTooltip;format,MessageFormat,String-Object[]);
Relation(I18N;formatRoleForTooltip;getName,Role,N);
Relation(I18N;getNewProjectWizardWindowTitle;getInstance,GanttLanguage,N);
Relation(I18N;getNewProjectWizardWindowTitle;getText,GanttLanguage,String);
Relation(I18N;getProjectDomainPageTitle;getInstance,GanttLanguage,N);
Relation(I18N;getProjectDomainPageTitle;getText,GanttLanguage,String);
Relation(I18N;getRolesetTooltipHeader;format,MessageFormat,String-Object[]);
Relation(NewProjectWizardWindow;NewProjectWizardWindow;getNewProjectWizardWindowTitle,I18N,N);
Relation(ProjectNamePage;getTitle;getNewProjectWizardWindowTitle,I18N,N);
Relation(RoleSetPage;createTooltipText;formatRoleForTooltip,I18N,Role);
Relation(RoleSetPage;createTooltipText;getRolesetTooltipFooter,I18N,N);
Relation(RoleSetPage;createTooltipText;getRolesetTooltipHeader,I18N,String);
Relation(RoleSetPage;getTitle;getProjectDomainPageTitle,I18N,N);
end b74
start b75
Attribute(ProjectExportProcessor,LOGGER_NAME,String,static,private);
Attribute(ProjectExportProcessor,myAttrs,AttributesImpl,N,private);
Attribute(ProjectExportProcessor,myLogger,Logger,N,private);
Attribute(ProjectExportProcessor,myTransformerFactory,SAXTransformerFactory,N,private);
Class(ProjectExportProcessor,abstract,N,public);
Generalisation(PDFExportProcessor,ProjectExportProcessor);
Method(ProjectExportProcessor,doExport,void,Y,abstract,N,public);
Method(ProjectExportProcessor,getCleanAttrs,AttributesImpl,N,N,N,protected);
Method(ProjectExportProcessor,getLogger,Logger,N,N,N,protected);
Method(ProjectExportProcessor,getTransformerFactory,SAXTransformerFactory,N,N,N,protected);
Method(ProjectExportProcessor,info,void,Y,N,N,protected);
Method(ProjectExportProcessor,isInfoable,boolean,N,N,N,protected);
Parameter(GanttProject,doExport,processorProjectExportProcessor,local);
Parameter(ProjectExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Parameter(ProjectExportProcessor,info,message,String,declaration);
Relation(GanttProject;doExport;doExport,ProjectExportProcessor,DeprecatedProjectExportData);
Relation(PDFExportProcessor;createDriver;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;createDriver;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;createOptions;getTransformerFactory,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportGanttChart;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;exportGanttChart;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportProject;getCleanAttrs,ProjectExportProcessor,N);
Relation(PDFExportProcessor;exportResourceChart;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;exportResourceChart;isInfoable,ProjectExportProcessor,N);
Relation(PDFExportProcessor;run;getTransformerFactory,ProjectExportProcessor,N);
Relation(PDFExportProcessor;run;info,ProjectExportProcessor,String);
Relation(PDFExportProcessor;run;isInfoable,ProjectExportProcessor,N);
Relation(ProjectExportProcessor;getCleanAttrs;clear,AttributesImpl,N);
Relation(ProjectExportProcessor;getLogger;getLogger,Logger,String);
Relation(ProjectExportProcessor;getTransformerFactory;newInstance,TransformerFactory,N);
Relation(ProjectExportProcessor;info;getLogger,ProjectExportProcessor,N);
Relation(ProjectExportProcessor;info;info,Logger,String);
Relation(ProjectExportProcessor;isInfoable;getLogger,ProjectExportProcessor,N);
Relation(ProjectExportProcessor;isInfoable;isLoggable,Logger,Level);
end b75
start b76
Attribute(FileDocument,file,File,N,private);
Class(FileDocument,N,N,public);
Generalisation(FileDocument,AbstractDocument);
Method(FileDocument,FileDocument,N,Y,N,N,public);
Method(FileDocument,canRead,boolean,N,N,N,public);
Method(FileDocument,canWrite,boolean,N,N,N,public);
Method(FileDocument,getDescription,String,N,N,N,public);
Method(FileDocument,getFilePath,String,N,N,N,public);
Method(FileDocument,getInputStream,InputStream,N,N,N,public);
Method(FileDocument,getOutputStream,OutputStream,N,N,N,public);
Method(FileDocument,getPath,String,N,N,N,public);
Method(FileDocument,isValidForMRU,boolean,N,N,N,public);
Parameter(FileDocument,FileDocument,file,File,declaration);
Parameter(FileDocument,canWrite,writableboolean,local);
Relation(FileDocument;canRead;canRead,File,N);
Relation(FileDocument;canWrite;canWrite,File,N);
Relation(FileDocument;canWrite;createNewFile,File,N);
Relation(FileDocument;canWrite;delete,File,N);
Relation(FileDocument;canWrite;exists,File,N);
Relation(FileDocument;getDescription;getName,File,N);
Relation(FileDocument;getFilePath;getPath,FileDocument,N);
Relation(FileDocument;getPath;getPath,File,N);
Relation(FileDocument;isValidForMRU;exists,File,N);
end b76
start b77
Class(Composition,N,N,package);
Method(TimeUnitGraph,getComposition,Composition,Y,N,N,public);
Parameter(TimeUnitGraph,Composition,transitiveComposition,Composition,declaration);
Parameter(TimeUnitGraph,getComposition,nextComposition,local);
Parameter(TimeUnitGraph,getComposition,resultComposition,local);
Parameter(TimeUnitGraph,registerTimeUnit,nextTransitiveComposition,local);
Relation(TimeUnitImpl;getAtomCount;getAtomCount,Composition,N);
end b77
start b78
Attribute(GanttDialogProperties,taskPropertiesBean,GanttTaskPropertiesBean,N,private);
Attribute(GanttTaskPropertiesBean,bWebLink,JButton,N,package);
Attribute(GanttTaskPropertiesBean,bilan,boolean,N,private);
Attribute(GanttTaskPropertiesBean,cancelButton,JButton,N,package);
Attribute(GanttTaskPropertiesBean,colorButton,JButton,N,package);
Attribute(GanttTaskPropertiesBean,colorPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,colorSpace,JButton,N,package);
Attribute(GanttTaskPropertiesBean,durationField1,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,durationFieldNotes,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,durationLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,durationLabel2,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,durationLabelNotes,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,end,GanttCalendar,N,private);
Attribute(GanttTaskPropertiesBean,finishDateButton1,JButton,N,package);
Attribute(GanttTaskPropertiesBean,finishDateField1,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,finishDateLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,firstRowPanel1,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,firstRowPanel2,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,firstRowPanelNotes,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,flowL,FlowLayout,N,package);
Attribute(GanttTaskPropertiesBean,gbc,GridBagConstraints,N,package);
Attribute(GanttTaskPropertiesBean,generalPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,isStartFixed,boolean,N,private);
Attribute(GanttTaskPropertiesBean,language,GanttLanguage,N,private);
Attribute(GanttTaskPropertiesBean,lastRowPanel1,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,lblWebLink,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,length,int,N,private);
Attribute(GanttTaskPropertiesBean,mileStoneCheckBox1,JCheckBox,N,package);
Attribute(GanttTaskPropertiesBean,mileStoneLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,myAllocationsPanel,TaskAllocationsPanel,N,private);
Attribute(GanttTaskPropertiesBean,myDependenciesPanel,TaskDependenciesPanel,N,private);
Attribute(GanttTaskPropertiesBean,myHumanResourceManager,HumanResourceManager,N,private);
Attribute(GanttTaskPropertiesBean,nameField1,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,nameField2,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,nameFieldNotes,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,nameLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,nameLabel2,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,nameLabelNotes,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,noteAreaNotes,JTextArea,N,package);
Attribute(GanttTaskPropertiesBean,notes,String,N,private);
Attribute(GanttTaskPropertiesBean,notesPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,okButton,JButton,N,public);
Attribute(GanttTaskPropertiesBean,parent,JDialog,N,private);
Attribute(GanttTaskPropertiesBean,percentComplete,int,N,private);
Attribute(GanttTaskPropertiesBean,percentCompleteLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,percentCompleteSlider,JSpinner,N,package);
Attribute(GanttTaskPropertiesBean,predecessorsPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,predecessorsScrollPane,JScrollPane,N,package);
Attribute(GanttTaskPropertiesBean,priority,int,N,private);
Attribute(GanttTaskPropertiesBean,priorityComboBox,JComboBox,N,package);
Attribute(GanttTaskPropertiesBean,priorityLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,resourcesPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,savePredecessors,Vector,N,protected);
Attribute(GanttTaskPropertiesBean,scrollPaneNotes,JScrollPane,N,package);
Attribute(GanttTaskPropertiesBean,secondRowPanel1,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,secondRowPanelNotes,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,selectedTask,GanttTask,N,protected);
Attribute(GanttTaskPropertiesBean,shapeComboBox,JPaintCombo,N,package);
Attribute(GanttTaskPropertiesBean,southPanel,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,start,GanttCalendar,N,private);
Attribute(GanttTaskPropertiesBean,startDateButton1,JButton,N,package);
Attribute(GanttTaskPropertiesBean,startDateField1,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,startDateLabel1,JLabel,N,package);
Attribute(GanttTaskPropertiesBean,tabbedPane,JTabbedPane,N,package);
Attribute(GanttTaskPropertiesBean,tfWebLink,JTextField,N,package);
Attribute(GanttTaskPropertiesBean,thirdRowPanel1,JPanel,N,package);
Attribute(GanttTaskPropertiesBean,tree,GanttTree,N,private);
Attribute(GanttTaskPropertiesBean,webLinkPanel,JPanel,N,package);
Class(GanttTaskPropertiesBean,N,N,public);
Generalisation(GanttTaskPropertiesBean,JPanel);
Method(GanttTaskPropertiesBean,GanttTaskPropertiesBean,N,Y,N,N,public);
Method(GanttTaskPropertiesBean,actionPerformed,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,addActionListener,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,addUsingGBL,void,Y,N,N,private);
Method(GanttTaskPropertiesBean,changeLength,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,changeNameOfTask,void,N,N,N,public);
Method(GanttTaskPropertiesBean,constructGeneralPanel,void,N,N,N,private);
Method(GanttTaskPropertiesBean,constructNotesPanel,void,N,N,N,private);
Method(GanttTaskPropertiesBean,constructPredecessorsPanel,void,N,N,N,private);
Method(GanttTaskPropertiesBean,constructResourcesPanel,void,N,N,N,private);
Method(GanttTaskPropertiesBean,constructSouthPanel,void,N,N,N,private);
Method(GanttTaskPropertiesBean,fireDurationChanged,void,N,N,N,public);
Method(GanttTaskPropertiesBean,getEnd,GanttCalendar,N,N,N,public);
Method(GanttTaskPropertiesBean,getLength,int,N,N,N,public);
Method(GanttTaskPropertiesBean,getNotes,String,N,N,N,public);
Method(GanttTaskPropertiesBean,getPercentComplete,int,N,N,N,public);
Method(GanttTaskPropertiesBean,getPriority,int,N,N,N,public);
Method(GanttTaskPropertiesBean,getReturnTask,Task,N,N,N,public);
Method(GanttTaskPropertiesBean,getStart,GanttCalendar,N,N,N,public);
Method(GanttTaskPropertiesBean,getTaskName,String,N,N,N,public);
Method(GanttTaskPropertiesBean,getWebLink,String,N,N,N,public);
Method(GanttTaskPropertiesBean,init,void,N,N,N,public);
Method(GanttTaskPropertiesBean,isBilan,boolean,N,N,N,public);
Method(GanttTaskPropertiesBean,setEnd,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,setFirstRow,void,Y,N,N,private);
Method(GanttTaskPropertiesBean,setSelectedTask,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,setStart,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,setStartFixed,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,setTree,void,Y,N,N,public);
Method(GanttTaskPropertiesBean,stateChanged,void,Y,N,N,public);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,managerHash,Hashtable,declaration);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,parent,JDialog,declaration);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,selectedTask,GanttTask,declaration);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,tree,GanttTree,declaration);
Parameter(GanttTaskPropertiesBean,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttTaskPropertiesBean,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttTaskPropertiesBean,addActionListener,l,ActionListener,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,component,Component,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,container,Container,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,gbc,GridBagConstraints,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,h,int,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,w,int,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,x,int,declaration);
Parameter(GanttTaskPropertiesBean,addUsingGBL,y,int,declaration);
Parameter(GanttTaskPropertiesBean,changeLength,_endGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,changeLength,_length,int,declaration);
Parameter(GanttTaskPropertiesBean,changeNameOfTask,nameOfTaskString,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,colorChooserTitleString,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,dialogJDialog,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,gdiGanttDialogInfo,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,iconImageIcon,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,lshapeJLabel,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,shapePanelJPanel,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,spinnerModelSpinnerNumberModel,local);
Parameter(GanttTaskPropertiesBean,constructNotesPanel,bdateJButton,local);
Parameter(GanttTaskPropertiesBean,fireDurationChanged,durationint,local);
Parameter(GanttTaskPropertiesBean,fireDurationChanged,valueString,local);
Parameter(GanttTaskPropertiesBean,getReturnTask,returnTaskGanttTask,local);
Parameter(GanttTaskPropertiesBean,getTaskName,textString,local);
Parameter(GanttTaskPropertiesBean,getWebLink,textString,local);
Parameter(GanttTaskPropertiesBean,setEnd,_startGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,setEnd,dend,GanttCalendar,declaration);
Parameter(GanttTaskPropertiesBean,setEnd,test,boolean,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,container,Container,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,durationField,JTextField,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,durationLabel,JLabel,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,gbc,GridBagConstraints,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,nameField,JTextField,declaration);
Parameter(GanttTaskPropertiesBean,setFirstRow,nameLabel,JLabel,declaration);
Parameter(GanttTaskPropertiesBean,setSelectedTask,selectedTask,GanttTask,declaration);
Parameter(GanttTaskPropertiesBean,setStart,_endGanttCalendar,local);
Parameter(GanttTaskPropertiesBean,setStart,dstart,GanttCalendar,declaration);
Parameter(GanttTaskPropertiesBean,setStart,test,boolean,declaration);
Parameter(GanttTaskPropertiesBean,setStartFixed,startFixed,boolean,declaration);
Parameter(GanttTaskPropertiesBean,setTree,tree,GanttTree,declaration);
Parameter(GanttTaskPropertiesBean,stateChanged,e,ChangeEvent,declaration);
Relation(GanttDialogProperties;GanttDialogProperties;addActionListener,GanttTaskPropertiesBean,ActionListener);
Relation(GanttDialogProperties;actionPerformed;changeLength,GanttTaskPropertiesBean,int);
Relation(GanttDialogProperties;actionPerformed;changeNameOfTask,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getEnd,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getReturnTask,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;getStart,GanttTaskPropertiesBean,N);
Relation(GanttDialogProperties;actionPerformed;setEnd,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttDialogProperties;actionPerformed;setStart,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;get,Hashtable,Object);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;getPredecessorsOld,GanttTask,N);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;init,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;setSelectedTask,GanttTaskPropertiesBean,GanttTask);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;setTree,GanttTaskPropertiesBean,GanttTree);
Relation(GanttTaskPropertiesBean;NgetInstance,GanttLanguage,N);
Relation(GanttTaskPropertiesBean;addActionListener;addActionListener,AbstractButton,ActionListener);
Relation(GanttTaskPropertiesBean;addActionListener;addActionListener,JTextField,ActionListener);
Relation(GanttTaskPropertiesBean;addUsingGBL;add,Container,Component-Object);
Relation(GanttTaskPropertiesBean;changeLength;durationChanged,CommonPanel,int);
Relation(GanttTaskPropertiesBean;changeLength;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;changeLength;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;changeLength;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;changeNameOfTask;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;changeNameOfTask;nameChanged,CommonPanel,String);
Relation(GanttTaskPropertiesBean;changeNameOfTask;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;changeNameOfTask;trim,String,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;add,Container,Component);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;add,Container,Component-Object);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;addActionListener,AbstractButton,ActionListener);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;addItem,JComboBox,Object);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;addUsingGBL,GanttTaskPropertiesBean,Container-Component-GridBagConstraints-int-int-int-int);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;createDialog,JColorChooser,Component-String-boolean-JColorChooser-ActionListener-ActionListener);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;displayURL,BrowserControl,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getBackground,Component,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getClass,Object,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getColor,JColorChooser,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getColor,TaskImpl,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getResource,Class<>,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getToolTip,GanttProject,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setBackground,JComponent,Color);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setBorder,JComponent,Border);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setColor,JColorChooser,Color);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setEditable,JComboBox,boolean);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setEditable,JTextComponent,boolean);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setFirstRow,GanttTaskPropertiesBean,Container-GridBagConstraints-JLabel-JTextField-JLabel-JTextField);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setLayout,Container,LayoutManager);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setName,Component,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;setToolTipText,JComponent,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;show,Dialog,N);
Relation(GanttTaskPropertiesBean;constructNotesPanel;add,Container,Component);
Relation(GanttTaskPropertiesBean;constructNotesPanel;add,Container,Component-Object);
Relation(GanttTaskPropertiesBean;constructNotesPanel;addActionListener,AbstractButton,ActionListener);
Relation(GanttTaskPropertiesBean;constructNotesPanel;addUsingGBL,GanttTaskPropertiesBean,Container-Component-GridBagConstraints-int-int-int-int);
Relation(GanttTaskPropertiesBean;constructNotesPanel;append,JTextArea,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getClass,Object,N);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getDateAndTime,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getResource,Class<>,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getToolTip,GanttProject,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setBackground,JComponent,Color);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setBorder,JComponent,Border);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setEditable,JTextComponent,boolean);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setFirstRow,GanttTaskPropertiesBean,Container-GridBagConstraints-JLabel-JTextField-JLabel-JTextField);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setLineWrap,JTextArea,boolean);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setToolTipText,JComponent,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;setWrapStyleWord,JTextArea,boolean);
Relation(GanttTaskPropertiesBean;constructPredecessorsPanel;getComponent,TaskDependenciesPanel,N);
Relation(GanttTaskPropertiesBean;constructResourcesPanel;getComponent,TaskAllocationsPanel,N);
Relation(GanttTaskPropertiesBean;constructSouthPanel;add,Container,Component);
Relation(GanttTaskPropertiesBean;constructSouthPanel;getRootPane,JComponent,N);
Relation(GanttTaskPropertiesBean;constructSouthPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;constructSouthPanel;setDefaultButton,JRootPane,JButton);
Relation(GanttTaskPropertiesBean;constructSouthPanel;setName,Component,String);
Relation(GanttTaskPropertiesBean;fireDurationChanged;changeLength,GanttTaskPropertiesBean,int);
Relation(GanttTaskPropertiesBean;fireDurationChanged;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;fireDurationChanged;parseInt,Integer,String);
Relation(GanttTaskPropertiesBean;getLength;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;getLength;parseInt,Integer,String);
Relation(GanttTaskPropertiesBean;getLength;trim,String,N);
Relation(GanttTaskPropertiesBean;getNotes;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;getPercentComplete;getValue,JSpinner,N);
Relation(GanttTaskPropertiesBean;getPercentComplete;hashCode,Integer,N);
Relation(GanttTaskPropertiesBean;getPriority;getSelectedIndex,JComboBox,N);
Relation(GanttTaskPropertiesBean;getReturnTask;commit,DependencyTableModel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;commit,ResourcesTableModel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getBackground,Component,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getEnd,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getLength,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getNotes,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getPercentComplete,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getPriority,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getSelectedIndex,JComboBox,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getSelectedPaint,JPaintCombo,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getStart,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getTableModel,TaskAllocationsPanel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getTableModel,TaskDependenciesPanel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getTaskName,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getWebLink,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;isBilan,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;getReturnTask;setChecked,GanttTask,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setColor,TaskImpl,Color);
Relation(GanttTaskPropertiesBean;getReturnTask;setCompletionPercentage,TaskImpl,int);
Relation(GanttTaskPropertiesBean;getReturnTask;setEnd,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getReturnTask;setLength,GanttTask,int);
Relation(GanttTaskPropertiesBean;getReturnTask;setMilestone,TaskImpl,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setName,TaskImpl,String);
Relation(GanttTaskPropertiesBean;getReturnTask;setNotes,TaskImpl,String);
Relation(GanttTaskPropertiesBean;getReturnTask;setPriority,TaskImpl,int);
Relation(GanttTaskPropertiesBean;getReturnTask;setShape,TaskImpl,ShapePaint);
Relation(GanttTaskPropertiesBean;getReturnTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getReturnTask;setStartFixed,TaskImpl,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setWebLink,TaskImpl,String);
Relation(GanttTaskPropertiesBean;getStart;setFixed,GanttCalendar,boolean);
Relation(GanttTaskPropertiesBean;getTaskName;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;getTaskName;trim,String,N);
Relation(GanttTaskPropertiesBean;getWebLink;getText,JTextComponent,N);
Relation(GanttTaskPropertiesBean;getWebLink;trim,String,N);
Relation(GanttTaskPropertiesBean;init;add,Container,Component-Object);
Relation(GanttTaskPropertiesBean;init;addChangeListener,SingleSelectionModel,ChangeListener);
Relation(GanttTaskPropertiesBean;init;addTab,JTabbedPane,String-Icon-Component);
Relation(GanttTaskPropertiesBean;init;changeNameOfTask,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;constructGeneralPanel,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;constructNotesPanel,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;constructPredecessorsPanel,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;constructResourcesPanel,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;constructSouthPanel,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;correctLabel,GanttProject,String);
Relation(GanttTaskPropertiesBean;init;fireDurationChanged,GanttTaskPropertiesBean,N);
Relation(GanttTaskPropertiesBean;init;getClass,Object,N);
Relation(GanttTaskPropertiesBean;init;getModel,JTabbedPane,N);
Relation(GanttTaskPropertiesBean;init;getResource,Class<>,String);
Relation(GanttTaskPropertiesBean;init;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;init;setLayout,Container,LayoutManager);
Relation(GanttTaskPropertiesBean;isBilan;isSelected,AbstractButton,N);
Relation(GanttTaskPropertiesBean;setEnd;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setEnd;diff,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setEnd;durationChanged,CommonPanel,int);
Relation(GanttTaskPropertiesBean;setEnd;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;setEnd;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;setEnd;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setFirstRow;addUsingGBL,GanttTaskPropertiesBean,Container-Component-GridBagConstraints-int-int-int-int);
Relation(GanttTaskPropertiesBean;setFirstRow;setLayout,Container,LayoutManager);
Relation(GanttTaskPropertiesBean;setSelectedTask;Clone,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;equals,ShapePaint,Object);
Relation(GanttTaskPropertiesBean;setSelectedTask;getCompletionPercentage,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getEnd,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getLength,GanttTask,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getName,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getNotes,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getPriority,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getShape,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getStart,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;getWebLink,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;isMilestone,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;isStartFixed,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;setEnd,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;setName,Component,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;setSelected,AbstractButton,boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;setSelectedIndex,JComboBox,int);
Relation(GanttTaskPropertiesBean;setSelectedTask;setStart,GanttTaskPropertiesBean,GanttCalendar-boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;setStartFixed,GanttTaskPropertiesBean,boolean);
Relation(GanttTaskPropertiesBean;setSelectedTask;setText,JLabel,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;setValue,JSpinner,Object);
Relation(GanttTaskPropertiesBean;setSelectedTask;shapeDefined,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;toString,GanttTask,N);
Relation(GanttTaskPropertiesBean;setStart;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setStart;diff,GanttCalendar,GanttCalendar);
Relation(GanttTaskPropertiesBean;setStart;durationChanged,CommonPanel,int);
Relation(GanttTaskPropertiesBean;setStart;isFixed,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setStart;newAdd,GanttCalendar,int);
Relation(GanttTaskPropertiesBean;setStart;setStartFixed,GanttTaskPropertiesBean,boolean);
Relation(GanttTaskPropertiesBean;setStart;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;setStart;toString,GanttCalendar,N);
Relation(GanttTaskPropertiesBean;setStartFixed;setForeground,JComponent,Color);
end b78
start b79
Attribute(TaskTagHandler,myContext,ParsingContext,N,private);
Attribute(TaskTagHandler,myManager,TaskManager,N,private);
Attribute(TaskTagHandler,myStack,Stack,N,private);
Class(TaskTagHandler,N,N,public);
Method(TaskTagHandler,TaskTagHandler,N,Y,N,N,public);
Method(TaskTagHandler,endElement,void,Y,N,N,public);
Method(TaskTagHandler,getManager,TaskManager,N,N,N,private);
Method(TaskTagHandler,loadTask,void,Y,N,N,private);
Method(TaskTagHandler,startElement,void,Y,N,N,public);
Parameter(TaskTagHandler,TaskTagHandler,context,ParsingContext,declaration);
Parameter(TaskTagHandler,TaskTagHandler,mgr,TaskManager,declaration);
Parameter(TaskTagHandler,endElement,namespaceURI,String,declaration);
Parameter(TaskTagHandler,endElement,qName,String,declaration);
Parameter(TaskTagHandler,endElement,sName,String,declaration);
Parameter(TaskTagHandler,loadTask,attrs,Attributes,declaration);
Parameter(TaskTagHandler,loadTask,colorString,local);
Parameter(TaskTagHandler,loadTask,completeString,local);
Parameter(TaskTagHandler,loadTask,durationString,local);
Parameter(TaskTagHandler,loadTask,expandString,local);
Parameter(TaskTagHandler,loadTask,fixedStartString,local);
Parameter(TaskTagHandler,loadTask,meetingString,local);
Parameter(TaskTagHandler,loadTask,priorityString,local);
Parameter(TaskTagHandler,loadTask,startString,local);
Parameter(TaskTagHandler,loadTask,taskGanttTask,local);
Parameter(TaskTagHandler,loadTask,taskIdAsStringString,local);
Parameter(TaskTagHandler,loadTask,taskIdint,local);
Parameter(TaskTagHandler,loadTask,taskNameString,local);
Parameter(TaskTagHandler,loadTask,webLinkString,local);
Parameter(TaskTagHandler,startElement,attrs,Attributes,declaration);
Parameter(TaskTagHandler,startElement,namespaceURI,String,declaration);
Parameter(TaskTagHandler,startElement,qName,String,declaration);
Parameter(TaskTagHandler,startElement,sName,String,declaration);
Relation(TaskTagHandler;endElement;equals,String,Object);
Relation(TaskTagHandler;endElement;pop,Stack,N);
Relation(TaskTagHandler;loadTask;createTask,TaskManager,N);
Relation(TaskTagHandler;loadTask;createTask,TaskManager,int);
Relation(TaskTagHandler;loadTask;equals,String,Object);
Relation(TaskTagHandler;loadTask;getManager,TaskTagHandler,N);
Relation(TaskTagHandler;loadTask;getTaskID,TaskImpl,N);
Relation(TaskTagHandler;loadTask;getValue,Attributes,String);
Relation(TaskTagHandler;loadTask;parseInt,Integer,String);
Relation(TaskTagHandler;loadTask;parseString,ColorValueParser,String);
Relation(TaskTagHandler;loadTask;parseXMLDate,GanttCalendar,String);
Relation(TaskTagHandler;loadTask;push,Stack,Object);
Relation(TaskTagHandler;loadTask;registerTask,TaskManager,Task);
Relation(TaskTagHandler;loadTask;setColor,TaskImpl,Color);
Relation(TaskTagHandler;loadTask;setCompletionPercentage,TaskImpl,int);
Relation(TaskTagHandler;loadTask;setExpand,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setLength,GanttTask,int);
Relation(TaskTagHandler;loadTask;setMilestone,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setName,TaskImpl,String);
Relation(TaskTagHandler;loadTask;setPriority,TaskImpl,int);
Relation(TaskTagHandler;loadTask;setStart,TaskImpl,GanttCalendar);
Relation(TaskTagHandler;loadTask;setStartFixed,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setTaskID,ParsingContext,int);
Relation(TaskTagHandler;loadTask;setWebLink,TaskImpl,String);
Relation(TaskTagHandler;startElement;equals,String,Object);
Relation(TaskTagHandler;startElement;loadTask,TaskTagHandler,Attributes);
end b79
start b80
Attribute(TaskLengthImpl,myCount,long,N,private);
Attribute(TaskLengthImpl,myUnit,TimeUnit,N,private);
Class(TaskLengthImpl,N,N,public);
Method(TaskLengthImpl,TaskLengthImpl,N,Y,N,N,public);
Method(TaskLengthImpl,getLength,long,N,N,N,public);
Method(TaskLengthImpl,getLength,long,Y,N,N,public);
Method(TaskLengthImpl,getTimeUnit,TimeUnit,N,N,N,public);
Method(TaskLengthImpl,setLength,void,Y,N,N,public);
Method(TaskLengthImpl,toString,String,N,N,N,public);
Parameter(TaskLengthImpl,TaskLengthImpl,count,long,declaration);
Parameter(TaskLengthImpl,TaskLengthImpl,unit,TimeUnit,declaration);
Parameter(TaskLengthImpl,getLength,unit,TimeUnit,declaration);
Parameter(TaskLengthImpl,setLength,length,long,declaration);
Parameter(TaskLengthImpl,setLength,unit,TimeUnit,declaration);
Relation(TaskLengthImpl;getLength;equals,Object,Object);
Relation(TaskLengthImpl;setLength;equals,Object,Object);
Relation(TaskLengthImpl;toString;getName,TimeUnit,N);
end b80
start b81
Attribute(RoleManagerImpl,DEFAULT_ROLE_SET,RoleSetImpl,static,package);
Attribute(RoleManagerImpl,SOFTWARE_DEVELOPMENT_ROLE_SET,RoleSetImpl,static,package);
Attribute(RoleManagerImpl,defaultRoles,String[],N,package);
Attribute(RoleManagerImpl,myProjectRoleSet,RoleSetImpl,N,private);
Attribute(RoleManagerImpl,myRoleSets,ArrayList,N,private);
Class(RoleManagerImpl,N,N,public);
Method(RoleManagerImpl,RoleManagerImpl,N,N,N,N,public);
Method(RoleManagerImpl,add,void,Y,N,N,public);
Method(RoleManagerImpl,clear,void,N,N,N,public);
Method(RoleManagerImpl,createRoleSet,RoleSet,Y,N,N,public);
Method(RoleManagerImpl,getDefaultRole,Role,N,N,N,public);
Method(RoleManagerImpl,getEnabledRoles,Role[],N,N,N,public);
Method(RoleManagerImpl,getProjectLevelRoles,Role[],N,N,N,public);
Method(RoleManagerImpl,getProjectRoleSet,RoleSet,N,N,N,public);
Method(RoleManagerImpl,getRoleSet,RoleSet,Y,N,N,public);
Method(RoleManagerImpl,getRoleSets,RoleSet[],N,N,N,public);
Parameter(RoleManagerImpl,-,languageGanttLanguage,local);
Parameter(RoleManagerImpl,add,ID,int,declaration);
Parameter(RoleManagerImpl,add,roleName,String,declaration);
Parameter(RoleManagerImpl,clear,nextRoleSet,local);
Parameter(RoleManagerImpl,createRoleSet,name,String,declaration);
Parameter(RoleManagerImpl,createRoleSet,resultRoleSet,local);
Parameter(RoleManagerImpl,getEnabledRoles,resultArrayList,local);
Parameter(RoleManagerImpl,getEnabledRoles,roleSetsRoleSet[],local);
Parameter(RoleManagerImpl,getRoleSet,resultRoleSet,local);
Parameter(RoleManagerImpl,getRoleSet,roleSetsRoleSet[],local);
Parameter(RoleManagerImpl,getRoleSet,rolesetName,String,declaration);
Relation(RoleManagerImpl;NcreateRole,RoleSetImpl,String-int);
Relation(RoleManagerImpl;NgetInstance,GanttLanguage,N);
Relation(RoleManagerImpl;NgetText,GanttLanguage,String);
Relation(RoleManagerImpl;NsetEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;RoleManagerImpl;add,ArrayList,Object);
Relation(RoleManagerImpl;RoleManagerImpl;clear,RoleManagerImpl,N);
Relation(RoleManagerImpl;RoleManagerImpl;setEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;add;createRole,RoleSetImpl,String-int);
Relation(RoleManagerImpl;clear;get,ArrayList,int);
Relation(RoleManagerImpl;clear;setEnabled,RoleSet,boolean);
Relation(RoleManagerImpl;clear;setEnabled,RoleSetImpl,boolean);
Relation(RoleManagerImpl;clear;size,ArrayList,N);
Relation(RoleManagerImpl;createRoleSet;add,ArrayList,Object);
Relation(RoleManagerImpl;createRoleSet;println,PrintStream,String);
Relation(RoleManagerImpl;getDefaultRole;findRole,RoleSetImpl,int);
Relation(RoleManagerImpl;getEnabledRoles;addAll,ArrayList,Collection);
Relation(RoleManagerImpl;getEnabledRoles;asList,Arrays,Role[]);
Relation(RoleManagerImpl;getEnabledRoles;getProjectRoleSet,RoleManagerImpl,N);
Relation(RoleManagerImpl;getEnabledRoles;getRoleSets,RoleManagerImpl,N);
Relation(RoleManagerImpl;getEnabledRoles;getRoles,RoleSet,N);
Relation(RoleManagerImpl;getEnabledRoles;isEnabled,RoleSet,N);
Relation(RoleManagerImpl;getEnabledRoles;toArray,ArrayList,Object[]);
Relation(RoleManagerImpl;getProjectLevelRoles;getRoles,RoleSetImpl,N);
Relation(RoleManagerImpl;getRoleSet;equals,String,Object);
Relation(RoleManagerImpl;getRoleSet;getName,RoleSet,N);
Relation(RoleManagerImpl;getRoleSet;getRoleSets,RoleManagerImpl,N);
Relation(RoleManagerImpl;getRoleSets;toArray,ArrayList,Object[]);
end b81
start b82
Attribute(TaskHierarchyItem,EMPTY_ARRAY,TaskHierarchyItem[],static,private);
Attribute(TaskHierarchyItem,myContainerItem,TaskHierarchyItem,N,private);
Attribute(TaskHierarchyItem,myFirstNestedItem,TaskHierarchyItem,N,private);
Attribute(TaskHierarchyItem,myNextSiblingItem,TaskHierarchyItem,N,private);
Attribute(TaskHierarchyItem,myTask,Task,N,private);
Attribute(TaskHierarchyManagerImpl,myRootItem,TaskHierarchyItem,N,private);
Attribute(TaskImpl,myTaskHierarchyItem,TaskHierarchyItem,N,private);
Class(TaskHierarchyItem,N,N,public);
Method(TaskHierarchyItem,TaskHierarchyItem,N,Y,N,N,public);
Method(TaskHierarchyItem,addNestedItem,void,Y,N,N,public);
Method(TaskHierarchyItem,delete,void,N,N,N,public);
Method(TaskHierarchyItem,getContainerItem,TaskHierarchyItem,N,N,N,public);
Method(TaskHierarchyItem,getNestedItems,TaskHierarchyItem[],N,N,N,public);
Method(TaskHierarchyItem,getTask,Task,N,N,N,public);
Method(TaskHierarchyManagerImpl,createItem,TaskHierarchyItem,Y,N,N,public);
Method(TaskHierarchyManagerImpl,getRootItem,TaskHierarchyItem,N,N,N,public);
Parameter(TaskHierarchyItem,TaskHierarchyItem,containerItem,TaskHierarchyItem,declaration);
Parameter(TaskHierarchyItem,TaskHierarchyItem,myTask,Task,declaration);
Parameter(TaskHierarchyItem,addNestedItem,nested,TaskHierarchyItem,declaration);
Parameter(TaskHierarchyItem,delete,previousSiblingTaskHierarchyItem,local);
Parameter(TaskHierarchyItem,getNestedItems,resultTaskHierarchyItem[],local);
Parameter(TaskHierarchyItem,getNestedItems,tempListArrayList,local);
Parameter(TaskHierarchyManagerImpl,createItem,resultTaskHierarchyItem,local);
Parameter(TaskImpl,getSupertask,containerTaskHierarchyItem,local);
Parameter(TaskImpl,move,targetItemTaskHierarchyItem,local);
Relation(TaskHierarchyItem;TaskHierarchyItem;addNestedItem,TaskHierarchyItem,TaskHierarchyItem);
Relation(TaskHierarchyItem;getNestedItems;add,ArrayList,Object);
Relation(TaskHierarchyItem;getNestedItems;toArray,ArrayList,Object[]);
Relation(TaskImpl;getNestedTasks;getNestedItems,TaskHierarchyItem,N);
Relation(TaskImpl;getNestedTasks;getTask,TaskHierarchyItem,N);
Relation(TaskImpl;getSupertask;getContainerItem,TaskHierarchyItem,N);
Relation(TaskImpl;getSupertask;getTask,TaskHierarchyItem,N);
Relation(TaskImpl;move;addNestedItem,TaskHierarchyItem,TaskHierarchyItem);
Relation(TaskImpl;move;delete,TaskHierarchyItem,N);
end b82
start b83
Class(InternalStateListener,N,N,public);
Method(InternalStateListener,durationChanged,void,Y,N,N,package);
Method(InternalStateListener,nameChanged,void,Y,N,N,package);
Parameter(InternalStateListener,durationChanged,newDuration,int,declaration);
Parameter(InternalStateListener,nameChanged,newName,String,declaration);
end b83
start b84
Class(AboutPanel,N,N,public);
Generalisation(AboutPanel,GeneralOptionPanel);
Method(AboutPanel,AboutPanel,N,Y,N,N,public);
Method(AboutPanel,actionPerformed,void,Y,N,N,public);
Method(AboutPanel,applyChanges,boolean,Y,N,N,public);
Method(AboutPanel,initialize,void,N,N,N,public);
Method(AboutPanel,paint,void,Y,N,N,public);
Parameter(AboutPanel,AboutPanel,bHomePageJButton,local);
Parameter(AboutPanel,AboutPanel,fontFont,local);
Parameter(AboutPanel,AboutPanel,g2Graphics2D,local);
Parameter(AboutPanel,AboutPanel,imagePanelJPanel,local);
Parameter(AboutPanel,AboutPanel,jLabelImageJLabel,local);
Parameter(AboutPanel,AboutPanel,parent,GanttProject,declaration);
Parameter(AboutPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(AboutPanel,applyChanges,askForApply,boolean,declaration);
Parameter(AboutPanel,paint,g,Graphics,declaration);
Relation(AboutPanel;AboutPanel;add,Container,Component);
Relation(AboutPanel;AboutPanel;add,Container,Component-Object);
Relation(AboutPanel;AboutPanel;addActionListener,AbstractButton,ActionListener);
Relation(AboutPanel;AboutPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(AboutPanel;AboutPanel;correctLabel,GanttProject,String);
Relation(AboutPanel;AboutPanel;displayURL,BrowserControl,String);
Relation(AboutPanel;AboutPanel;drawString,Graphics2D,String-int-int);
Relation(AboutPanel;AboutPanel;getClass,Object,N);
Relation(AboutPanel;AboutPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutPanel;AboutPanel;getInstance,GanttLanguage,N);
Relation(AboutPanel;AboutPanel;getResource,Class<>,String);
Relation(AboutPanel;AboutPanel;getSize,Component,N);
Relation(AboutPanel;AboutPanel;getText,GanttLanguage,String);
Relation(AboutPanel;AboutPanel;getToolTip,GanttProject,String);
Relation(AboutPanel;AboutPanel;getWidth,Dimension,N);
Relation(AboutPanel;AboutPanel;setColor,Graphics,Color);
Relation(AboutPanel;AboutPanel;setFont,Graphics,Font);
Relation(AboutPanel;AboutPanel;setRenderingHint,Graphics2D,Key-Object);
Relation(AboutPanel;AboutPanel;setToolTipText,JComponent,String);
end b84
start b85
Attribute(ConnectionPanel,tfLogin,JTextField,N,package);
Attribute(ConnectionPanel,tfPassword,JPasswordField,N,package);
Attribute(ConnectionPanel,tfUrl,JTextField,N,package);
Class(ConnectionPanel,N,N,public);
Generalisation(ConnectionPanel,GeneralOptionPanel);
Method(ConnectionPanel,ConnectionPanel,N,Y,N,N,public);
Method(ConnectionPanel,applyChanges,boolean,Y,N,N,public);
Method(ConnectionPanel,initialize,void,N,N,N,public);
Parameter(ConnectionPanel,ConnectionPanel,loginPanelJPanel,local);
Parameter(ConnectionPanel,ConnectionPanel,parent,GanttProject,declaration);
Parameter(ConnectionPanel,ConnectionPanel,passwordPanelJPanel,local);
Parameter(ConnectionPanel,ConnectionPanel,serverPanelJPanel,local);
Parameter(ConnectionPanel,ConnectionPanel,urlPanelJPanel,local);
Parameter(ConnectionPanel,ConnectionPanel,vbServerBox,local);
Parameter(ConnectionPanel,applyChanges,askForApply,boolean,declaration);
Relation(ConnectionPanel;ConnectionPanel;add,Container,Component);
Relation(ConnectionPanel;ConnectionPanel;add,Container,Component-Object);
Relation(ConnectionPanel;ConnectionPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(ConnectionPanel;ConnectionPanel;correctLabel,GanttProject,String);
Relation(ConnectionPanel;ConnectionPanel;createVerticalBox,Box,N);
Relation(ConnectionPanel;ConnectionPanel;getComponentOrientation,GanttLanguage,N);
Relation(ConnectionPanel;ConnectionPanel;getInstance,GanttLanguage,N);
Relation(ConnectionPanel;ConnectionPanel;getText,GanttLanguage,String);
end b85
start b86
Attribute(PaintCellRenderer,focusBorder,Border,N,protected);
Attribute(PaintCellRenderer,normalBorder,Border,N,protected);
Attribute(PaintCellRenderer,paint,Paint,N,protected);
Attribute(PaintCellRenderer,selectBorder,Border,N,protected);
Class(PaintCellRenderer,N,N,public);
Generalisation(PaintCellRenderer,JPanel);
Method(PaintCellRenderer,PaintCellRenderer,N,N,N,N,public);
Method(PaintCellRenderer,getListCellRendererComponent,Component,Y,N,N,public);
Method(PaintCellRenderer,paintComponent,void,Y,N,N,public);
Parameter(PaintCellRenderer,getListCellRendererComponent,borderBorder,local);
Parameter(PaintCellRenderer,getListCellRendererComponent,hasFocus,boolean,declaration);
Parameter(PaintCellRenderer,getListCellRendererComponent,index,int,declaration);
Parameter(PaintCellRenderer,getListCellRendererComponent,isSelected,boolean,declaration);
Parameter(PaintCellRenderer,getListCellRendererComponent,list,JList,declaration);
Parameter(PaintCellRenderer,getListCellRendererComponent,value,Object,declaration);
Parameter(PaintCellRenderer,paintComponent,gGraphics2D,local);
Parameter(PaintCellRenderer,paintComponent,gc,Graphics,declaration);
Parameter(PaintCellRenderer,paintComponent,hint,local);
Parameter(PaintCellRenderer,paintComponent,insetsInsets,local);
Parameter(PaintCellRenderer,paintComponent,rectRectangle,local);
Parameter(PaintCellRenderer,paintComponent,wint,local);
Relation(PaintCellRenderer;PaintCellRenderer;setPreferredSize,JComponent,Dimension);
Relation(PaintCellRenderer;getListCellRendererComponent;setBorder,JComponent,Border);
Relation(PaintCellRenderer;paintComponent;fill,Graphics2D,Shape);
Relation(PaintCellRenderer;paintComponent;getInsets,JComponent,N);
Relation(PaintCellRenderer;paintComponent;getSize,Component,N);
Relation(PaintCellRenderer;paintComponent;setPaint,Graphics2D,Paint);
end b86
start b87
Class(SettinsDefaultTreeCellRenderer,N,N,public);
end b87
start b88
Attribute(SettingsDialog,reinit,boolean,N,package);
Attribute(SettingsDialog,restoreButton,JButton,N,package);
Class(SettingsDialog,N,N,public);
Generalisation(SettingsDialog,GeneralDialog);
Method(SettingsDialog,SettingsDialog,N,Y,N,N,public);
Method(SettingsDialog,actionPerformed,void,Y,N,N,public);
Method(SettingsDialog,constructSections,void,N,N,N,public);
Method(SettingsDialog,valueChanged,void,Y,N,N,public);
Parameter(GanttProject,launchOptionsDialog,dialogOptionsSettingsDialog,local);
Parameter(SettingsDialog,SettingsDialog,parent,GanttProject,declaration);
Parameter(SettingsDialog,actionPerformed,e,ActionEvent,declaration);
Parameter(SettingsDialog,constructSections,exportNodeDefaultMutableTreeNode,local);
Parameter(SettingsDialog,constructSections,generalNodeDefaultMutableTreeNode,local);
Parameter(SettingsDialog,constructSections,projectNodeDefaultMutableTreeNode,local);
Parameter(SettingsDialog,constructSections,roleNodeDefaultMutableTreeNode,local);
Parameter(SettingsDialog,valueChanged,bHasChangeboolean,local);
Parameter(SettingsDialog,valueChanged,e,TreeSelectionEvent,declaration);
Parameter(SettingsDialog,valueChanged,nodeDefaultMutableTreeNode,local);
Parameter(SettingsDialog,valueChanged,sNodeString,local);
Parameter(SettingsDialog,valueChanged,vbBox,local);
Relation(SettingsDialog;SettingsDialog;add,Container,Component);
Relation(SettingsDialog;SettingsDialog;addActionListener,AbstractButton,ActionListener);
Relation(SettingsDialog;SettingsDialog;correctLabel,GanttProject,String);
Relation(SettingsDialog;SettingsDialog;getInstance,GanttLanguage,N);
Relation(SettingsDialog;SettingsDialog;getText,GanttLanguage,String);
Relation(SettingsDialog;SettingsDialog;setName,Component,String);
Relation(SettingsDialog;actionPerformed;getSource,EventObject,N);
Relation(SettingsDialog;actionPerformed;initialize,GeneralOptionPanel,N);
Relation(SettingsDialog;actionPerformed;restoreOptions,GanttProject,N);
Relation(SettingsDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(SettingsDialog;constructSections;correctLabel,GanttProject,String);
Relation(SettingsDialog;constructSections;getPath,DefaultMutableTreeNode,N);
Relation(SettingsDialog;constructSections;getText,GanttLanguage,String);
Relation(SettingsDialog;constructSections;scrollPathToVisible,JTree,TreePath);
Relation(SettingsDialog;valueChanged;add,Container,Component);
Relation(SettingsDialog;valueChanged;add,Container,Component-int);
Relation(SettingsDialog;valueChanged;applyChanges,GeneralOptionPanel,boolean);
Relation(SettingsDialog;valueChanged;constructSections,SettingsDialog,N);
Relation(SettingsDialog;valueChanged;correctLabel,GanttProject,String);
Relation(SettingsDialog;valueChanged;createVerticalBox,Box,N);
Relation(SettingsDialog;valueChanged;equals,String,Object);
Relation(SettingsDialog;valueChanged;getComment,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;getLastPathComponent,TreePath,N);
Relation(SettingsDialog;valueChanged;getOwner,Window,N);
Relation(SettingsDialog;valueChanged;getPath,TreeSelectionEvent,N);
Relation(SettingsDialog;valueChanged;getProject,GeneralDialog,N);
Relation(SettingsDialog;valueChanged;getText,GanttLanguage,String);
Relation(SettingsDialog;valueChanged;getTitle,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;getUserObject,DefaultMutableTreeNode,N);
Relation(SettingsDialog;valueChanged;initialize,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;reload,DefaultTreeModel,N);
Relation(SettingsDialog;valueChanged;remove,Container,int);
Relation(SettingsDialog;valueChanged;removeAllChildren,DefaultMutableTreeNode,N);
Relation(SettingsDialog;valueChanged;repaint,Component,N);
Relation(SettingsDialog;valueChanged;setRoot,DefaultTreeModel,TreeNode);
Relation(SettingsDialog;valueChanged;validate,Container,N);
end b88
start b89
Class(BoxObject,N,N,private);
Method(GanttXFIGSaver,task2box,BoxObject,Y,N,N,public);
Parameter(GanttXFIGSaver,drawTasks,boxObjectBoxObject,local);
Parameter(GanttXFIGSaver,drawbox,boxObject,BoxObject,declaration);
Parameter(GanttXFIGSaver,setProjectPlotTimes,boxObjectBoxObject,local);
Parameter(GanttXFIGSaver,task2box,boxObjectBoxObject,local);
Relation(GanttXFIGSaver;drawTasks;drawbox,GanttXFIGSaver,OutputStreamWriter-BoxObject);
end b89
start b90
Attribute(ParametersSettingsPanel,appli,GanttProject,N,private);
Attribute(ParametersSettingsPanel,cbAutomatic,JCheckBox,N,package);
Attribute(ParametersSettingsPanel,cbDrag,JCheckBox,N,package);
Attribute(ParametersSettingsPanel,cbRedLine,JCheckBox,N,package);
Attribute(ParametersSettingsPanel,spLockDAV,JSpinner,N,package);
Attribute(ParametersSettingsPanel,tfTaskPrefix,JTextField,N,package);
Class(ParametersSettingsPanel,N,N,public);
Generalisation(ParametersSettingsPanel,GeneralOptionPanel);
Method(ParametersSettingsPanel,ParametersSettingsPanel,N,Y,N,N,public);
Method(ParametersSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(ParametersSettingsPanel,getAutomatic,boolean,N,N,N,public);
Method(ParametersSettingsPanel,getDragTime,boolean,N,N,N,public);
Method(ParametersSettingsPanel,getLockDAVMinutes,int,N,N,N,public);
Method(ParametersSettingsPanel,getRedLine,boolean,N,N,N,public);
Method(ParametersSettingsPanel,getTaskNamePrefix,String,N,N,N,public);
Method(ParametersSettingsPanel,initialize,void,N,N,N,public);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,autoPanelJPanel,local);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,movePanelJPanel,local);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,parent,GanttProject,declaration);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,redLinePanelJPanel,local);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,taskPrefixPanelJPanel,local);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,webDavPanelJPanel,local);
Parameter(ParametersSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(ParametersSettingsPanel,getTaskNamePrefix,resString,local);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;add,Container,Component);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;add,Container,Component-Object);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;correctLabel,GanttProject,String);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getInstance,GanttLanguage,N);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getText,GanttLanguage,String);
Relation(ParametersSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ParametersSettingsPanel;applyChanges;equals,String,Object);
Relation(ParametersSettingsPanel;applyChanges;getAutomatic,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getAutomatic,ParametersSettingsPanel,N);
Relation(ParametersSettingsPanel;applyChanges;getDragTime,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getDragTime,ParametersSettingsPanel,N);
Relation(ParametersSettingsPanel;applyChanges;getLockDAVMinutes,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getLockDAVMinutes,ParametersSettingsPanel,N);
Relation(ParametersSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(ParametersSettingsPanel;applyChanges;getRedLine,ParametersSettingsPanel,N);
Relation(ParametersSettingsPanel;applyChanges;getTaskNamePrefix,ParametersSettingsPanel,N);
Relation(ParametersSettingsPanel;applyChanges;getTrueTaskNamePrefix,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getUIConfiguration,GanttProject,N);
Relation(ParametersSettingsPanel;applyChanges;isRedlineOn,UIConfiguration,N);
Relation(ParametersSettingsPanel;applyChanges;setAutomatic,GanttOptions,boolean);
Relation(ParametersSettingsPanel;applyChanges;setDragTime,GanttOptions,boolean);
Relation(ParametersSettingsPanel;applyChanges;setLockDAVMinutes,GanttOptions,int);
Relation(ParametersSettingsPanel;applyChanges;setLockDAVMinutes,HttpDocument,int);
Relation(ParametersSettingsPanel;applyChanges;setRedlineOn,UIConfiguration,boolean);
Relation(ParametersSettingsPanel;applyChanges;setTaskNamePrefix,GanttOptions,String);
Relation(ParametersSettingsPanel;getAutomatic;isSelected,AbstractButton,N);
Relation(ParametersSettingsPanel;getDragTime;isSelected,AbstractButton,N);
Relation(ParametersSettingsPanel;getLockDAVMinutes;getValue,JSpinner,N);
Relation(ParametersSettingsPanel;getLockDAVMinutes;intValue,Integer,N);
Relation(ParametersSettingsPanel;getRedLine;isSelected,AbstractButton,N);
Relation(ParametersSettingsPanel;getTaskNamePrefix;equals,String,Object);
Relation(ParametersSettingsPanel;getTaskNamePrefix;getText,GanttLanguage,String);
Relation(ParametersSettingsPanel;getTaskNamePrefix;getText,JTextComponent,N);
Relation(ParametersSettingsPanel;initialize;getAutomatic,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getDragTime,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getLockDAVMinutes,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(ParametersSettingsPanel;initialize;getTaskNamePrefix,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getUIConfiguration,GanttProject,N);
Relation(ParametersSettingsPanel;initialize;isRedlineOn,UIConfiguration,N);
Relation(ParametersSettingsPanel;initialize;setSelected,AbstractButton,boolean);
Relation(ParametersSettingsPanel;initialize;setText,JTextComponent,String);
Relation(ParametersSettingsPanel;initialize;setValue,JSpinner,Object);
end b90
start b91
Class(TaskDependencyException,N,N,public);
Generalisation(TaskDependencyException,Exception);
Method(TaskDependencyException,TaskDependencyException,N,N,N,N,public);
Method(TaskDependencyException,TaskDependencyException,N,Y,N,N,public);
Parameter(TaskDependencyException,TaskDependencyException,cause,Throwable,declaration);
Parameter(TaskDependencyException,TaskDependencyException,message,String,declaration);
end b91
start b92
Attribute(RoleImpl,myID,int,N,private);
Attribute(RoleImpl,myName,String,N,private);
Attribute(RoleImpl,myRoleSet,RoleSet,N,private);
Class(RoleImpl,N,N,public);
Method(RoleImpl,RoleImpl,N,Y,N,N,public);
Method(RoleImpl,getID,int,N,N,N,public);
Method(RoleImpl,getName,String,N,N,N,public);
Method(RoleImpl,getPersistentID,String,N,N,N,public);
Method(RoleImpl,toString,String,N,N,N,public);
Parameter(RoleImpl,RoleImpl,id,int,declaration);
Parameter(RoleImpl,RoleImpl,name,String,declaration);
Parameter(RoleImpl,RoleImpl,roleSet,RoleSet,declaration);
Parameter(RoleSetImpl,createRole,resultRoleImpl,local);
Relation(RoleImpl;getPersistentID;getID,RoleImpl,N);
Relation(RoleImpl;getPersistentID;getName,RoleSet,N);
Relation(RoleImpl;toString;getName,RoleImpl,N);
end b92
start b93
Class(GanttXMLOptionsParser,N,N,package);
end b93
start b94
Class(Collision,N,N,package);
Method(FinishFinishConstraintImpl,getCollision,Collision,N,N,N,public);
Method(FinishStartConstraintImpl,getCollision,Collision,N,N,N,public);
Method(StartFinishConstraintImpl,getCollision,Collision,N,N,N,public);
Method(StartStartConstraintImpl,getCollision,Collision,N,N,N,public);
Method(TaskDependencyConstraint,getCollision,Collision,N,N,N,package);
Parameter(FinishFinishConstraintImpl,getCollision,resultCollision,local);
Parameter(FinishStartConstraintImpl,getCollision,resultCollision,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,nextCollisionCollision,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,collisionCollision,local);
Parameter(StartFinishConstraintImpl,getCollision,resultCollision,local);
Parameter(StartStartConstraintImpl,getCollision,resultCollision,local);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getAcceptableStart,Collision,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getVariation,Collision,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;isActive,Collision,N);
end b94
start b95
Class(AboutFieldTableModel,N,N,package);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,modelpropertiesAboutFieldTableModel,local);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;addField,AboutFieldTableModel,SystemInfo);
end b95
start b96
Attribute(ResourcesTableModel,MAX_ROW_COUNT,int,static,private);
Attribute(ResourcesTableModel,columnNames,String[],N,package);
Attribute(ResourcesTableModel,myAssignmentCollection,ResourceAssignmentCollection,N,private);
Attribute(ResourcesTableModel,myAssignments,List,N,private);
Attribute(ResourcesTableModel,myMutator,ResourceAssignmentMutator,N,private);
Attribute(TaskAllocationsPanel,myResourcesTableModel,ResourcesTableModel,N,private);
Class(ResourcesTableModel,N,N,public);
Generalisation(ResourcesTableModel,AbstractTableModel);
Method(ResourcesTableModel,ResourcesTableModel,N,Y,N,N,public);
Method(ResourcesTableModel,commit,void,N,N,N,package);
Method(ResourcesTableModel,createAssignment,void,Y,N,N,private);
Method(ResourcesTableModel,getColumnClass,Class,Y,N,N,public);
Method(ResourcesTableModel,getColumnCount,int,N,N,N,public);
Method(ResourcesTableModel,getColumnName,String,Y,N,N,public);
Method(ResourcesTableModel,getRowCount,int,N,N,N,public);
Method(ResourcesTableModel,getValueAt,Object,Y,N,N,public);
Method(ResourcesTableModel,isCellEditable,boolean,Y,N,N,public);
Method(ResourcesTableModel,setValueAt,void,Y,N,N,public);
Method(ResourcesTableModel,updateAssignment,void,Y,N,N,private);
Method(TaskAllocationsPanel,getTableModel,ResourcesTableModel,N,N,N,public);
Parameter(ResourcesTableModel,ResourcesTableModel,assignmentCollection,ResourceAssignmentCollection,declaration);
Parameter(ResourcesTableModel,createAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,createAssignment,value,Object,declaration);
Parameter(ResourcesTableModel,getColumnClass,c,int,declaration);
Parameter(ResourcesTableModel,getColumnName,col,int,declaration);
Parameter(ResourcesTableModel,getValueAt,assignmentResourceAssignment,local);
Parameter(ResourcesTableModel,getValueAt,col,int,declaration);
Parameter(ResourcesTableModel,getValueAt,resultObject,local);
Parameter(ResourcesTableModel,getValueAt,row,int,declaration);
Parameter(ResourcesTableModel,isCellEditable,col,int,declaration);
Parameter(ResourcesTableModel,isCellEditable,resultboolean,local);
Parameter(ResourcesTableModel,isCellEditable,row,int,declaration);
Parameter(ResourcesTableModel,setValueAt,col,int,declaration);
Parameter(ResourcesTableModel,setValueAt,row,int,declaration);
Parameter(ResourcesTableModel,setValueAt,value,Object,declaration);
Parameter(ResourcesTableModel,updateAssignment,col,int,declaration);
Parameter(ResourcesTableModel,updateAssignment,loadAsFloatfloat,local);
Parameter(ResourcesTableModel,updateAssignment,loadfloat,local);
Parameter(ResourcesTableModel,updateAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,row,int,declaration);
Parameter(ResourcesTableModel,updateAssignment,updateTargetResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,value,Object,declaration);
Relation(GanttTaskPropertiesBean;getReturnTask;commit,ResourcesTableModel,N);
Relation(ResourcesTableModel;NgetInstance,GanttLanguage,N);
Relation(ResourcesTableModel;NgetText,GanttLanguage,String);
Relation(ResourcesTableModel;ResourcesTableModel;asList,Arrays,ResourceAssignment[]);
Relation(ResourcesTableModel;ResourcesTableModel;createMutator,ResourceAssignmentCollection,N);
Relation(ResourcesTableModel;ResourcesTableModel;getAssignments,ResourceAssignmentCollection,N);
Relation(ResourcesTableModel;commit;commit,ResourceAssignmentMutator,N);
Relation(ResourcesTableModel;createAssignment;add,List,Object);
Relation(ResourcesTableModel;createAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(ResourcesTableModel;createAssignment;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(ResourcesTableModel;createAssignment;setLoad,ResourceAssignment,float);
Relation(ResourcesTableModel;createAssignment;size,List,N);
Relation(ResourcesTableModel;getRowCount;size,List,N);
Relation(ResourcesTableModel;getValueAt;get,List,int);
Relation(ResourcesTableModel;getValueAt;getId,ProjectResource,N);
Relation(ResourcesTableModel;getValueAt;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;getValueAt;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;getValueAt;size,List,N);
Relation(ResourcesTableModel;getValueAt;valueOf,String,float);
Relation(ResourcesTableModel;getValueAt;valueOf,String,int);
Relation(ResourcesTableModel;isCellEditable;size,List,N);
Relation(ResourcesTableModel;setValueAt;createAssignment,ResourcesTableModel,Object);
Relation(ResourcesTableModel;setValueAt;size,List,N);
Relation(ResourcesTableModel;setValueAt;updateAssignment,ResourcesTableModel,Object-int-int);
Relation(ResourcesTableModel;updateAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(ResourcesTableModel;updateAssignment;delete,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(ResourcesTableModel;updateAssignment;get,List,int);
Relation(ResourcesTableModel;updateAssignment;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;parseFloat,Float,String);
Relation(ResourcesTableModel;updateAssignment;remove,List,int);
Relation(ResourcesTableModel;updateAssignment;set,List,int-Object);
Relation(ResourcesTableModel;updateAssignment;setLoad,ResourceAssignment,float);
Relation(ResourcesTableModel;updateAssignment;valueOf,String,Object);
end b96
start b97
Class(DocumentCreator,N,N,public);
Method(DocumentCreator,createDocument,Document,Y,N,static,public);
Parameter(DocumentCreator,createDocument,pass,String,declaration);
Parameter(DocumentCreator,createDocument,path,String,declaration);
Parameter(DocumentCreator,createDocument,user,String,declaration);
Relation(DocumentCreator;createDocument;createDocument,DocumentCreator,String-String-String);
Relation(DocumentCreator;createDocument;startsWith,String,String);
Relation(DocumentCreator;createDocument;toLowerCase,String,N);
Relation(GanttOptions;startElement;createDocument,DocumentCreator,String);
Relation(GanttProject;GanttProject;createDocument,DocumentCreator,String);
Relation(GanttProject;openStartupDocument;createDocument,DocumentCreator,String);
Relation(GanttProject;openURL;createDocument,DocumentCreator,String-String-String);
Relation(GanttProject;saveAsURLProject;createDocument,DocumentCreator,String-String-String);
end b97
start b98
Class(GanttDependStructure,N,N,private);
Parameter(DependencyTagHandler,loadDependency,gdsGanttDependStructure,local);
Parameter(DependencyTagHandler,parsingFinished,dsGanttDependStructure,local);
Relation(DependencyTagHandler;loadDependency;setDependTaskID,GanttDependStructure,int);
Relation(DependencyTagHandler;loadDependency;setDependType,GanttDependStructure,int);
Relation(DependencyTagHandler;loadDependency;setTaskID,GanttDependStructure,int);
end b98
start b99
Attribute(RoleTagHandler,myRoleManager,RoleManager,N,private);
Attribute(RoleTagHandler,myRoleSet,RoleSet,N,private);
Class(RoleTagHandler,N,N,public);
Method(RoleTagHandler,RoleTagHandler,N,Y,N,N,public);
Method(RoleTagHandler,clearRoleSet,void,N,N,N,private);
Method(RoleTagHandler,endElement,void,Y,N,N,public);
Method(RoleTagHandler,findRoleSet,void,Y,N,N,private);
Method(RoleTagHandler,getRoleManager,RoleManager,N,N,N,private);
Method(RoleTagHandler,loadRoles,void,Y,N,N,private);
Method(RoleTagHandler,startElement,void,Y,N,N,public);
Parameter(GanttProject,openDocument,rolesHandlerRoleTagHandler,local);
Parameter(ImportResources,actionPerformed,rolesHandlerRoleTagHandler,local);
Parameter(RoleTagHandler,RoleTagHandler,roleManager,RoleManager,declaration);
Parameter(RoleTagHandler,endElement,namespaceURI,String,declaration);
Parameter(RoleTagHandler,endElement,qName,String,declaration);
Parameter(RoleTagHandler,endElement,sName,String,declaration);
Parameter(RoleTagHandler,findRoleSet,roleSetName,String,declaration);
Parameter(RoleTagHandler,loadRoles,atts,Attributes,declaration);
Parameter(RoleTagHandler,loadRoles,existingRoleRole,local);
Parameter(RoleTagHandler,loadRoles,persistentIDRolePersistentID,local);
Parameter(RoleTagHandler,loadRoles,roleNameString,local);
Parameter(RoleTagHandler,startElement,attrs,Attributes,declaration);
Parameter(RoleTagHandler,startElement,namespaceURI,String,declaration);
Parameter(RoleTagHandler,startElement,qName,String,declaration);
Parameter(RoleTagHandler,startElement,sName,String,declaration);
Relation(RoleTagHandler;RoleTagHandler;clear,RoleManager,N);
Relation(RoleTagHandler;endElement;clearRoleSet,RoleTagHandler,N);
Relation(RoleTagHandler;endElement;equals,String,Object);
Relation(RoleTagHandler;findRoleSet;createRoleSet,RoleManager,String);
Relation(RoleTagHandler;findRoleSet;getProjectRoleSet,RoleManager,N);
Relation(RoleTagHandler;findRoleSet;getRoleSet,RoleManager,String);
Relation(RoleTagHandler;findRoleSet;setEnabled,RoleSet,boolean);
Relation(RoleTagHandler;loadRoles;createRole,RoleSet,String-int);
Relation(RoleTagHandler;loadRoles;findRole,RoleSet,int);
Relation(RoleTagHandler;loadRoles;getRoleID,RolePersistentID,N);
Relation(RoleTagHandler;loadRoles;getValue,Attributes,String);
Relation(RoleTagHandler;startElement;equals,String,Object);
Relation(RoleTagHandler;startElement;findRoleSet,RoleTagHandler,String);
Relation(RoleTagHandler;startElement;getValue,Attributes,String);
Relation(RoleTagHandler;startElement;loadRoles,RoleTagHandler,Attributes);
end b99
start b100
Class(FacadeImpl,N,N,private);
end b100
start b101
Class(FinishStartConstraintImpl,N,N,public);
Generalisation(FinishStartConstraintImpl,ConstraintImpl);
Method(FinishStartConstraintImpl,FinishStartConstraintImpl,N,N,N,N,public);
Method(FinishStartConstraintImpl,getCollision,Collision,N,N,N,public);
Parameter(FinishStartConstraintImpl,getCollision,dependantStartGanttCalendar,local);
Parameter(FinishStartConstraintImpl,getCollision,dependantTask,local);
Parameter(FinishStartConstraintImpl,getCollision,dependeeEndGanttCalendar,local);
Parameter(FinishStartConstraintImpl,getCollision,dependeeTask,local);
Parameter(FinishStartConstraintImpl,getCollision,isActiveboolean,local);
Parameter(FinishStartConstraintImpl,getCollision,resultCollision,local);
Relation(FinishStartConstraintImpl;FinishStartConstraintImpl;getInstance,GanttLanguage,N);
Relation(FinishStartConstraintImpl;FinishStartConstraintImpl;getText,GanttLanguage,String);
Relation(FinishStartConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(FinishStartConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(FinishStartConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(FinishStartConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(FinishStartConstraintImpl;getCollision;getEnd,Task,N);
Relation(FinishStartConstraintImpl;getCollision;getStart,Task,N);
Relation(FinishStartConstraintImpl;getCollision;isStartFixed,Task,N);
end b101
start b102
Attribute(TimeUnitImpl,myDirectAtomUnit,TimeUnit,N,private);
Attribute(TimeUnitImpl,myGraph,TimeUnitGraph,N,private);
Attribute(TimeUnitImpl,myName,String,N,private);
Attribute(TimeUnitImpl,myTextFormatter,TextFormatter,N,private);
Class(TimeUnitImpl,N,N,public);
Generalisation(TimeUnitDateFrameableImpl,TimeUnitImpl);
Method(TimeUnitImpl,TimeUnitImpl,N,Y,N,N,public);
Method(TimeUnitImpl,format,String,Y,N,N,public);
Method(TimeUnitImpl,getAtomCount,int,Y,N,N,public);
Method(TimeUnitImpl,getDirectAtomUnit,TimeUnit,N,N,N,public);
Method(TimeUnitImpl,getName,String,N,N,N,public);
Method(TimeUnitImpl,getTextFormatter,TextFormatter,N,N,N,protected);
Method(TimeUnitImpl,isConstructedFrom,boolean,Y,N,N,public);
Method(TimeUnitImpl,setTextFormatter,void,Y,N,N,public);
Method(TimeUnitImpl,toString,String,N,N,N,public);
Parameter(TimeUnitGraph,getComposition,timeUnit,TimeUnitImpl,declaration);
Parameter(TimeUnitImpl,TimeUnitImpl,directAtomUnit,TimeUnit,declaration);
Parameter(TimeUnitImpl,TimeUnitImpl,graph,TimeUnitGraph,declaration);
Parameter(TimeUnitImpl,TimeUnitImpl,name,String,declaration);
Parameter(TimeUnitImpl,format,baseDate,Date,declaration);
Parameter(TimeUnitImpl,getAtomCount,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitImpl,isConstructedFrom,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitImpl,setTextFormatter,formatter,TextFormatter,declaration);
Relation(TimeUnitFunctionOfDateImpl;format;getTextFormatter,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getDirectAtomUnit;getDirectAtomUnit,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getName;getName,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;isConstructedFrom;isConstructedFrom,TimeUnitImpl,TimeUnit);
Relation(TimeUnitFunctionOfDateImpl;setTextFormatter;setTextFormatter,TimeUnitImpl,TextFormatter);
Relation(TimeUnitImpl;format;format,TextFormatter,TimeUnit-Date);
Relation(TimeUnitImpl;getAtomCount;getAtomCount,Composition,N);
Relation(TimeUnitImpl;getAtomCount;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
Relation(TimeUnitImpl;isConstructedFrom;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
Relation(TimeUnitImpl;toString;getName,TimeUnitImpl,N);
end b102
start b103
Class(UnitInfo,N,static,private);
end b103
start b104
Attribute(TimeUnitDateFrameableImpl,myFramer,DateFrameable,N,private);
Class(TimeUnitDateFrameableImpl,N,N,public);
Generalisation(TimeUnitDateFrameableImpl,TimeUnitImpl);
Generalisation(TimeUnitFunctionOfDateImpl,TimeUnitDateFrameableImpl);
Method(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,N,Y,N,N,public);
Method(TimeUnitDateFrameableImpl,adjustLeft,Date,Y,N,N,public);
Method(TimeUnitDateFrameableImpl,adjustRight,Date,Y,N,N,public);
Method(TimeUnitDateFrameableImpl,jumpLeft,Date,Y,N,N,public);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,framer,DateFrameable,declaration);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,name,String,declaration);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,timeUnitGraph,TimeUnitGraph,declaration);
Parameter(TimeUnitDateFrameableImpl,adjustLeft,baseDate,Date,declaration);
Parameter(TimeUnitDateFrameableImpl,adjustRight,baseDate,Date,declaration);
Parameter(TimeUnitDateFrameableImpl,jumpLeft,baseDate,Date,declaration);
Relation(TimeUnitDateFrameableImpl;adjustLeft;adjustLeft,DateFrameable,Date);
Relation(TimeUnitDateFrameableImpl;adjustRight;adjustRight,DateFrameable,Date);
Relation(TimeUnitDateFrameableImpl;jumpLeft;jumpLeft,DateFrameable,Date);
Relation(TimeUnitFunctionOfDateImpl;ParameterizedTimeUnitImpl;adjustLeft,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;ParameterizedTimeUnitImpl;adjustRight,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;adjustLeft;adjustLeft,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;adjustRight;adjustRight,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;jumpLeft;jumpLeft,TimeUnitDateFrameableImpl,Date);
end b104
start b105
Class(StartStartConstraintImpl,N,N,public);
Generalisation(StartStartConstraintImpl,ConstraintImpl);
Method(StartStartConstraintImpl,StartStartConstraintImpl,N,N,N,N,public);
Method(StartStartConstraintImpl,getCollision,Collision,N,N,N,public);
Parameter(StartStartConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,dependantStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,dependantTask,local);
Parameter(StartStartConstraintImpl,getCollision,dependeeStartGanttCalendar,local);
Parameter(StartStartConstraintImpl,getCollision,dependeeTask,local);
Parameter(StartStartConstraintImpl,getCollision,isActiveboolean,local);
Parameter(StartStartConstraintImpl,getCollision,resultCollision,local);
Relation(StartStartConstraintImpl;StartStartConstraintImpl;getInstance,GanttLanguage,N);
Relation(StartStartConstraintImpl;StartStartConstraintImpl;getText,GanttLanguage,String);
Relation(StartStartConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(StartStartConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(StartStartConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(StartStartConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(StartStartConstraintImpl;getCollision;getStart,Task,N);
Relation(StartStartConstraintImpl;getCollision;isStartFixed,Task,N);
end b105
start b106
Attribute(DependencyTagHandler,dependType,int,N,public);
Attribute(DependencyTagHandler,myContext,ParsingContext,N,private);
Attribute(DependencyTagHandler,myDependencies,List,N,private);
Attribute(DependencyTagHandler,myDependenciesSectionStarted,boolean,N,private);
Attribute(DependencyTagHandler,myTaskManager,TaskManager,N,private);
Attribute(DependencyTagHandler,successorTaskID,int,N,public);
Attribute(DependencyTagHandler,taskID,int,N,public);
Class(DependencyTagHandler,N,N,public);
Method(DependencyTagHandler,DependencyTagHandler,N,Y,N,N,public);
Method(DependencyTagHandler,GanttDependStructure,N,N,N,N,public);
Method(DependencyTagHandler,GanttDependStructure,N,Y,N,N,public);
Method(DependencyTagHandler,endElement,void,Y,N,N,public);
Method(DependencyTagHandler,getContext,ParsingContext,N,N,N,private);
Method(DependencyTagHandler,getDependencies,List,N,N,N,private);
Method(DependencyTagHandler,getDependencyAddressee,int,Y,N,N,protected);
Method(DependencyTagHandler,getDependencyAddresser,int,Y,N,N,protected);
Method(DependencyTagHandler,loadDependency,void,Y,N,N,protected);
Method(DependencyTagHandler,parsingFinished,void,N,N,N,public);
Method(DependencyTagHandler,parsingStarted,void,N,N,N,public);
Method(DependencyTagHandler,setDependTaskID,void,Y,N,N,public);
Method(DependencyTagHandler,setDependType,void,Y,N,N,public);
Method(DependencyTagHandler,setTaskID,void,Y,N,N,public);
Method(DependencyTagHandler,startElement,void,Y,N,N,public);
Parameter(DependencyTagHandler,DependencyTagHandler,context,ParsingContext,declaration);
Parameter(DependencyTagHandler,DependencyTagHandler,taskManager,TaskManager,declaration);
Parameter(DependencyTagHandler,GanttDependStructure,a,int,declaration);
Parameter(DependencyTagHandler,GanttDependStructure,b,int,declaration);
Parameter(DependencyTagHandler,GanttDependStructure,relationType,int,declaration);
Parameter(DependencyTagHandler,GanttDependStructure,successorID,int,declaration);
Parameter(DependencyTagHandler,GanttDependStructure,taskID,int,declaration);
Parameter(DependencyTagHandler,endElement,namespaceURI,String,declaration);
Parameter(DependencyTagHandler,endElement,qName,String,declaration);
Parameter(DependencyTagHandler,endElement,sName,String,declaration);
Parameter(DependencyTagHandler,getDependencyAddressee,attrs,Attributes,declaration);
Parameter(DependencyTagHandler,getDependencyAddresser,attrs,Attributes,declaration);
Parameter(DependencyTagHandler,loadDependency,attrs,Attributes,declaration);
Parameter(DependencyTagHandler,loadDependency,dependencyTypeAsStringString,local);
Parameter(DependencyTagHandler,loadDependency,dependencyTypeint,local);
Parameter(DependencyTagHandler,loadDependency,gdsGanttDependStructure,local);
Parameter(DependencyTagHandler,parsingFinished,depTaskDependency,local);
Parameter(DependencyTagHandler,parsingFinished,dependantTask,local);
Parameter(DependencyTagHandler,parsingFinished,dependeeTask,local);
Parameter(DependencyTagHandler,parsingFinished,dsGanttDependStructure,local);
Parameter(DependencyTagHandler,setDependTaskID,successorTaskID,int,declaration);
Parameter(DependencyTagHandler,setDependType,dependType,int,declaration);
Parameter(DependencyTagHandler,setTaskID,taskID,int,declaration);
Parameter(DependencyTagHandler,startElement,attrs,Attributes,declaration);
Parameter(DependencyTagHandler,startElement,namespaceURI,String,declaration);
Parameter(DependencyTagHandler,startElement,qName,String,declaration);
Parameter(DependencyTagHandler,startElement,sName,String,declaration);
Parameter(GanttProject,importcbk,dependencyHandlerDependencyTagHandler,local);
Parameter(GanttProject,openDocument,dependencyHandlerDependencyTagHandler,local);
Parameter(GanttProject,openXMLStream,dependencyHandlerDependencyTagHandler,local);
Parameter(ImportResources,actionPerformed,dependencyHandlerDependencyTagHandler,local);
Relation(DependencyTagHandler;getDependencyAddressee;getContext,DependencyTagHandler,N);
Relation(DependencyTagHandler;getDependencyAddressee;getTaskID,ParsingContext,N);
Relation(DependencyTagHandler;getDependencyAddresser;getValue,Attributes,String);
Relation(DependencyTagHandler;getDependencyAddresser;parseInt,Integer,String);
Relation(DependencyTagHandler;loadDependency;add,List,Object);
Relation(DependencyTagHandler;loadDependency;getDependencies,DependencyTagHandler,N);
Relation(DependencyTagHandler;loadDependency;getDependencyAddressee,DependencyTagHandler,Attributes);
Relation(DependencyTagHandler;loadDependency;getDependencyAddresser,DependencyTagHandler,Attributes);
Relation(DependencyTagHandler;loadDependency;getValue,Attributes,String);
Relation(DependencyTagHandler;loadDependency;parseInt,Integer,String);
Relation(DependencyTagHandler;loadDependency;setDependTaskID,GanttDependStructure,int);
Relation(DependencyTagHandler;loadDependency;setDependType,GanttDependStructure,int);
Relation(DependencyTagHandler;loadDependency;setTaskID,GanttDependStructure,int);
Relation(DependencyTagHandler;parsingFinished;createConstraint,TaskManager,int);
Relation(DependencyTagHandler;parsingFinished;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTagHandler;parsingFinished;get,List,int);
Relation(DependencyTagHandler;parsingFinished;getDependencies,DependencyTagHandler,N);
Relation(DependencyTagHandler;parsingFinished;getDependencyCollection,TaskManager,N);
Relation(DependencyTagHandler;parsingFinished;getTask,TaskManager,int);
Relation(DependencyTagHandler;parsingFinished;printStackTrace,Throwable,N);
Relation(DependencyTagHandler;parsingFinished;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(DependencyTagHandler;parsingFinished;size,List,N);
Relation(DependencyTagHandler;startElement;equals,String,Object);
Relation(DependencyTagHandler;startElement;loadDependency,DependencyTagHandler,Attributes);
end b106
start b107
Class(AuthorsFieldTableModel,N,N,package);
Parameter(AboutAuthorPanel,AboutAuthorPanel,modelauthorsAuthorsFieldTableModel,local);
Relation(AboutAuthorPanel;AboutAuthorPanel;addField,AuthorsFieldTableModel,AuthorsInfo);
end b107
start b108
Attribute(TaskImpl,myTimeUnitManager,TimeUnitManager,N,private);
Attribute(TaskManagerImpl,myTimeUnitManager,TimeUnitManager,N,private);
Class(TimeUnitManager,N,N,public);
Method(TaskImpl,getTimeUnitManager,TimeUnitManager,N,N,N,protected);
Method(TaskManager,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TaskManagerImpl,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TimeUnitManager,getTimeUnit,TimeUnit,Y,N,N,package);
Parameter(GanttTask,GanttTask,timeManagerTimeUnitManager,local);
Parameter(TimeUnitManager,getTimeUnit,id,int,declaration);
Relation(GanttTask;GanttTask;getTimeUnit,TimeUnitManager,int);
Relation(TaskManagerImpl;getRootTask;getTimeUnit,TimeUnitManager,int);
end b108
start b109
Class(DialogAligner,N,N,public);
Method(DialogAligner,center,void,Y,N,static,public);
Parameter(DialogAligner,center,alignToParentboolean,local);
Parameter(DialogAligner,center,dialog,JDialog,declaration);
Parameter(DialogAligner,center,parent,Container,declaration);
Parameter(DialogAligner,center,pointPoint,local);
Parameter(DialogAligner,center,screenSizeDimension,local);
Parameter(DialogAligner,center,xint,local);
Parameter(DialogAligner,center,yint,local);
Relation(DialogAligner;center;getDefaultToolkit,Toolkit,N);
Relation(DialogAligner;center;getHeight,Component,N);
Relation(DialogAligner;center;getLocationOnScreen,Component,N);
Relation(DialogAligner;center;getScreenSize,Toolkit,N);
Relation(DialogAligner;center;getWidth,Component,N);
Relation(DialogAligner;center;getX,Point,N);
Relation(DialogAligner;center;getY,Point,N);
Relation(DialogAligner;center;isVisible,Component,N);
Relation(DialogAligner;center;setLocation,Component,int-int);
Relation(GanttDialogCalendar;GanttDialogCalendar;center,DialogAligner,JDialog-Container);
Relation(GanttDialogDate;GanttDialogDate;center,DialogAligner,JDialog-Container);
Relation(GanttDialogInfo;GanttDialogInfo;center,DialogAligner,JDialog-Container);
Relation(GanttDialogPerson;GanttDialogPerson;center,DialogAligner,JDialog-Container);
Relation(GanttDialogProperties;GanttDialogProperties;center,DialogAligner,JDialog-Container);
Relation(GanttPreviewPrint;GanttPreviewPrint;center,DialogAligner,JDialog-Container);
Relation(GanttURLChooser;GanttURLChooser;center,DialogAligner,JDialog-Container);
Relation(GeneralDialog;GeneralDialog;center,DialogAligner,JDialog-Container);
Relation(TipsDialog;TipsDialog;center,DialogAligner,JDialog-Container);
Relation(WizardImpl;show;center,DialogAligner,JDialog-Container);
end b109
start b110
Class(StartFinishConstraintImpl,N,N,public);
Generalisation(StartFinishConstraintImpl,ConstraintImpl);
Method(StartFinishConstraintImpl,StartFinishConstraintImpl,N,N,N,N,public);
Method(StartFinishConstraintImpl,getCollision,Collision,N,N,N,public);
Parameter(StartFinishConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(StartFinishConstraintImpl,getCollision,dependantEndGanttCalendar,local);
Parameter(StartFinishConstraintImpl,getCollision,dependantTask,local);
Parameter(StartFinishConstraintImpl,getCollision,dependeeStartGanttCalendar,local);
Parameter(StartFinishConstraintImpl,getCollision,dependeeTask,local);
Parameter(StartFinishConstraintImpl,getCollision,isActiveboolean,local);
Parameter(StartFinishConstraintImpl,getCollision,resultCollision,local);
Relation(StartFinishConstraintImpl;StartFinishConstraintImpl;getInstance,GanttLanguage,N);
Relation(StartFinishConstraintImpl;StartFinishConstraintImpl;getText,GanttLanguage,String);
Relation(StartFinishConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(StartFinishConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(StartFinishConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(StartFinishConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(StartFinishConstraintImpl;getCollision;getDuration,Task,N);
Relation(StartFinishConstraintImpl;getCollision;getEnd,Task,N);
Relation(StartFinishConstraintImpl;getCollision;getLength,TaskLength,N);
Relation(StartFinishConstraintImpl;getCollision;getStart,Task,N);
Relation(StartFinishConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(StartFinishConstraintImpl;getCollision;newAdd,GanttCalendar,int);
end b110
start b111
Attribute(WizardImpl,myNextAction,NextAction,N,private);
Class(NextAction,N,N,public);
end b111
start b112
Attribute(GanttStatusBar,message0,MessagePanel,N,protected);
Attribute(GanttStatusBar,message1,MessagePanel,N,protected);
Attribute(GanttStatusBar,message2,MessagePanel,N,protected);
Class(MessagePanel,N,N,private);
Relation(GanttStatusBar;GanttStatusBar;setText,MessagePanel,String);
Relation(GanttStatusBar;run;getTimer,MessagePanel,N);
Relation(GanttStatusBar;run;hideText,MessagePanel,N);
Relation(GanttStatusBar;run;setText,MessagePanel,String);
Relation(GanttStatusBar;setFirstText;setText,MessagePanel,String);
Relation(GanttStatusBar;setFirstText;setText,MessagePanel,String-int);
Relation(GanttStatusBar;setSecondText;setText,MessagePanel,String);
Relation(GanttStatusBar;setSecondText;setText,MessagePanel,String-int);
end b112
start b113
Class(Event,N,N,public);
Parameter(GanttLanguage,fireLanguageChanged,eventEvent,local);
Parameter(GanttLanguage,languageChanged,event,Event,declaration);
Parameter(NewTaskAction,languageChanged,event,Event,declaration);
Relation(GanttLanguage;fireLanguageChanged;languageChanged,Listener,Event);
Relation(NewTaskAction;languageChanged;getLanguage,Event,N);
end b113
start b114
Class(GanttCellListRenderer,N,N,public);
Generalisation(GanttCellListRenderer,JLabel);
Method(GanttCellListRenderer,GanttCellListRenderer,N,N,N,N,public);
Method(GanttCellListRenderer,getListCellRendererComponent,Component,Y,N,N,public);
Parameter(GanttCellListRenderer,getListCellRendererComponent,cellHasFocus,boolean,declaration);
Parameter(GanttCellListRenderer,getListCellRendererComponent,index,int,declaration);
Parameter(GanttCellListRenderer,getListCellRendererComponent,isSelected,boolean,declaration);
Parameter(GanttCellListRenderer,getListCellRendererComponent,list,JList,declaration);
Parameter(GanttCellListRenderer,getListCellRendererComponent,value,Object,declaration);
Relation(GanttCellListRenderer;GanttCellListRenderer;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttCellListRenderer;GanttCellListRenderer;getComponentOrientation,GanttLanguage,N);
Relation(GanttCellListRenderer;GanttCellListRenderer;getInstance,GanttLanguage,N);
Relation(GanttCellListRenderer;GanttCellListRenderer;setOpaque,JComponent,boolean);
Relation(GanttCellListRenderer;getListCellRendererComponent;setBackground,JComponent,Color);
Relation(GanttCellListRenderer;getListCellRendererComponent;setForeground,JComponent,Color);
Relation(GanttCellListRenderer;getListCellRendererComponent;setText,JLabel,String);
Relation(GanttCellListRenderer;getListCellRendererComponent;valueOf,String,Object);
end b114
start b115
Class(Factory,N,N,package);
Parameter(TaskManager,newInstance,containmentFacadeFactory,Factory,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,containmentFacadeFactory,Factory,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,factoryFactory,local);
Relation(GanttProject;GanttProject;newInstance,Access,Factory-TaskManagerConfig);
Relation(TaskManagerImpl;TaskManagerImpl;createFacede,Factory,N);
end b115
start b116
Class(MutatorImpl,N,N,private);
end b116
start b117
Attribute(RolesSettingsPanel,appli,GanttProject,N,private);
Attribute(RolesSettingsPanel,myRolesModel,RolesTableModel,N,package);
Attribute(RolesSettingsPanel,rolesTable,JTable,N,package);
Class(RolesSettingsPanel,N,N,public);
Generalisation(RolesSettingsPanel,GeneralOptionPanel);
Method(RolesSettingsPanel,RolesSettingsPanel,N,Y,N,N,public);
Method(RolesSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(RolesSettingsPanel,initialize,void,N,N,N,public);
Parameter(RolesSettingsPanel,RolesSettingsPanel,parent,GanttProject,declaration);
Parameter(RolesSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(RolesSettingsPanel,applyChanges,roleManagerRoleManager,local);
Relation(RolesSettingsPanel;RolesSettingsPanel;add,Container,Component);
Relation(RolesSettingsPanel;RolesSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(RolesSettingsPanel;RolesSettingsPanel;correctLabel,GanttProject,String);
Relation(RolesSettingsPanel;RolesSettingsPanel;getColumn,TableColumnModel,int);
Relation(RolesSettingsPanel;RolesSettingsPanel;getColumnModel,JTable,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;getInstance,GanttLanguage,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;getText,GanttLanguage,String);
Relation(RolesSettingsPanel;RolesSettingsPanel;setPreferredScrollableViewportSize,JTable,Dimension);
Relation(RolesSettingsPanel;RolesSettingsPanel;setPreferredWidth,TableColumn,int);
Relation(RolesSettingsPanel;RolesSettingsPanel;setRowHeight,JTable,int);
Relation(RolesSettingsPanel;applyChanges;applyChanges,RolesTableModel,N);
Relation(RolesSettingsPanel;applyChanges;getRoleManager,RolesTableModel,N);
Relation(RolesSettingsPanel;applyChanges;hasChanges,RolesTableModel,N);
Relation(RolesSettingsPanel;applyChanges;println,PrintStream,String);
Relation(RolesSettingsPanel;applyChanges;setAskForSave,GanttProject,boolean);
end b117
start b118
Class(TimeFrame,N,N,public);
Method(GregorianTimeUnitStack,createTimeFrame,TimeFrame,Y,N,N,public);
Method(TimeFrame,getBottomUnit,TimeUnit,N,N,N,package);
Method(TimeFrame,getFinishDate,Date,N,N,N,package);
Method(TimeFrame,getStartDate,Date,N,N,N,package);
Method(TimeFrame,getTopUnit,TimeUnit,N,N,N,package);
Method(TimeFrame,getUnitCount,int,Y,N,N,package);
Method(TimeFrame,getUnitStart,Date,Y,N,N,package);
Method(TimeFrame,getUnitText,String,Y,N,N,package);
Parameter(ChartHeaderImpl,createBottomUnitGrid,timeFrame,TimeFrame,declaration);
Parameter(ChartHeaderImpl,createFrames,nextFrameTimeFrame,local);
Parameter(ChartHeaderImpl,createTopUnitText,timeFrame,TimeFrame,declaration);
Parameter(ChartModelImpl,calculateTimeFrames,currentFrameTimeFrame,local);
Parameter(TimeFrame,getUnitCount,unitLine,TimeUnit,declaration);
Parameter(TimeFrame,getUnitStart,position,int,declaration);
Parameter(TimeFrame,getUnitStart,unitLine,TimeUnit,declaration);
Parameter(TimeFrame,getUnitText,position,int,declaration);
Parameter(TimeFrame,getUnitText,unitLine,TimeUnit,declaration);
Relation(ChartHeaderImpl;createFrames;createBottomUnitGrid,BottomUnitGridBuilder,int-TimeFrame);
Relation(ChartHeaderImpl;createFrames;createTopUnitText,TopUnitTextBuilder,int-TimeFrame);
Relation(ChartHeaderImpl;createFrames;getBottomUnit,TimeFrame,N);
Relation(ChartHeaderImpl;createFrames;getTopUnit,TimeFrame,N);
Relation(ChartHeaderImpl;createFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartHeaderImpl;createFrames;getUnitText,TimeFrame,TimeUnit-int);
Relation(ChartModelImpl;calculateTimeFrames;getFinishDate,TimeFrame,N);
Relation(ChartModelImpl;calculateTimeFrames;getUnitCount,TimeFrame,TimeUnit);
end b118
start b119
Attribute(WizardImpl,myBackAction,BackAction,N,private);
Attribute(WizardImpl,myCardLayout,CardLayout,N,private);
Attribute(WizardImpl,myCurrentPage,int,N,private);
Attribute(WizardImpl,myNextAction,NextAction,N,private);
Attribute(WizardImpl,myPages,ArrayList,N,private);
Attribute(WizardImpl,myPagesContainer,JPanel,N,private);
Class(WizardImpl,abstract,N,package);
Generalisation(NewProjectWizardWindow,WizardImpl);
Generalisation(WizardImpl,AbstractAction);
Generalisation(WizardImpl,JDialog);
Method(WizardImpl,BackAction,N,N,N,N,package);
Method(WizardImpl,NextAction,N,N,N,N,package);
Method(WizardImpl,OkAction,N,N,N,N,package);
Method(WizardImpl,WizardImpl,N,Y,N,N,public);
Method(WizardImpl,actionPerformed,void,Y,N,N,public);
Method(WizardImpl,addPage,void,Y,N,N,protected);
Method(WizardImpl,adjustButtonState,void,N,N,N,private);
Method(WizardImpl,backPage,void,N,N,N,public);
Method(WizardImpl,createBackButton,JButton,N,N,N,private);
Method(WizardImpl,createNextButton,JButton,N,N,N,private);
Method(WizardImpl,createOkButton,JButton,N,N,N,private);
Method(WizardImpl,getCurrentPage,WizardPage,N,N,N,private);
Method(WizardImpl,nextPage,void,N,N,N,public);
Method(WizardImpl,show,void,N,N,N,public);
Parameter(WizardImpl,WizardImpl,frame,JFrame,declaration);
Parameter(WizardImpl,WizardImpl,title,String,declaration);
Parameter(WizardImpl,actionPerformed,e,ActionEvent,declaration);
Parameter(WizardImpl,addPage,page,WizardPage,declaration);
Parameter(WizardImpl,createOkButton,resultJButton,local);
Parameter(WizardImpl,show,backButtonJButton,local);
Parameter(WizardImpl,show,buttonBoxBox,local);
Parameter(WizardImpl,show,buttonPanelJPanel,local);
Parameter(WizardImpl,show,nextButtonJButton,local);
Parameter(WizardImpl,show,nextPageWizardPage,local);
Parameter(WizardImpl,show,okButtonJButton,local);
Parameter(WizardImpl,show,pagePanelJPanel,local);
Parameter(WizardImpl,show,titlePanelTopPanel,local);
Relation(NewProjectWizard;createNewProject;show,WizardImpl,N);
Relation(NewProjectWizardWindow;addProjectNamePage;addPage,WizardImpl,WizardPage);
Relation(NewProjectWizardWindow;addRoleSetPage;addPage,WizardImpl,WizardPage);
Relation(WizardImpl;BackAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;BackAction;getText,GanttLanguage,String);
Relation(WizardImpl;NextAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;NextAction;getText,GanttLanguage,String);
Relation(WizardImpl;OkAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;OkAction;getText,GanttLanguage,String);
Relation(WizardImpl;actionPerformed;backPage,WizardImpl,N);
Relation(WizardImpl;actionPerformed;dispose,Window,N);
Relation(WizardImpl;actionPerformed;getCurrentPage,WizardImpl,N);
Relation(WizardImpl;actionPerformed;nextPage,WizardImpl,N);
Relation(WizardImpl;actionPerformed;setActive,WizardPage,boolean);
Relation(WizardImpl;actionPerformed;setVisible,Dialog,boolean);
Relation(WizardImpl;addPage;add,ArrayList,Object);
Relation(WizardImpl;adjustButtonState;setEnabled,AbstractAction,boolean);
Relation(WizardImpl;adjustButtonState;size,ArrayList,N);
Relation(WizardImpl;backPage;adjustButtonState,WizardImpl,N);
Relation(WizardImpl;backPage;getCurrentPage,WizardImpl,N);
Relation(WizardImpl;backPage;previous,CardLayout,Container);
Relation(WizardImpl;backPage;setActive,WizardPage,boolean);
Relation(WizardImpl;createOkButton;getRootPane,JDialog,N);
Relation(WizardImpl;createOkButton;setDefaultButton,JRootPane,JButton);
Relation(WizardImpl;getCurrentPage;get,ArrayList,int);
Relation(WizardImpl;nextPage;adjustButtonState,WizardImpl,N);
Relation(WizardImpl;nextPage;getCurrentPage,WizardImpl,N);
Relation(WizardImpl;nextPage;next,CardLayout,Container);
Relation(WizardImpl;nextPage;setActive,WizardPage,boolean);
Relation(WizardImpl;nextPage;size,ArrayList,N);
Relation(WizardImpl;show;add,Container,Component);
Relation(WizardImpl;show;add,Container,Component-Object);
Relation(WizardImpl;show;adjustButtonState,WizardImpl,N);
Relation(WizardImpl;show;center,DialogAligner,JDialog-Container);
Relation(WizardImpl;show;createBackButton,WizardImpl,N);
Relation(WizardImpl;show;createHorizontalBox,Box,N);
Relation(WizardImpl;show;createHorizontalGlue,Box,N);
Relation(WizardImpl;show;createNextButton,WizardImpl,N);
Relation(WizardImpl;show;createOkButton,WizardImpl,N);
Relation(WizardImpl;show;first,CardLayout,Container);
Relation(WizardImpl;show;get,ArrayList,int);
Relation(WizardImpl;show;getComponent,WizardPage,N);
Relation(WizardImpl;show;getContentPane,JDialog,N);
Relation(WizardImpl;show;getParent,Component,N);
Relation(WizardImpl;show;getTitle,WizardPage,N);
Relation(WizardImpl;show;pack,Window,N);
Relation(WizardImpl;show;setLayout,Container,LayoutManager);
Relation(WizardImpl;show;size,ArrayList,N);
end b119
start b120
Attribute(GanttLookAndFeels,infoByClass,Map,N,protected);
Attribute(GanttLookAndFeels,infoByName,Map,N,protected);
Attribute(GanttLookAndFeels,singleton,GanttLookAndFeels,static,protected);
Class(GanttLookAndFeels,N,N,public);
Method(GanttLookAndFeels,GanttLookAndFeels,N,N,N,N,protected);
Method(GanttLookAndFeels,addLookAndFeel,void,Y,N,N,protected);
Method(GanttLookAndFeels,getDefaultInfo,GanttLookAndFeelInfo,N,N,N,public);
Method(GanttLookAndFeels,getGanttLookAndFeels,GanttLookAndFeels,N,N,static,public);
Method(GanttLookAndFeels,getInfoByClass,GanttLookAndFeelInfo,Y,N,N,public);
Method(GanttLookAndFeels,getInfoByName,GanttLookAndFeelInfo,Y,N,N,public);
Method(GanttLookAndFeels,getInstalledLookAndFeels,GanttLookAndFeelInfo[],N,N,N,public);
Parameter(GanttLookAndFeels,GanttLookAndFeels,infoGanttLookAndFeelInfo,local);
Parameter(GanttLookAndFeels,GanttLookAndFeels,lookAndFeelsLookAndFeelInfo[],local);
Parameter(GanttLookAndFeels,addLookAndFeel,info,GanttLookAndFeelInfo,declaration);
Parameter(GanttLookAndFeels,getDefaultInfo,infoGanttLookAndFeelInfo,local);
Parameter(GanttLookAndFeels,getInfoByClass,className,String,declaration);
Parameter(GanttLookAndFeels,getInfoByName,name,String,declaration);
Parameter(GanttLookAndFeels,getInstalledLookAndFeels,lookAndFeelsGanttLookAndFeelInfo[],local);
Relation(GanttLookAndFeels;GanttLookAndFeels;addLookAndFeel,GanttLookAndFeels,GanttLookAndFeelInfo);
Relation(GanttLookAndFeels;GanttLookAndFeels;getInstalledLookAndFeels,UIManager,N);
Relation(GanttLookAndFeels;NinstallLookAndFeel,UIManager,String-String);
Relation(GanttLookAndFeels;addLookAndFeel;containsKey,Map,Object);
Relation(GanttLookAndFeels;addLookAndFeel;getClassName,LookAndFeelInfo,N);
Relation(GanttLookAndFeels;addLookAndFeel;getName,LookAndFeelInfo,N);
Relation(GanttLookAndFeels;addLookAndFeel;getProperty,System,String);
Relation(GanttLookAndFeels;addLookAndFeel;println,PrintStream,String);
Relation(GanttLookAndFeels;addLookAndFeel;put,Map,Object-Object);
Relation(GanttLookAndFeels;addLookAndFeel;startsWith,String,String);
Relation(GanttLookAndFeels;getDefaultInfo;getCrossPlatformLookAndFeelClassName,UIManager,N);
Relation(GanttLookAndFeels;getDefaultInfo;getInfoByClass,GanttLookAndFeels,String);
Relation(GanttLookAndFeels;getDefaultInfo;getSystemLookAndFeelClassName,UIManager,N);
Relation(GanttLookAndFeels;getInfoByClass;get,Map,Object);
Relation(GanttLookAndFeels;getInfoByName;get,Map,Object);
Relation(GanttLookAndFeels;getInstalledLookAndFeels;toArray,Collection,Object[]);
Relation(GanttLookAndFeels;getInstalledLookAndFeels;values,Map,N);
Relation(GanttOptions;load;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttOptions;load;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(GanttOptions;load;getInfoByClass,GanttLookAndFeels,String);
Relation(GanttOptions;load;getInfoByName,GanttLookAndFeels,String);
Relation(GanttProject;GanttProject;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttProject;GanttProject;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(GanttProject;changeLookAndFeel;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttProject;changeLookAndFeel;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getInstalledLookAndFeels,GanttLookAndFeels,N);
end b120
start b121
Attribute(LnFSettingsPanel,appli,GanttProject,N,private);
Attribute(LnFSettingsPanel,cbButtonType,JComboBox,N,private);
Attribute(LnFSettingsPanel,cbLnf,JComboBox,N,private);
Attribute(LnFSettingsPanel,cbShowStatus,JCheckBox,N,private);
Attribute(LnFSettingsPanel,cbSmallIcon,JCheckBox,N,private);
Class(LnFSettingsPanel,N,N,public);
Generalisation(LnFSettingsPanel,GeneralOptionPanel);
Method(LnFSettingsPanel,LnFSettingsPanel,N,Y,N,N,public);
Method(LnFSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(LnFSettingsPanel,getLookAndFeel,GanttLookAndFeelInfo,N,N,N,public);
Method(LnFSettingsPanel,getShowStatusBar,boolean,N,N,N,package);
Method(LnFSettingsPanel,initialize,void,N,N,N,public);
Method(LnFSettingsPanel,itemStateChanged,void,Y,N,N,public);
Parameter(LnFSettingsPanel,LnFSettingsPanel,iconTextPanel2JPanel,local);
Parameter(LnFSettingsPanel,LnFSettingsPanel,iconTextPanelJPanel,local);
Parameter(LnFSettingsPanel,LnFSettingsPanel,languagePanelJPanel,local);
Parameter(LnFSettingsPanel,LnFSettingsPanel,lookAndFeelsGanttLookAndFeelInfo[],local);
Parameter(LnFSettingsPanel,LnFSettingsPanel,parent,GanttProject,declaration);
Parameter(LnFSettingsPanel,LnFSettingsPanel,statusPanelJPanel,local);
Parameter(LnFSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(LnFSettingsPanel,itemStateChanged,e,ItemEvent,declaration);
Relation(LnFSettingsPanel;LnFSettingsPanel;add,Container,Component);
Relation(LnFSettingsPanel;LnFSettingsPanel;add,Container,Component-Object);
Relation(LnFSettingsPanel;LnFSettingsPanel;addItem,JComboBox,Object);
Relation(LnFSettingsPanel;LnFSettingsPanel;addItemListener,JComboBox,ItemListener);
Relation(LnFSettingsPanel;LnFSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(LnFSettingsPanel;LnFSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getInstalledLookAndFeels,GanttLookAndFeels,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getInstance,GanttLanguage,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getText,GanttLanguage,String);
Relation(LnFSettingsPanel;LnFSettingsPanel;setName,Component,String);
Relation(LnFSettingsPanel;applyChanges;applyButtonOptions,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(LnFSettingsPanel;applyChanges;changeLookAndFeel,GanttProject,GanttLookAndFeelInfo);
Relation(LnFSettingsPanel;applyChanges;equals,String,Object);
Relation(LnFSettingsPanel;applyChanges;getButtonShow,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getIconSize,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getLookAndFeel,LnFSettingsPanel,N);
Relation(LnFSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;getSelectedIndex,JComboBox,N);
Relation(LnFSettingsPanel;applyChanges;getShowStatusBar,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getShowStatusBar,LnFSettingsPanel,N);
Relation(LnFSettingsPanel;applyChanges;getStatusBar,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;isSelected,AbstractButton,N);
Relation(LnFSettingsPanel;applyChanges;setButtonShow,GanttOptions,int);
Relation(LnFSettingsPanel;applyChanges;setIconSize,GanttOptions,String);
Relation(LnFSettingsPanel;applyChanges;setShowStatusBar,GanttOptions,boolean);
Relation(LnFSettingsPanel;applyChanges;setVisible,JComponent,boolean);
Relation(LnFSettingsPanel;getLookAndFeel;getSelectedItem,JComboBox,N);
Relation(LnFSettingsPanel;getShowStatusBar;isSelected,AbstractButton,N);
Relation(LnFSettingsPanel;initialize;equals,String,Object);
Relation(LnFSettingsPanel;initialize;getButtonShow,GanttOptions,N);
Relation(LnFSettingsPanel;initialize;getIconSize,GanttOptions,N);
Relation(LnFSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(LnFSettingsPanel;initialize;getShowStatusBar,GanttOptions,N);
Relation(LnFSettingsPanel;initialize;setSelected,AbstractButton,boolean);
Relation(LnFSettingsPanel;initialize;setSelectedIndex,JComboBox,int);
Relation(LnFSettingsPanel;initialize;setSelectedItem,JComboBox,Object);
Relation(LnFSettingsPanel;itemStateChanged;getStateChange,ItemEvent,N);
end b121
start b122
Attribute(ResourceAssignmentCollectionImpl,ADD,int,static,package);
Attribute(ResourceAssignmentCollectionImpl,DELETE,int,static,package);
Attribute(ResourceAssignmentCollectionImpl,myAssignment,ResourceAssignment,N,private);
Attribute(ResourceAssignmentCollectionImpl,myAssignments,Map,N,private);
Attribute(ResourceAssignmentCollectionImpl,myLoad,float,N,private);
Attribute(ResourceAssignmentCollectionImpl,myOperation,int,N,private);
Attribute(ResourceAssignmentCollectionImpl,myOrder,int,N,private);
Attribute(ResourceAssignmentCollectionImpl,myQueue,Map,N,private);
Attribute(ResourceAssignmentCollectionImpl,myResource,ProjectResource,N,private);
Attribute(ResourceAssignmentCollectionImpl,myTask,TaskImpl,N,private);
Attribute(ResourceAssignmentCollectionImpl,ourOrder,int,static,private);
Attribute(TaskImpl,myAssignments,ResourceAssignmentCollectionImpl,N,private);
Class(ResourceAssignmentCollectionImpl,N,N,package);
Method(ResourceAssignmentCollectionImpl,MutationInfo,N,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,N,Y,N,N,private);
Method(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,N,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,ResourceAssignmentImpl,N,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,addAssignment,ResourceAssignment,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,addAssignment,void,Y,N,N,private);
Method(ResourceAssignmentCollectionImpl,auxAddAssignment,ResourceAssignment,Y,N,N,private);
Method(ResourceAssignmentCollectionImpl,commit,void,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,compareTo,int,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,copy,ResourceAssignmentCollectionImpl,N,N,N,package);
Method(ResourceAssignmentCollectionImpl,createMutator,ResourceAssignmentMutator,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,delete,void,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,deleteAssignment,void,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,equals,boolean,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,getAssignment,ResourceAssignment,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,getAssignments,ResourceAssignment[],N,N,N,public);
Method(ResourceAssignmentCollectionImpl,getLoad,float,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,getResource,ProjectResource,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,getTask,Task,N,N,N,private);
Method(ResourceAssignmentCollectionImpl,getTask,Task,N,N,N,public);
Method(ResourceAssignmentCollectionImpl,setLoad,void,Y,N,N,public);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,operation,int,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,assignmentsResourceAssignment[],local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,collection,ResourceAssignmentCollectionImpl,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,copyResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,nextResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,task,TaskImpl,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentImpl,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,commit,mutationsList,local);
Parameter(ResourceAssignmentCollectionImpl,commit,nextMutationInfo,local);
Parameter(ResourceAssignmentCollectionImpl,commit,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,compareTo,o,Object,declaration);
Parameter(ResourceAssignmentCollectionImpl,deleteAssignment,infoMutationInfo,local);
Parameter(ResourceAssignmentCollectionImpl,deleteAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,equals,o,Object,declaration);
Parameter(ResourceAssignmentCollectionImpl,equals,resultboolean,local);
Parameter(ResourceAssignmentCollectionImpl,getAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,setLoad,load,float,declaration);
Relation(ResourceAssignmentCollectionImpl;MutationInfo;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getAssignments,ResourceAssignmentCollectionImpl,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;addAssignment;auxAddAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;addAssignment;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;addAssignment;put,Map,Object-Object);
Relation(ResourceAssignmentCollectionImpl;auxAddAssignment;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;commit;auxAddAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;commit;get,List,int);
Relation(ResourceAssignmentCollectionImpl;commit;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;commit;remove,Map,Object);
Relation(ResourceAssignmentCollectionImpl;commit;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;commit;size,List,N);
Relation(ResourceAssignmentCollectionImpl;commit;sort,Collections,List);
Relation(ResourceAssignmentCollectionImpl;commit;values,Map,N);
Relation(ResourceAssignmentCollectionImpl;delete;deleteAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;delete;getResource,ResourceAssignmentImpl,N);
Relation(ResourceAssignmentCollectionImpl;deleteAssignment;get,Map,Object);
Relation(ResourceAssignmentCollectionImpl;deleteAssignment;put,Map,Object-Object);
Relation(ResourceAssignmentCollectionImpl;deleteAssignment;remove,Map,Object);
Relation(ResourceAssignmentCollectionImpl;equals;equals,Object,Object);
Relation(ResourceAssignmentCollectionImpl;equals;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;getAssignment;get,Map,Object);
Relation(ResourceAssignmentCollectionImpl;getAssignments;size,Map,N);
Relation(ResourceAssignmentCollectionImpl;getAssignments;toArray,Collection,Object[]);
Relation(ResourceAssignmentCollectionImpl;getAssignments;values,Map,N);
Relation(ResourceAssignmentCollectionImpl;getTask;getTask,ResourceAssignmentCollectionImpl,N);
Relation(TaskImpl;TaskImpl;copy,ResourceAssignmentCollectionImpl,N);
Relation(TaskImpl;getAssignments;getAssignments,ResourceAssignmentCollectionImpl,N);
end b122
start b123
Attribute(AdjustTaskBoundsAlgorithm,myModifiedTasks,Set,N,private);
Attribute(AlgorithmCollection,myAdjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,N,private);
Attribute(RecalculateTaskScheduleAlgorithm,myAdjuster,AdjustTaskBoundsAlgorithm,N,private);
Class(AdjustTaskBoundsAlgorithm,abstract,N,public);
Generalisation(AdjustTaskBoundsAlgorithm,AlgorithmBase);
Method(AdjustTaskBoundsAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(AdjustTaskBoundsAlgorithm,modifyTaskEnd,void,Y,N,N,private);
Method(AdjustTaskBoundsAlgorithm,modifyTaskStart,void,Y,N,N,private);
Method(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,void,Y,N,N,private);
Method(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,void,Y,N,N,private);
Method(AdjustTaskBoundsAlgorithm,run,void,Y,N,N,public);
Method(AlgorithmCollection,getAdjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,N,N,N,public);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskEnd,task,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskEnd,taskEnd,GanttCalendar,declaration);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,durationTaskLength,local);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,newStart,GanttCalendar,declaration);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,task,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,containmentFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,maxEndGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,minStartGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nestedTask[],local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextEndGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextNestedTask,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextStartGanttCalendar,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,supertask,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,containmentFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,nextSupertaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,supertasks,Set,declaration);
Parameter(AdjustTaskBoundsAlgorithm,run,containmentFacadeTaskContainmentHierarchyFacade,local);
Parameter(AdjustTaskBoundsAlgorithm,run,nextTaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,run,supertaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,run,task,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,run,taskSetHashSet,local);
Parameter(AdjustTaskBoundsAlgorithm,run,tasks,Task[],declaration);
Parameter(AlgorithmCollection,AlgorithmCollection,adjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,declaration);
Parameter(GanttProject,deleteTasks,algAdjustTaskBoundsAlgorithm,local);
Parameter(GanttProject,newTask,algAdjustTaskBoundsAlgorithm,local);
Parameter(GanttTree,cutSelectedNode,algAdjustTaskBoundsAlgorithm,local);
Parameter(RecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,adjuster,AdjustTaskBoundsAlgorithm,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg3AdjustTaskBoundsAlgorithm,local);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskEnd;add,Set,Object);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;add,Set,Object);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;getDuration,Task,N);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;compareTo,GanttCalendar,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getEnd,Task,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getStart,Task,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskEnd,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskStart,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;hasNext,Iterator,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;iterator,Set,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;next,Iterator,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;recalculateSupertaskSchedule,AdjustTaskBoundsAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(AdjustTaskBoundsAlgorithm;run;add,HashSet,Object);
Relation(AdjustTaskBoundsAlgorithm;run;addAll,Set,Collection);
Relation(AdjustTaskBoundsAlgorithm;run;asList,Arrays,Task[]);
Relation(AdjustTaskBoundsAlgorithm;run;clear,HashSet,N);
Relation(AdjustTaskBoundsAlgorithm;run;clear,Set,N);
Relation(AdjustTaskBoundsAlgorithm;run;createContainmentFacade,AdjustTaskBoundsAlgorithm,N);
Relation(AdjustTaskBoundsAlgorithm;run;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(AdjustTaskBoundsAlgorithm;run;hasNext,Iterator,N);
Relation(AdjustTaskBoundsAlgorithm;run;isEmpty,HashSet,N);
Relation(AdjustTaskBoundsAlgorithm;run;isEnabled,AlgorithmBase,N);
Relation(AdjustTaskBoundsAlgorithm;run;iterator,Set,N);
Relation(AdjustTaskBoundsAlgorithm;run;next,Iterator,N);
Relation(AdjustTaskBoundsAlgorithm;run;recalculateSupertaskScheduleBottomUp,AdjustTaskBoundsAlgorithm,Set-TaskContainmentHierarchyFacade);
Relation(AdjustTaskBoundsAlgorithm;run;run,AdjustTaskBoundsAlgorithm,Task[]);
Relation(GanttProject;deleteTasks;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttProject;newTask;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttTree;cutSelectedNode;run,AdjustTaskBoundsAlgorithm,Task);
Relation(RecalculateTaskScheduleAlgorithm;run;run,AdjustTaskBoundsAlgorithm,Task[]);
end b123
start b124
Attribute(AlgorithmCollection,myAdjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,N,private);
Attribute(AlgorithmCollection,myCompletionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,N,private);
Attribute(AlgorithmCollection,myFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,N,private);
Attribute(AlgorithmCollection,myRecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,N,private);
Attribute(TaskManagerImpl,myAlgorithmCollection,AlgorithmCollection,N,private);
Class(AlgorithmCollection,N,N,public);
Method(AlgorithmCollection,AlgorithmCollection,N,Y,N,N,public);
Method(AlgorithmCollection,getAdjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,N,N,N,public);
Method(AlgorithmCollection,getFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,N,N,N,public);
Method(AlgorithmCollection,getRecalculateTaskCompletionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,N,N,N,public);
Method(AlgorithmCollection,getRecalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,N,N,N,public);
Method(TaskManager,getAlgorithmCollection,AlgorithmCollection,N,N,N,package);
Method(TaskManagerImpl,getAlgorithmCollection,AlgorithmCollection,N,N,N,public);
Parameter(AlgorithmCollection,AlgorithmCollection,adjustTaskBoundsAlgorithm,AdjustTaskBoundsAlgorithm,declaration);
Parameter(AlgorithmCollection,AlgorithmCollection,completionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,declaration);
Parameter(AlgorithmCollection,AlgorithmCollection,myFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,declaration);
Parameter(AlgorithmCollection,AlgorithmCollection,recalculateTaskScheduleAlgorithm,RecalculateTaskScheduleAlgorithm,declaration);
Relation(GanttGraphicArea;GanttGraphicArea;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;deleteTasks;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;newTask;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;newTask;getRecalculateTaskCompletionPercentageAlgorithm,AlgorithmCollection,N);
Relation(GanttTree;cutSelectedNode;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttTree;forwardScheduling;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(GanttXMLOpen;load;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttXMLOpen;load;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getFindPossibleDependeesAlgorithm,AlgorithmCollection,N);
end b124
start b125
Attribute(ColorSettingsPanel,appli,GanttProject,N,private);
Attribute(ColorSettingsPanel,bResourceColor,JButton,N,package);
Attribute(ColorSettingsPanel,bResourceOverloadColor,JButton,N,package);
Attribute(ColorSettingsPanel,bTaskColor,JButton,N,package);
Attribute(ColorSettingsPanel,colorChooser,JColorChooser,static,protected);
Attribute(ColorSettingsPanel,vb1,Box,N,package);
Attribute(ColorSettingsPanel,vb2,Box,N,package);
Class(ColorSettingsPanel,N,N,public);
Generalisation(ColorSettingsPanel,GeneralOptionPanel);
Method(ColorSettingsPanel,ColorSettingsPanel,N,Y,N,N,public);
Method(ColorSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(ColorSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(ColorSettingsPanel,initialize,void,N,N,N,public);
Parameter(ColorSettingsPanel,ColorSettingsPanel,colorChooserTitleString,local);
Parameter(ColorSettingsPanel,ColorSettingsPanel,dialogJDialog,local);
Parameter(ColorSettingsPanel,ColorSettingsPanel,finalPanelJPanel,local);
Parameter(ColorSettingsPanel,ColorSettingsPanel,parent,GanttProject,declaration);
Parameter(ColorSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(ColorSettingsPanel,applyChanges,askForApply,boolean,declaration);
Relation(ColorSettingsPanel;ColorSettingsPanel;add,Container,Component);
Relation(ColorSettingsPanel;ColorSettingsPanel;add,Container,Component-Object);
Relation(ColorSettingsPanel;ColorSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(ColorSettingsPanel;ColorSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(ColorSettingsPanel;ColorSettingsPanel;correctLabel,GanttProject,String);
Relation(ColorSettingsPanel;ColorSettingsPanel;createDialog,JColorChooser,Component-String-boolean-JColorChooser-ActionListener-ActionListener);
Relation(ColorSettingsPanel;ColorSettingsPanel;getBackground,Component,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getColor,JColorChooser,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getInstance,GanttLanguage,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getText,GanttLanguage,String);
Relation(ColorSettingsPanel;ColorSettingsPanel;setBackground,JComponent,Color);
Relation(ColorSettingsPanel;ColorSettingsPanel;setColor,JColorChooser,Color);
Relation(ColorSettingsPanel;ColorSettingsPanel;show,Dialog,N);
Relation(ColorSettingsPanel;NcreateVerticalBox,Box,N);
Relation(ColorSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ColorSettingsPanel;applyChanges;getBackground,Component,N);
Relation(ColorSettingsPanel;applyChanges;getUIConfiguration,GanttProject,N);
Relation(ColorSettingsPanel;applyChanges;setResourceColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;applyChanges;setResourceOverloadColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;applyChanges;setTaskColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;initialize;getResourceColor,UIConfiguration,N);
Relation(ColorSettingsPanel;initialize;getResourceOverloadColor,UIConfiguration,N);
Relation(ColorSettingsPanel;initialize;getTaskColor,UIConfiguration,N);
Relation(ColorSettingsPanel;initialize;getUIConfiguration,GanttProject,N);
Relation(ColorSettingsPanel;initialize;setBackground,JComponent,Color);
end b125
start b126
Class(LibraryFieldTableModel,N,N,package);
Parameter(AboutLibraryPanel,AboutLibraryPanel,modellibLibraryFieldTableModel,local);
Relation(AboutLibraryPanel;AboutLibraryPanel;addField,LibraryFieldTableModel,LibraryInfo);
end b126
start b127
Class(GanttCSVFilter,N,N,public);
Generalisation(GanttCSVFilter,FileFilter);
Method(GanttCSVFilter,accept,boolean,Y,N,N,public);
Method(GanttCSVFilter,getDescription,String,N,N,N,public);
Method(GanttCSVFilter,getExtension,String,Y,N,static,public);
Parameter(GanttCSVFilter,accept,extensionString,local);
Parameter(GanttCSVFilter,accept,f,File,declaration);
Parameter(GanttCSVFilter,getExtension,extString,local);
Parameter(GanttCSVFilter,getExtension,f,File,declaration);
Parameter(GanttCSVFilter,getExtension,iint,local);
Parameter(GanttCSVFilter,getExtension,sString,local);
Relation(GanttCSVFilter;accept;equals,String,Object);
Relation(GanttCSVFilter;accept;getExtension,GanttCSVFilter,File);
Relation(GanttCSVFilter;accept;isDirectory,File,N);
Relation(GanttCSVFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttCSVFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttCSVFilter;getExtension;getName,File,N);
Relation(GanttCSVFilter;getExtension;lastIndexOf,String,int);
Relation(GanttCSVFilter;getExtension;length,String,N);
Relation(GanttCSVFilter;getExtension;substring,String,int);
Relation(GanttCSVFilter;getExtension;toLowerCase,String,N);
end b127
start b128
Attribute(DependencyTableModel,myMutator,TaskDependencyCollectionMutator,N,private);
Class(TaskDependencyCollectionMutator,N,N,public);
Method(TaskDependencyCollection,createMutator,TaskDependencyCollectionMutator,N,N,N,package);
Method(TaskDependencyCollectionImpl,createMutator,TaskDependencyCollectionMutator,N,N,N,public);
Method(TaskDependencyCollectionMutator,commit,void,N,N,N,package);
Relation(DependencyTableModel;commit;commit,TaskDependencyCollectionMutator,N);
end b128
start b129
Class(TaskDependencySliceAsDependee,N,N,public);
Generalisation(TaskDependencySliceAsDependee,TaskDependencySliceImpl);
Method(TaskDependencySliceAsDependee,TaskDependencySliceAsDependee,N,Y,N,N,public);
Method(TaskDependencySliceAsDependee,toArray,TaskDependency[],N,N,N,public);
Parameter(TaskDependencySliceAsDependee,TaskDependencySliceAsDependee,dependencyCollection,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceAsDependee,TaskDependencySliceAsDependee,task,Task,declaration);
Relation(TaskDependencySliceAsDependee;toArray;getDependenciesAsDependee,TaskDependencyCollection,Task);
Relation(TaskDependencySliceAsDependee;toArray;getDependencyCollection,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceAsDependee;toArray;getTask,TaskDependencySliceImpl,N);
end b129
start b130
Attribute(ShapeConstants,BACKSLASH,ShapePaint,static,public);
Attribute(ShapeConstants,CROSS,ShapePaint,static,public);
Attribute(ShapeConstants,DEFAULT,ShapePaint,static,public);
Attribute(ShapeConstants,DIAMOND,ShapePaint,static,public);
Attribute(ShapeConstants,DOT,ShapePaint,static,public);
Attribute(ShapeConstants,DOTS,ShapePaint,static,public);
Attribute(ShapeConstants,GRID,ShapePaint,static,public);
Attribute(ShapeConstants,HORZ,ShapePaint,static,public);
Attribute(ShapeConstants,NE_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,NW_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,PATTERN_LIST,ShapePaint[],static,public);
Attribute(ShapeConstants,ROUND,ShapePaint,static,public);
Attribute(ShapeConstants,SE_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,SLASH,ShapePaint,static,public);
Attribute(ShapeConstants,SW_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_BACKSLASH,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_GRID,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_HORZ,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_SLASH,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_VERT,ShapePaint,static,public);
Attribute(ShapeConstants,TRANSPARENT,ShapePaint,static,public);
Attribute(ShapeConstants,VERT,ShapePaint,static,public);
Class(ShapeConstants,N,N,public);
end b130
start b131
Attribute(GanttLookAndFeelInfo,toString,String,N,protected);
Attribute(GanttOptions,lookAndFeel,GanttLookAndFeelInfo,N,private);
Attribute(GanttProject,lookAndFeel,GanttLookAndFeelInfo,N,public);
Class(GanttLookAndFeelInfo,N,N,public);
Generalisation(GanttLookAndFeelInfo,LookAndFeelInfo);
Method(GanttLookAndFeelInfo,GanttLookAndFeelInfo,N,Y,N,N,public);
Method(GanttLookAndFeelInfo,toString,String,N,N,N,public);
Method(GanttLookAndFeels,getDefaultInfo,GanttLookAndFeelInfo,N,N,N,public);
Method(GanttLookAndFeels,getInfoByClass,GanttLookAndFeelInfo,Y,N,N,public);
Method(GanttLookAndFeels,getInfoByName,GanttLookAndFeelInfo,Y,N,N,public);
Method(GanttOptions,getLnfInfos,GanttLookAndFeelInfo,N,N,N,public);
Method(LnFSettingsPanel,getLookAndFeel,GanttLookAndFeelInfo,N,N,N,public);
Parameter(GanttLookAndFeelInfo,GanttLookAndFeelInfo,className,String,declaration);
Parameter(GanttLookAndFeelInfo,GanttLookAndFeelInfo,info,LookAndFeelInfo,declaration);
Parameter(GanttLookAndFeelInfo,GanttLookAndFeelInfo,name,String,declaration);
Parameter(GanttLookAndFeels,GanttLookAndFeels,infoGanttLookAndFeelInfo,local);
Parameter(GanttLookAndFeels,addLookAndFeel,info,GanttLookAndFeelInfo,declaration);
Parameter(GanttLookAndFeels,getDefaultInfo,infoGanttLookAndFeelInfo,local);
Parameter(GanttOptions,load,infoGanttLookAndFeelInfo,local);
Parameter(GanttOptions,setLookAndFeel,lookAndFeel,GanttLookAndFeelInfo,declaration);
Parameter(GanttProject,changeLookAndFeel,infoGanttLookAndFeelInfo,local);
Parameter(GanttProject,changeLookAndFeel,lookAndFeel,GanttLookAndFeelInfo,declaration);
Relation(GanttLookAndFeelInfo;GanttLookAndFeelInfo;getClassName,LookAndFeelInfo,N);
Relation(GanttLookAndFeelInfo;GanttLookAndFeelInfo;getName,LookAndFeelInfo,N);
Relation(GanttLookAndFeels;GanttLookAndFeels;addLookAndFeel,GanttLookAndFeels,GanttLookAndFeelInfo);
Relation(GanttProject;GanttProject;changeLookAndFeel,GanttProject,GanttLookAndFeelInfo);
Relation(GanttProject;GanttProject;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(GanttProject;quitApplication;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(LnFSettingsPanel;applyChanges;changeLookAndFeel,GanttProject,GanttLookAndFeelInfo);
end b131
start b132
Attribute(GregorianTimeUnitStack,myCalendar,GregorianCalendar,N,private);
Class(GregorianCalendar,N,N,public);
Generalisation(GanttCalendar,GregorianCalendar);
Generalisation(GregorianCalendar,GregorianCalendar);
Method(GregorianCalendar,GregorianCalendar,N,N,N,N,public);
Method(GregorianCalendar,GregorianCalendar,N,Y,N,N,public);
Method(GregorianCalendar,add,void,Y,N,N,public);
Parameter(GanttLanguage,getDay,dayGregorianCalendar,local);
Parameter(GanttLanguage,getMonth,monthGregorianCalendar,local);
Parameter(GanttPanelDate,GanttPanelDate,tmpGregorianCalendar,local);
Parameter(GanttPanelDate,changeDate,newDate,GregorianCalendar,declaration);
Parameter(GregorianCalendar,GregorianCalendar,aLocale,Locale,declaration);
Parameter(GregorianCalendar,GregorianCalendar,date,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,hour,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,minute,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,month,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,second,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,year,int,declaration);
Parameter(GregorianCalendar,GregorianCalendar,zone,TimeZone,declaration);
Parameter(GregorianCalendar,add,field,int,declaration);
Parameter(GregorianCalendar,add,value,int,declaration);
Relation(GanttCalendar;add;add,GregorianCalendar,int-int);
Relation(GanttCalendar;getNumberOfDay;getActualMaximum,GregorianCalendar,int);
Relation(GanttCalendar;go;add,GregorianCalendar,int-int);
Relation(GanttCalendar;goNextMonth;add,GregorianCalendar,int-int);
Relation(GanttCalendar;goPrevMonth;add,GregorianCalendar,int-int);
Relation(GanttCalendar;newAdd;add,GregorianCalendar,int-int);
Relation(GanttGraphicArea;getGranit;getActualMaximum,GregorianCalendar,int);
Relation(GanttLanguage;getDay;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;GanttPanelDate;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;cancel;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;clickFunction;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;paintComponent;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;paintComponent;getTimeZone,GregorianCalendar,N);
Relation(GanttPanelDate;rollDate;add,GregorianCalendar,int-int);
Relation(GregorianCalendar;add;add,GregorianCalendar,int-int);
end b132
start b133
Attribute(AboutAuthorPanel,language,GanttLanguage,N,private);
Attribute(AboutJavaInfosPanel,language,GanttLanguage,N,private);
Attribute(AboutLibraryPanel,language,GanttLanguage,N,private);
Attribute(CommonPanel,language,GanttLanguage,N,private);
Attribute(GanttCalendar,language,GanttLanguage,N,private);
Attribute(GanttDialogCalendar,language,GanttLanguage,N,private);
Attribute(GanttDialogDate,language,GanttLanguage,N,private);
Attribute(GanttDialogPerson,language,GanttLanguage,N,private);
Attribute(GanttDialogProperties,lang,GanttLanguage,N,private);
Attribute(GanttGraphicArea,language,GanttLanguage,N,private);
Attribute(GanttHTMLExport,language,GanttLanguage,static,private);
Attribute(GanttLanguage,currentDateFormat,DateFormat,N,package);
Attribute(GanttLanguage,currentLocale,Locale,N,package);
Attribute(GanttLanguage,currentTimeFormat,DateFormat,N,package);
Attribute(GanttLanguage,ganttLanguage,GanttLanguage,static,private);
Attribute(GanttLanguage,i18n,ResourceBundle,N,package);
Attribute(GanttLanguage,myListeners,ArrayList,N,private);
Attribute(GanttOptions,language,GanttLanguage,N,private);
Attribute(GanttPDFExport,language,GanttLanguage,static,private);
Attribute(GanttPanelDate,language,GanttLanguage,N,package);
Attribute(GanttPanelDate,language,GanttLanguage,N,private);
Attribute(GanttPreviewPrint,language,GanttLanguage,N,private);
Attribute(GanttProject,language,GanttLanguage,N,private);
Attribute(GanttResourcePanel,lang,GanttLanguage,N,package);
Attribute(GanttTaskPropertiesBean,language,GanttLanguage,N,private);
Attribute(GanttTree,language,GanttLanguage,N,package);
Attribute(GanttURLChooser,language,GanttLanguage,N,package);
Attribute(GanttXMLOpen,language,GanttLanguage,N,package);
Attribute(GeneralDialog,language,GanttLanguage,N,protected);
Attribute(GeneralOptionPanel,language,GanttLanguage,N,protected);
Attribute(ResourceLoadGraphicArea,language,GanttLanguage,N,private);
Attribute(TaskDependenciesPanel,language,GanttLanguage,N,protected);
Class(GanttLanguage,N,N,public);
Generalisation(GanttLanguage,EventObject);
Method(CommonPanel,getLanguage,GanttLanguage,N,N,N,protected);
Method(GanttLanguage,Event,N,Y,N,N,public);
Method(GanttLanguage,GanttLanguage,N,N,N,N,private);
Method(GanttLanguage,addListener,void,Y,N,N,public);
Method(GanttLanguage,fireLanguageChanged,void,N,N,N,private);
Method(GanttLanguage,formatDate,String,Y,N,N,public);
Method(GanttLanguage,formatTime,String,Y,N,N,public);
Method(GanttLanguage,getComponentOrientation,ComponentOrientation,N,N,N,public);
Method(GanttLanguage,getDay,String,Y,N,N,public);
Method(GanttLanguage,getInstance,GanttLanguage,N,N,static,public);
Method(GanttLanguage,getLanguage,GanttLanguage,N,N,N,public);
Method(GanttLanguage,getMonth,String,Y,N,N,public);
Method(GanttLanguage,getText,String,Y,N,N,public);
Method(GanttLanguage,languageChanged,void,Y,N,N,public);
Method(GanttLanguage,parseDate,GanttCalendar,Y,N,N,public);
Method(GanttLanguage,removeListener,void,Y,N,N,public);
Method(GanttLanguage,setLocale,void,Y,N,N,public);
Method(GanttOptions,getLanguage,GanttLanguage,N,N,N,public);
Method(GanttProject,getI18n,GanttLanguage,N,N,N,public);
Method(GanttProject,getLanguage,GanttLanguage,N,N,N,private);
Method(IGanttProject,getI18n,GanttLanguage,N,N,N,package);
Method(ResourceAction,getLanguage,GanttLanguage,N,N,N,protected);
Parameter(GanttDialogInfo,GanttDialogInfo,languageGanttLanguage,local);
Parameter(GanttDialogPerson,GanttDialogPerson,language,GanttLanguage,declaration);
Parameter(GanttLanguage,Event,language,GanttLanguage,declaration);
Parameter(GanttLanguage,addListener,listener,Listener,declaration);
Parameter(GanttLanguage,fireLanguageChanged,eventEvent,local);
Parameter(GanttLanguage,fireLanguageChanged,nextListener,local);
Parameter(GanttLanguage,formatDate,date,GanttCalendar,declaration);
Parameter(GanttLanguage,formatTime,date,GanttCalendar,declaration);
Parameter(GanttLanguage,getDay,d,int,declaration);
Parameter(GanttLanguage,getDay,dateFormatSimpleDateFormat,local);
Parameter(GanttLanguage,getDay,dayGregorianCalendar,local);
Parameter(GanttLanguage,getDay,resultStringBuffer,local);
Parameter(GanttLanguage,getMonth,dateFormatSimpleDateFormat,local);
Parameter(GanttLanguage,getMonth,m,int,declaration);
Parameter(GanttLanguage,getMonth,monthGregorianCalendar,local);
Parameter(GanttLanguage,getMonth,resultStringBuffer,local);
Parameter(GanttLanguage,getText,key,String,declaration);
Parameter(GanttLanguage,languageChanged,event,Event,declaration);
Parameter(GanttLanguage,parseDate,date,String,declaration);
Parameter(GanttLanguage,parseDate,tmpCalendar,local);
Parameter(GanttLanguage,removeListener,listener,Listener,declaration);
Parameter(GanttLanguage,setLocale,locale,Locale,declaration);
Parameter(GanttLanguage,setLocale,resourceBaseString,local);
Parameter(GanttPanelDate,GanttDialogDateDay,language,GanttLanguage,declaration);
Parameter(GanttProject,newTask,langGanttLanguage,local);
Parameter(GanttResourcePanel,GanttTableModel,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,changeLanguage,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,refresh,language,GanttLanguage,declaration);
Parameter(ImportResources,ImportResources,languageGanttLanguage,local);
Parameter(NewTaskAction,setText,language,GanttLanguage,declaration);
Parameter(ResourceLoadGraphicArea,setLanguage,language,GanttLanguage,declaration);
Parameter(RoleManagerImpl,-,languageGanttLanguage,local);
Parameter(TipsDialog,TipsDialog,langGanttLanguage,local);
Relation(AboutAuthorPanel;AboutAuthorPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutAuthorPanel;AboutAuthorPanel;getInstance,GanttLanguage,N);
Relation(AboutAuthorPanel;AboutAuthorPanel;getText,GanttLanguage,String);
Relation(AboutAuthorPanel;NgetInstance,GanttLanguage,N);
Relation(AboutAuthorPanel;NgetText,GanttLanguage,String);
Relation(AboutDialog;AboutDialog;getInstance,GanttLanguage,N);
Relation(AboutDialog;AboutDialog;getText,GanttLanguage,String);
Relation(AboutDialog;constructSections;getText,GanttLanguage,String);
Relation(AboutDialog;valueChanged;getText,GanttLanguage,String);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getInstance,GanttLanguage,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getText,GanttLanguage,String);
Relation(AboutJavaInfosPanel;NgetInstance,GanttLanguage,N);
Relation(AboutJavaInfosPanel;NgetText,GanttLanguage,String);
Relation(AboutLibraryPanel;AboutLibraryPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutLibraryPanel;AboutLibraryPanel;getInstance,GanttLanguage,N);
Relation(AboutLibraryPanel;AboutLibraryPanel;getText,GanttLanguage,String);
Relation(AboutLibraryPanel;NgetInstance,GanttLanguage,N);
Relation(AboutLibraryPanel;NgetText,GanttLanguage,String);
Relation(AboutLicensePanel;AboutLicensePanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutLicensePanel;AboutLicensePanel;getInstance,GanttLanguage,N);
Relation(AboutLicensePanel;AboutLicensePanel;getText,GanttLanguage,String);
Relation(AboutPanel;AboutPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutPanel;AboutPanel;getInstance,GanttLanguage,N);
Relation(AboutPanel;AboutPanel;getText,GanttLanguage,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getInstance,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getText,GanttLanguage,String);
Relation(ColorSettingsPanel;ColorSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getInstance,GanttLanguage,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;getText,GanttLanguage,String);
Relation(CommonPanel;CommonPanel;getInstance,GanttLanguage,N);
Relation(CommonPanel;setupCommonFields;getText,GanttLanguage,String);
Relation(ConnectionPanel;ConnectionPanel;getComponentOrientation,GanttLanguage,N);
Relation(ConnectionPanel;ConnectionPanel;getInstance,GanttLanguage,N);
Relation(ConnectionPanel;ConnectionPanel;getText,GanttLanguage,String);
Relation(DeleteHumanAction;DeleteHumanAction;getText,GanttLanguage,String);
Relation(DeleteHumanAction;actionPerformed;getText,GanttLanguage,String);
Relation(DependencyTableModel;NgetInstance,GanttLanguage,N);
Relation(DependencyTableModel;NgetText,GanttLanguage,String);
Relation(ExportSettingsPanel;ExportSettingsPanel;getInstance,GanttLanguage,N);
Relation(ExportSettingsPanel;ExportSettingsPanel;getText,GanttLanguage,String);
Relation(FinishFinishConstraintImpl;FinishFinishConstraintImpl;getInstance,GanttLanguage,N);
Relation(FinishFinishConstraintImpl;FinishFinishConstraintImpl;getText,GanttLanguage,String);
Relation(FinishStartConstraintImpl;FinishStartConstraintImpl;getInstance,GanttLanguage,N);
Relation(FinishStartConstraintImpl;FinishStartConstraintImpl;getText,GanttLanguage,String);
Relation(GanttCSVFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttCSVFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttCalendar;NgetInstance,GanttLanguage,N);
Relation(GanttCalendar;getDateAndTime;formatTime,GanttLanguage,GanttCalendar);
Relation(GanttCalendar;getDateAndTime;getInstance,GanttLanguage,N);
Relation(GanttCalendar;getDayMonthLanguage;getMonth,GanttLanguage,int);
Relation(GanttCalendar;getDayWeekLanguage;getDay,GanttLanguage,int);
Relation(GanttCalendar;getdayMonth;getMonth,GanttLanguage,int);
Relation(GanttCalendar;getdayWeek;getDay,GanttLanguage,int);
Relation(GanttCalendar;toString;formatDate,GanttLanguage,GanttCalendar);
Relation(GanttCellListRenderer;GanttCellListRenderer;getComponentOrientation,GanttLanguage,N);
Relation(GanttCellListRenderer;GanttCellListRenderer;getInstance,GanttLanguage,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getInstance,GanttLanguage,N);
Relation(GanttDialogCalendar;GanttDialogCalendar;getText,GanttLanguage,String);
Relation(GanttDialogCalendar;NgetInstance,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getInstance,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getText,GanttLanguage,String);
Relation(GanttDialogDate;NgetInstance,GanttLanguage,N);
Relation(GanttDialogInfo;GanttDialogInfo;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogInfo;GanttDialogInfo;getInstance,GanttLanguage,N);
Relation(GanttDialogInfo;GanttDialogInfo;getText,GanttLanguage,String);
Relation(GanttDialogPerson;GanttDialogPerson;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogPerson;GanttDialogPerson;getText,GanttLanguage,String);
Relation(GanttDialogPerson;NgetInstance,GanttLanguage,N);
Relation(GanttDialogPerson;initComponents;getText,GanttLanguage,String);
Relation(GanttDialogProperties;GanttDialogProperties;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogProperties;GanttDialogProperties;getInstance,GanttLanguage,N);
Relation(GanttDialogProperties;GanttDialogProperties;getText,GanttLanguage,String);
Relation(GanttDialogProperties;NgetInstance,GanttLanguage,N);
Relation(GanttDialogProperties;actionPerformed;getText,GanttLanguage,String);
Relation(GanttGraphicArea;NgetInstance,GanttLanguage,N);
Relation(GanttGraphicArea;paintCalendar1;getDay,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar1;getMonth,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar2Old;getDay,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar2Old;getText,GanttLanguage,String);
Relation(GanttGraphicArea;zoomToBegin;getDay,GanttLanguage,int);
Relation(GanttHTMLExport;NgetInstance,GanttLanguage,N);
Relation(GanttHTMLExport;save;getText,GanttLanguage,String);
Relation(GanttHTMLFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttHTMLFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttImagePanel;GanttImagePanel;getComponentOrientation,GanttLanguage,N);
Relation(GanttImagePanel;GanttImagePanel;getInstance,GanttLanguage,N);
Relation(GanttJPGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttJPGFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttLanguage;GanttLanguage;getDefault,Locale,N);
Relation(GanttLanguage;GanttLanguage;setLocale,GanttLanguage,Locale);
Relation(GanttLanguage;addListener;add,ArrayList,Object);
Relation(GanttLanguage;fireLanguageChanged;get,ArrayList,int);
Relation(GanttLanguage;fireLanguageChanged;languageChanged,Listener,Event);
Relation(GanttLanguage;fireLanguageChanged;size,ArrayList,N);
Relation(GanttLanguage;formatDate;format,DateFormat,Date);
Relation(GanttLanguage;formatDate;getTime,Calendar,N);
Relation(GanttLanguage;formatTime;format,DateFormat,Date);
Relation(GanttLanguage;formatTime;getTime,Calendar,N);
Relation(GanttLanguage;getComponentOrientation;getOrientation,ComponentOrientation,Locale);
Relation(GanttLanguage;getDay;add,GregorianCalendar,int-int);
Relation(GanttLanguage;getDay;format,SimpleDateFormat,Date-StringBuffer-FieldPosition);
Relation(GanttLanguage;getDay;get,Calendar,int);
Relation(GanttLanguage;getDay;getTime,Calendar,N);
Relation(GanttLanguage;getDay;toString,StringBuffer,N);
Relation(GanttLanguage;getLanguage;getSource,EventObject,N);
Relation(GanttLanguage;getMonth;format,SimpleDateFormat,Date-StringBuffer-FieldPosition);
Relation(GanttLanguage;getMonth;getTime,Calendar,N);
Relation(GanttLanguage;getMonth;toString,StringBuffer,N);
Relation(GanttLanguage;getText;getString,ResourceBundle,String);
Relation(GanttLanguage;parseDate;get,Calendar,int);
Relation(GanttLanguage;parseDate;getInstance,Calendar,Locale);
Relation(GanttLanguage;parseDate;parse,DateFormat,String);
Relation(GanttLanguage;parseDate;setTime,Calendar,Date);
Relation(GanttLanguage;removeListener;remove,ArrayList,Object);
Relation(GanttLanguage;setLocale;fireLanguageChanged,GanttLanguage,N);
Relation(GanttLanguage;setLocale;getBundle,ResourceBundle,String-Locale);
Relation(GanttLanguage;setLocale;getDateInstance,DateFormat,int-Locale);
Relation(GanttLanguage;setLocale;getProperty,System,String-String);
Relation(GanttLanguage;setLocale;getTimeInstance,DateFormat,int-Locale);
Relation(GanttOptions;NgetInstance,GanttLanguage,N);
Relation(GanttOptions;getTaskNamePrefix;getText,GanttLanguage,String);
Relation(GanttOptions;getTrueTaskNamePrefix;getText,GanttLanguage,String);
Relation(GanttOptions;save;getText,GanttLanguage,String);
Relation(GanttOptions;startElement;setLocale,GanttLanguage,Locale);
Relation(GanttPDFExport;NgetInstance,GanttLanguage,N);
Relation(GanttPDFExport;save;getText,GanttLanguage,String);
Relation(GanttPDFFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttPDFFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttPNGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttPNGFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttPanelDate;GanttPanelDate;getText,GanttLanguage,String);
Relation(GanttPanelDate;NgetInstance,GanttLanguage,N);
Relation(GanttPanelDate;clickFunction;getDay,GanttLanguage,int);
Relation(GanttPanelDate;paintComponent;getDay,GanttLanguage,int);
Relation(GanttPreviewPrint;GanttPreviewPrint;getComponentOrientation,GanttLanguage,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getInstance,GanttLanguage,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getText,GanttLanguage,String);
Relation(GanttProject;GanttProject;getComponentOrientation,GanttLanguage,N);
Relation(GanttProject;GanttProject;getInstance,GanttLanguage,N);
Relation(GanttProject;GanttProject;getText,GanttLanguage,String);
Relation(GanttProject;NgetInstance,GanttLanguage,N);
Relation(GanttProject;actionPerformed;getText,GanttLanguage,String);
Relation(GanttProject;addButtons;getText,GanttLanguage,String);
Relation(GanttProject;changeLanguage;getComponentOrientation,GanttLanguage,N);
Relation(GanttProject;changeLanguage;refresh,GanttResourcePanel,GanttLanguage);
Relation(GanttProject;changeLanguageOfMenu;getText,GanttLanguage,String);
Relation(GanttProject;checkCurrentProject;getText,GanttLanguage,String);
Relation(GanttProject;closeProject;getText,GanttLanguage,String);
Relation(GanttProject;deleteTasks;getText,GanttLanguage,String);
Relation(GanttProject;doExport;getText,GanttLanguage,String);
Relation(GanttProject;importcbk;getText,GanttLanguage,String);
Relation(GanttProject;launchOptionsDialog;getText,GanttLanguage,String);
Relation(GanttProject;linkRelationships;getText,GanttLanguage,String);
Relation(GanttProject;newProject;getText,GanttLanguage,String);
Relation(GanttProject;newTask;getInstance,GanttLanguage,N);
Relation(GanttProject;newTask;getText,GanttLanguage,String);
Relation(GanttProject;openDocument;getText,GanttLanguage,String);
Relation(GanttProject;openStartupDocument;getText,GanttLanguage,String);
Relation(GanttProject;openURL;getText,GanttLanguage,String);
Relation(GanttProject;openWebPage;getInstance,GanttLanguage,N);
Relation(GanttProject;openWebPage;getText,GanttLanguage,String);
Relation(GanttProject;openXMLStream;getText,GanttLanguage,String);
Relation(GanttProject;propertiesTask;getText,GanttLanguage,String);
Relation(GanttProject;refreshProjectInfos;getText,GanttLanguage,String);
Relation(GanttProject;resourceAdded;getInstance,GanttLanguage,N);
Relation(GanttProject;resourceAdded;getText,GanttLanguage,String);
Relation(GanttProject;saveAsProject;getText,GanttLanguage,String);
Relation(GanttProject;saveProject;getInstance,GanttLanguage,N);
Relation(GanttProject;saveProject;getText,GanttLanguage,String);
Relation(GanttProject;selectExportFile;getText,GanttLanguage,String);
Relation(GanttProject;setButtonText;getText,GanttLanguage,String);
Relation(GanttProject;unlinkRelationships;getText,GanttLanguage,String);
Relation(GanttResourcePanel;GanttResourcePanel;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;GanttResourcePanel;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;GanttTableModel;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;changeLanguage;getText,GanttLanguage,String);
Relation(GanttResourcePanel;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;createPopupMenu;getText,GanttLanguage,String);
Relation(GanttResourcePanel;deleteHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;propertiesHuman;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;propertiesHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;refresh;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttStatusBar;GanttStatusBar;getInstance,GanttLanguage,N);
Relation(GanttStatusBar;GanttStatusBar;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;NgetInstance,GanttLanguage,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;constructSouthPanel;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;init;getText,GanttLanguage,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;getText,GanttLanguage,String);
Relation(GanttTree;NgetInstance,GanttLanguage,N);
Relation(GanttTree;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(GanttTree;createPopupMenu;getText,GanttLanguage,String);
Relation(GanttTree;dedentCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;downCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;getToolTip;getText,GanttLanguage,String);
Relation(GanttTree;indentCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;insertClonedNode;getText,GanttLanguage,String);
Relation(GanttTree;upCurrentNodes;getText,GanttLanguage,String);
Relation(GanttURLChooser;GanttURLChooser;getComponentOrientation,GanttLanguage,N);
Relation(GanttURLChooser;GanttURLChooser;getInstance,GanttLanguage,N);
Relation(GanttURLChooser;GanttURLChooser;getText,GanttLanguage,String);
Relation(GanttURLChooser;NgetInstance,GanttLanguage,N);
Relation(GanttXFIGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttXFIGFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GanttXMLOpen;NgetInstance,GanttLanguage,N);
Relation(GanttXMLOpen;load;getText,GanttLanguage,String);
Relation(GanttXSLFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttXSLFileFilter;getDescription;getText,GanttLanguage,String);
Relation(GeneralDialog;GeneralDialog;getComponentOrientation,GanttLanguage,N);
Relation(GeneralDialog;GeneralDialog;getText,GanttLanguage,String);
Relation(GeneralDialog;NgetInstance,GanttLanguage,N);
Relation(GeneralOptionPanel;NgetInstance,GanttLanguage,N);
Relation(GeneralOptionPanel;askForApplyChanges;getText,GanttLanguage,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getInstance,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getText,GanttLanguage,String);
Relation(I18N;getNewProjectWizardWindowTitle;getInstance,GanttLanguage,N);
Relation(I18N;getNewProjectWizardWindowTitle;getText,GanttLanguage,String);
Relation(I18N;getProjectDomainPageTitle;getInstance,GanttLanguage,N);
Relation(I18N;getProjectDomainPageTitle;getText,GanttLanguage,String);
Relation(ImportResources;ImportResources;getInstance,GanttLanguage,N);
Relation(ImportResources;ImportResources;getText,GanttLanguage,String);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getInstance,GanttLanguage,N);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getText,GanttLanguage,String);
Relation(LanguageSettingsPanel;changeLanguage;setLocale,GanttLanguage,Locale);
Relation(LanguageSettingsPanel;initialize;getText,GanttLanguage,String);
Relation(LnFSettingsPanel;LnFSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getInstance,GanttLanguage,N);
Relation(LnFSettingsPanel;LnFSettingsPanel;getText,GanttLanguage,String);
Relation(NewHumanAction;NewHumanAction;getText,GanttLanguage,String);
Relation(NewHumanAction;languageChanged;getText,GanttLanguage,String);
Relation(NewTaskAction;NewTaskAction;addListener,GanttLanguage,Listener);
Relation(NewTaskAction;NewTaskAction;setText,NewTaskAction,GanttLanguage);
Relation(NewTaskAction;languageChanged;setText,NewTaskAction,GanttLanguage);
Relation(NewTaskAction;setText;getText,GanttLanguage,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getInstance,GanttLanguage,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getText,GanttLanguage,String);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getInstance,GanttLanguage,N);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;getText,GanttLanguage,String);
Relation(ParametersSettingsPanel;getTaskNamePrefix;getText,GanttLanguage,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getInstance,GanttLanguage,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getText,GanttLanguage,String);
Relation(ResourceAction;getLanguage;getInstance,GanttLanguage,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getInstance,GanttLanguage,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getDay,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;getMonth,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar2;getDay,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar2;getText,GanttLanguage,String);
Relation(ResourceLoadGraphicArea;zoomToBegin;getDay,GanttLanguage,int);
Relation(ResourcesTableModel;NgetInstance,GanttLanguage,N);
Relation(ResourcesTableModel;NgetText,GanttLanguage,String);
Relation(RoleManagerImpl;NgetInstance,GanttLanguage,N);
Relation(RoleManagerImpl;NgetText,GanttLanguage,String);
Relation(RoleSetPage;getComponent;getInstance,GanttLanguage,N);
Relation(RoleSetPage;getComponent;getText,GanttLanguage,String);
Relation(RolesSettingsPanel;RolesSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;getInstance,GanttLanguage,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;getText,GanttLanguage,String);
Relation(RolesTableModel;NgetInstance,GanttLanguage,N);
Relation(RolesTableModel;NgetText,GanttLanguage,String);
Relation(ServerDialog;ServerDialog;getInstance,GanttLanguage,N);
Relation(ServerDialog;ServerDialog;getText,GanttLanguage,String);
Relation(ServerDialog;constructSections;getText,GanttLanguage,String);
Relation(ServerDialog;valueChanged;getText,GanttLanguage,String);
Relation(SettingsDialog;SettingsDialog;getInstance,GanttLanguage,N);
Relation(SettingsDialog;SettingsDialog;getText,GanttLanguage,String);
Relation(SettingsDialog;constructSections;getText,GanttLanguage,String);
Relation(SettingsDialog;valueChanged;getText,GanttLanguage,String);
Relation(StartFinishConstraintImpl;StartFinishConstraintImpl;getInstance,GanttLanguage,N);
Relation(StartFinishConstraintImpl;StartFinishConstraintImpl;getText,GanttLanguage,String);
Relation(StartStartConstraintImpl;StartStartConstraintImpl;getInstance,GanttLanguage,N);
Relation(StartStartConstraintImpl;StartStartConstraintImpl;getText,GanttLanguage,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;getText,GanttLanguage,String);
Relation(TaskDependenciesPanel;NgetInstance,GanttLanguage,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getText,GanttLanguage,String);
Relation(TipsDialog;TipsDialog;getComponentOrientation,GanttLanguage,N);
Relation(TipsDialog;TipsDialog;getInstance,GanttLanguage,N);
Relation(TipsDialog;TipsDialog;getText,GanttLanguage,String);
Relation(TipsDialog;changeText;getInstance,GanttLanguage,N);
Relation(TipsDialog;changeText;getText,GanttLanguage,String);
Relation(TopPanel;TopPanel;getComponentOrientation,GanttLanguage,N);
Relation(TopPanel;TopPanel;getInstance,GanttLanguage,N);
Relation(TopPanel;myIconPanel;getComponentOrientation,GanttLanguage,N);
Relation(TopPanel;myIconPanel;getInstance,GanttLanguage,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getInstance,GanttLanguage,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;getText,GanttLanguage,String);
Relation(WizardImpl;BackAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;BackAction;getText,GanttLanguage,String);
Relation(WizardImpl;NextAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;NextAction;getText,GanttLanguage,String);
Relation(WizardImpl;OkAction;getInstance,GanttLanguage,N);
Relation(WizardImpl;OkAction;getText,GanttLanguage,String);
end b133
start b134
Attribute(TaskImpl,myDependencySlice,TaskDependencySlice,N,private);
Attribute(TaskImpl,myDependencySliceAsDependant,TaskDependencySlice,N,private);
Attribute(TaskImpl,myDependencySliceAsDependee,TaskDependencySlice,N,private);
Class(TaskDependencySlice,N,N,public);
Method(Task,getDependencies,TaskDependencySlice,N,N,N,package);
Method(Task,getDependenciesAsDependant,TaskDependencySlice,N,N,N,package);
Method(Task,getDependenciesAsDependee,TaskDependencySlice,N,N,N,package);
Method(TaskDependencySlice,clear,void,N,N,N,package);
Method(TaskDependencySlice,toArray,TaskDependency[],N,N,N,package);
Method(TaskImpl,getDependencies,TaskDependencySlice,N,N,N,public);
Method(TaskImpl,getDependenciesAsDependant,TaskDependencySlice,N,N,N,public);
Method(TaskImpl,getDependenciesAsDependee,TaskDependencySlice,N,N,N,public);
Relation(DependencyTableModel;DependencyTableModel;toArray,TaskDependencySlice,N);
Relation(GanttTask;getPredecessorsOld;toArray,TaskDependencySlice,N);
Relation(GanttTask;getSuccessorsOld;toArray,TaskDependencySlice,N);
Relation(GanttTask;unlink;clear,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;toArray,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;toArray,TaskDependencySlice,N);
Relation(RecalculateTaskScheduleAlgorithm;traverse;toArray,TaskDependencySlice,N);
end b134
start b135
Attribute(TaskHierarchyManagerImpl,myRootItem,TaskHierarchyItem,N,private);
Attribute(TaskManagerImpl,myHierarchyManager,TaskHierarchyManagerImpl,N,private);
Class(TaskHierarchyManagerImpl,N,N,public);
Method(TaskHierarchyManagerImpl,createItem,TaskHierarchyItem,Y,N,N,public);
Method(TaskHierarchyManagerImpl,getRootItem,TaskHierarchyItem,N,N,N,public);
Method(TaskManagerImpl,getHierarchyManager,TaskHierarchyManagerImpl,N,N,N,public);
Parameter(TaskHierarchyManagerImpl,createItem,resultTaskHierarchyItem,local);
Parameter(TaskHierarchyManagerImpl,createItem,task,Task,declaration);
Relation(TaskImpl;TaskImpl;createItem,TaskHierarchyManagerImpl,Task);
end b135
start b136
Attribute(GanttProject,myNewTaskAction,NewTaskAction,N,private);
Attribute(NewTaskAction,myProject,IGanttProject,N,private);
Class(NewTaskAction,N,N,public);
Generalisation(NewTaskAction,AbstractAction);
Method(NewTaskAction,NewTaskAction,N,Y,N,N,public);
Method(NewTaskAction,actionPerformed,void,Y,N,N,public);
Method(NewTaskAction,languageChanged,void,Y,N,N,public);
Method(NewTaskAction,setText,void,Y,N,N,private);
Parameter(NewTaskAction,NewTaskAction,iconUrlURL,local);
Parameter(NewTaskAction,NewTaskAction,project,IGanttProject,declaration);
Parameter(NewTaskAction,actionPerformed,e,ActionEvent,declaration);
Parameter(NewTaskAction,languageChanged,event,Event,declaration);
Parameter(NewTaskAction,setText,language,GanttLanguage,declaration);
Relation(NewTaskAction;NewTaskAction;addListener,GanttLanguage,Listener);
Relation(NewTaskAction;NewTaskAction;getClass,Object,N);
Relation(NewTaskAction;NewTaskAction;getClassLoader,Class<>,N);
Relation(NewTaskAction;NewTaskAction;getDefaultToolkit,Toolkit,N);
Relation(NewTaskAction;NewTaskAction;getI18n,IGanttProject,N);
Relation(NewTaskAction;NewTaskAction;getKeyStroke,KeyStroke,int-int);
Relation(NewTaskAction;NewTaskAction;getMenuShortcutKeyMask,Toolkit,N);
Relation(NewTaskAction;NewTaskAction;getResource,ClassLoader,String);
Relation(NewTaskAction;NewTaskAction;putValue,AbstractAction,String-Object);
Relation(NewTaskAction;NewTaskAction;setText,NewTaskAction,GanttLanguage);
Relation(NewTaskAction;actionPerformed;newTask,IGanttProject,N);
Relation(NewTaskAction;languageChanged;getLanguage,Event,N);
Relation(NewTaskAction;languageChanged;setText,NewTaskAction,GanttLanguage);
Relation(NewTaskAction;setText;correctLabel,GanttProject,String);
Relation(NewTaskAction;setText;getText,GanttLanguage,String);
Relation(NewTaskAction;setText;putValue,AbstractAction,String-Object);
end b136
start b137
Attribute(PDFExportData,myStylesheet,String,N,package);
Class(PDFExportData,N,N,public);
Generalisation(PDFExportData,ProjectExportData);
Method(PDFExportData,PDFExportData,N,Y,N,N,public);
Parameter(PDFExportData,PDFExportData,ganttTree,GanttTree,declaration);
Parameter(PDFExportData,PDFExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(PDFExportData,PDFExportData,myGanttChartExportProcessor,GanttChartExportProcessor,declaration);
Parameter(PDFExportData,PDFExportData,myOrganization,String,declaration);
Parameter(PDFExportData,PDFExportData,myOutputFile,File,declaration);
Parameter(PDFExportData,PDFExportData,myProjectDescription,String,declaration);
Parameter(PDFExportData,PDFExportData,myProjectName,String,declaration);
Parameter(PDFExportData,PDFExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,declaration);
Parameter(PDFExportData,PDFExportData,myResourceManager,HumanResourceManager,declaration);
Parameter(PDFExportData,PDFExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,declaration);
Parameter(PDFExportData,PDFExportData,stylesheet,String,declaration);
Parameter(PDFExportProcessor,createDriver,data,PDFExportData,declaration);
Parameter(PDFExportProcessor,run,data,PDFExportData,declaration);
Relation(PDFExportProcessor;run;createDriver,PDFExportProcessor,PDFExportData);
end b137
start b138
Attribute(ResourceChartExportData,myImageFormat,String,N,package);
Attribute(ResourceChartExportData,myOutputFile,File,N,package);
Class(ResourceChartExportData,N,N,public);
Method(ResourceChartExportData,ResourceChartExportData,N,Y,N,N,public);
Parameter(PDFExportProcessor,exportResourceChart,chartExportDataResourceChartExportData,local);
Parameter(ResourceChartExportData,ResourceChartExportData,myImageFormat,String,declaration);
Parameter(ResourceChartExportData,ResourceChartExportData,myOutputFile,File,declaration);
Parameter(ResourceChartExportProcessor,run,exportData,ResourceChartExportData,declaration);
Relation(PDFExportProcessor;exportResourceChart;run,ResourceChartExportProcessor,ResourceChartExportData);
end b138
start b139
Attribute(GanttProject,projectDocument,Document,N,public);
Attribute(OpenDocumentAction,document,Document,N,private);
Class(Document,N,N,public);
Method(Document,acquireLock,boolean,N,N,N,public);
Method(Document,canRead,boolean,N,N,N,public);
Method(Document,canWrite,boolean,N,N,N,public);
Method(Document,getDescription,String,N,N,N,public);
Method(Document,getFilePath,String,N,N,N,public);
Method(Document,getInputStream,InputStream,N,N,N,public);
Method(Document,getLastError,String,N,N,N,public);
Method(Document,getOutputStream,OutputStream,N,N,N,public);
Method(Document,getPassword,String,N,N,N,public);
Method(Document,getPath,String,N,N,N,public);
Method(Document,getURLPath,String,N,N,N,public);
Method(Document,getUsername,String,N,N,N,public);
Method(Document,isValidForMRU,boolean,N,N,N,public);
Method(Document,releaseLock,void,N,N,N,public);
Method(Document,setUserInfo,void,Y,N,N,public);
Method(DocumentCreator,createDocument,Document,Y,N,static,public);
Parameter(Document,setUserInfo,pass,String,declaration);
Parameter(Document,setUserInfo,user,String,declaration);
Parameter(DocumentsMRU,add,document,Document,declaration);
Parameter(DocumentsMRU,append,document,Document,declaration);
Parameter(GanttOptions,save,documentDocument,local);
Parameter(GanttProject,GanttProject,documentDocument,local);
Parameter(GanttProject,importcbk,documentDocument,local);
Parameter(GanttProject,openDocument,document,Document,declaration);
Parameter(GanttProject,openStartupDocument,document,Document,declaration);
Parameter(GanttProject,openStartupDocument,documentDocument,local);
Parameter(GanttProject,openURL,lastDocument,Document,declaration);
Parameter(GanttProject,openURL,openDocDocument,local);
Parameter(GanttProject,saveAsURLProject,document,Document,declaration);
Parameter(GanttProject,saveAsURLProject,saveDocumentDocument,local);
Parameter(GanttProject,saveProject,document,Document,declaration);
Parameter(GanttProject,updateMenuMRU,documentDocument,local);
Parameter(OpenDocumentAction,OpenDocumentAction,document,Document,declaration);
Parameter(TipsDialog,changeText,docDocument,local);
Relation(AbstractDocument;equals;getPath,Document,N);
Relation(AbstractURLDocument;getURLPath;getPath,Document,N);
Relation(DocumentsMRU;add;isValidForMRU,Document,N);
Relation(DocumentsMRU;append;isValidForMRU,Document,N);
Relation(GanttOptions;save;getPath,Document,N);
Relation(GanttOptions;startElement;append,DocumentsMRU,Document);
Relation(GanttProject;GanttProject;openDocument,GanttProject,Document);
Relation(GanttProject;actionPerformed;openStartupDocument,GanttProject,Document);
Relation(GanttProject;closeProject;releaseLock,Document,N);
Relation(GanttProject;importcbk;getDescription,Document,N);
Relation(GanttProject;importcbk;getInputStream,Document,N);
Relation(GanttProject;openDocument;acquireLock,Document,N);
Relation(GanttProject;openDocument;add,DocumentsMRU,Document);
Relation(GanttProject;openDocument;getDescription,Document,N);
Relation(GanttProject;openDocument;getInputStream,Document,N);
Relation(GanttProject;openDocument;getPath,Document,N);
Relation(GanttProject;openFile;openDocument,GanttProject,Document);
Relation(GanttProject;openStartupDocument;getDescription,Document,N);
Relation(GanttProject;openStartupDocument;openDocument,GanttProject,Document);
Relation(GanttProject;openStartupDocument;openStartupDocument,GanttProject,Document);
Relation(GanttProject;openStartupDocument;openURL,GanttProject,Document);
Relation(GanttProject;openURL;getPassword,Document,N);
Relation(GanttProject;openURL;getURLPath,Document,N);
Relation(GanttProject;openURL;getUsername,Document,N);
Relation(GanttProject;openURL;openDocument,GanttProject,Document);
Relation(GanttProject;openURL;openURL,GanttProject,Document);
Relation(GanttProject;openURL;setUserInfo,Document,String-String);
Relation(GanttProject;saveAsProject;saveProject,GanttProject,Document);
Relation(GanttProject;saveAsURLProject;getPassword,Document,N);
Relation(GanttProject;saveAsURLProject;getURLPath,Document,N);
Relation(GanttProject;saveAsURLProject;getUsername,Document,N);
Relation(GanttProject;saveAsURLProject;saveAsURLProject,GanttProject,Document);
Relation(GanttProject;saveAsURLProject;saveProject,GanttProject,Document);
Relation(GanttProject;saveProject;acquireLock,Document,N);
Relation(GanttProject;saveProject;add,DocumentsMRU,Document);
Relation(GanttProject;saveProject;canWrite,Document,N);
Relation(GanttProject;saveProject;getDescription,Document,N);
Relation(GanttProject;saveProject;getFilePath,Document,N);
Relation(GanttProject;saveProject;getOutputStream,Document,N);
Relation(GanttProject;saveProject;getPath,Document,N);
Relation(GanttProject;saveProject;releaseLock,Document,N);
Relation(GanttProject;saveProject;saveAsURLProject,GanttProject,Document);
Relation(GanttProject;saveProject;saveProject,GanttProject,Document);
Relation(OpenDocumentAction;OpenDocumentAction;getDescription,Document,N);
Relation(TipsDialog;changeText;getLength,Document,N);
Relation(TipsDialog;changeText;insertString,Document,int-String-AttributeSet);
Relation(TipsDialog;changeText;setDocument,JTextPane,Document);
end b139
start b140
Attribute(SearchKey,DEPENDANT,int,static,package);
Attribute(SearchKey,DEPENDEE,int,static,package);
Attribute(SearchKey,myFirstTaskID,int,N,package);
Attribute(SearchKey,mySecondTaskID,int,N,package);
Attribute(SearchKey,myType,int,N,package);
Class(SearchKey,N,N,public);
Generalisation(RangeSearchFromKey,SearchKey);
Generalisation(RangeSearchToKey,SearchKey);
Method(SearchKey,SearchKey,N,Y,N,N,protected);
Method(SearchKey,SearchKey,N,Y,N,N,public);
Method(SearchKey,compareTo,int,Y,N,N,public);
Method(SearchKey,equals,boolean,Y,N,N,public);
Method(SearchKey,hashCode,int,N,N,N,public);
Parameter(SearchKey,SearchKey,firstTaskID,int,declaration);
Parameter(SearchKey,SearchKey,firstTaskTask,local);
Parameter(SearchKey,SearchKey,secondTaskID,int,declaration);
Parameter(SearchKey,SearchKey,secondTaskTask,local);
Parameter(SearchKey,SearchKey,taskDependency,TaskDependencyImpl,declaration);
Parameter(SearchKey,SearchKey,type,int,declaration);
Parameter(SearchKey,compareTo,o,Object,declaration);
Parameter(SearchKey,compareTo,resultint,local);
Parameter(SearchKey,compareTo,rvalueSearchKey,local);
Parameter(SearchKey,equals,obj,Object,declaration);
Parameter(SearchKey,equals,rvalueSearchKey,local);
Parameter(TaskDependencyCollectionImpl,delete,key1SearchKey,local);
Parameter(TaskDependencyCollectionImpl,delete,key2SearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependencies,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependencies,toKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,toKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,toKeySearchKey,local);
Relation(SearchKey;SearchKey;getDependant,TaskDependencyImpl,N);
Relation(SearchKey;SearchKey;getDependee,TaskDependencyImpl,N);
Relation(SearchKey;SearchKey;getTaskID,Task,N);
end b140
start b141
Attribute(TaskDependencyImpl,myCollection,TaskDependencyCollectionImpl,N,private);
Attribute(TaskDependencyImpl,myConstraint,TaskDependencyConstraint,N,private);
Attribute(TaskDependencyImpl,myDependant,Task,N,private);
Attribute(TaskDependencyImpl,myDependee,Task,N,private);
Class(TaskDependencyImpl,N,N,public);
Method(TaskDependencyImpl,TaskDependencyImpl,N,Y,N,N,public);
Method(TaskDependencyImpl,delete,void,N,N,N,public);
Method(TaskDependencyImpl,equals,boolean,Y,N,N,public);
Method(TaskDependencyImpl,getConstraint,TaskDependencyConstraint,N,N,N,public);
Method(TaskDependencyImpl,getDependant,Task,N,N,N,public);
Method(TaskDependencyImpl,getDependee,Task,N,N,N,public);
Method(TaskDependencyImpl,hashCode,int,N,N,N,public);
Method(TaskDependencyImpl,setConstraint,void,Y,N,N,public);
Parameter(SearchKey,SearchKey,taskDependency,TaskDependencyImpl,declaration);
Parameter(TaskDependencyImpl,TaskDependencyImpl,collection,TaskDependencyCollectionImpl,declaration);
Parameter(TaskDependencyImpl,TaskDependencyImpl,dependant,Task,declaration);
Parameter(TaskDependencyImpl,TaskDependencyImpl,dependee,Task,declaration);
Parameter(TaskDependencyImpl,equals,obj,Object,declaration);
Parameter(TaskDependencyImpl,equals,resultboolean,local);
Parameter(TaskDependencyImpl,equals,rvalueTaskDependency,local);
Parameter(TaskDependencyImpl,setConstraint,constraint,TaskDependencyConstraint,declaration);
Relation(SearchKey;SearchKey;getDependant,TaskDependencyImpl,N);
Relation(SearchKey;SearchKey;getDependee,TaskDependencyImpl,N);
Relation(TaskDependencyImpl;delete;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyImpl;equals;equals,Object,Object);
Relation(TaskDependencyImpl;equals;getDependant,TaskDependency,N);
Relation(TaskDependencyImpl;equals;getDependee,TaskDependency,N);
Relation(TaskDependencyImpl;hashCode;hashCode,Object,N);
Relation(TaskDependencyImpl;setConstraint;setTaskDependency,TaskDependencyConstraint,TaskDependency);
end b141
start b142
Attribute(JDKFontLocator,myFontMetricsStorage,FontMetricsStorage,N,private);
Class(FontMetricsStorage,N,N,public);
Method(FontMetricsStorage,getFontMetricsURI,URI,Y,N,N,public);
Parameter(FontMetricsStorage,getFontMetricsURI,fontNameString,local);
Parameter(FontMetricsStorage,getFontMetricsURI,resourceNameString,local);
Parameter(FontMetricsStorage,getFontMetricsURI,resourceUrlURL,local);
Parameter(FontMetricsStorage,getFontMetricsURI,resultURI,local);
Parameter(FontMetricsStorage,getFontMetricsURI,ttfFile,TTFFileExt,declaration);
Parameter(FontRecord,FontRecord,metricsStorage,FontMetricsStorage,declaration);
Relation(FontMetricsStorage;getFontMetricsURI;getClass,Object,N);
Relation(FontMetricsStorage;getFontMetricsURI;getClassLoader,Class<>,N);
Relation(FontMetricsStorage;getFontMetricsURI;getFile,TTFFileExt,N);
Relation(FontMetricsStorage;getFontMetricsURI;getName,File,N);
Relation(FontMetricsStorage;getFontMetricsURI;getResource,ClassLoader,String);
Relation(FontMetricsStorage;getFontMetricsURI;printStackTrace,Throwable,N);
Relation(FontMetricsStorage;getFontMetricsURI;toString,URL,N);
Relation(FontRecord;FontRecord;getFontMetricsURI,FontMetricsStorage,TTFFileExt);
end b142
start b143
Attribute(GanttImagePanel,image,ImageIcon,N,package);
Attribute(GanttImagePanel,image2,ImageIcon,N,package);
Attribute(GanttImagePanel,x,int,N,package);
Attribute(GanttImagePanel,y,int,N,package);
Class(GanttImagePanel,N,N,public);
Generalisation(GanttImagePanel,JPanel);
Method(GanttImagePanel,GanttImagePanel,N,Y,N,N,public);
Method(GanttImagePanel,getPreferredSize,Dimension,N,N,N,public);
Method(GanttImagePanel,paintComponent,void,Y,N,N,public);
Parameter(GanttImagePanel,GanttImagePanel,imagename,String,declaration);
Parameter(GanttImagePanel,GanttImagePanel,sideImage,String,declaration);
Parameter(GanttImagePanel,GanttImagePanel,x,int,declaration);
Parameter(GanttImagePanel,GanttImagePanel,y,int,declaration);
Parameter(GanttImagePanel,paintComponent,g,Graphics,declaration);
Parameter(GanttProject,GanttProject,butGanttImagePanel,local);
Parameter(GanttResourcePanel,GanttResourcePanel,butGanttImagePanel,local);
Relation(GanttImagePanel;GanttImagePanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttImagePanel;GanttImagePanel;getClass,Object,N);
Relation(GanttImagePanel;GanttImagePanel;getComponentOrientation,GanttLanguage,N);
Relation(GanttImagePanel;GanttImagePanel;getInstance,GanttLanguage,N);
Relation(GanttImagePanel;GanttImagePanel;getResource,Class<>,String);
Relation(GanttImagePanel;paintComponent;getIconWidth,ImageIcon,N);
Relation(GanttImagePanel;paintComponent;getWidth,JComponent,N);
Relation(GanttImagePanel;paintComponent;paintIcon,ImageIcon,Component-Graphics-int-int);
end b143
start b144
Attribute(GanttPreviewPrint,panel,PreviewPanel,N,package);
Attribute(PreviewPanel,pattern,ShapePaint,N,protected);
Attribute(Shape,preview,PreviewPanel,N,protected);
Class(PreviewPanel,N,N,package);
Class(PreviewPanel,N,N,public);
Generalisation(PreviewPanel,JPanel);
Method(PreviewPanel,PreviewPanel,N,N,N,N,public);
Method(PreviewPanel,getPattern,ShapePaint,N,N,N,public);
Method(PreviewPanel,paintComponent,void,Y,N,N,public);
Method(PreviewPanel,setPattern,void,Y,N,N,public);
Parameter(PreviewPanel,paintComponent,gGraphics2D,local);
Parameter(PreviewPanel,paintComponent,gc,Graphics,declaration);
Parameter(PreviewPanel,paintComponent,hint,local);
Parameter(PreviewPanel,paintComponent,insetsInsets,local);
Parameter(PreviewPanel,paintComponent,rectRectangle,local);
Parameter(PreviewPanel,paintComponent,wint,local);
Parameter(PreviewPanel,setPattern,pattern,ShapePaint,declaration);
Relation(GanttPreviewPrint;PreviewPanel;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;PreviewPanel;scale,PreviewPanel,double);
Relation(GanttPreviewPrint;actionPerformed;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;changeState;paint,PreviewPanel,Graphics);
Relation(GanttPreviewPrint;stateChanged;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;stateChanged;scale,PreviewPanel,double);
Relation(PreviewPanel;PreviewPanel;createCompoundBorder,BorderFactory,Border-Border);
Relation(PreviewPanel;PreviewPanel;createEmptyBorder,BorderFactory,int-int-int-int);
Relation(PreviewPanel;PreviewPanel;createTitledBorder,BorderFactory,String);
Relation(PreviewPanel;PreviewPanel;setBorder,JComponent,Border);
Relation(PreviewPanel;PreviewPanel;setOpaque,JComponent,boolean);
Relation(PreviewPanel;PreviewPanel;setPreferredSize,JComponent,Dimension);
Relation(PreviewPanel;getPattern;getBackground,Component,N);
Relation(PreviewPanel;getPattern;getForeground,Component,N);
Relation(PreviewPanel;paintComponent;fill,Graphics2D,Shape);
Relation(PreviewPanel;paintComponent;fillRect,Graphics,int-int-int-int);
Relation(PreviewPanel;paintComponent;getBackground,Component,N);
Relation(PreviewPanel;paintComponent;getForeground,Component,N);
Relation(PreviewPanel;paintComponent;getInsets,JComponent,N);
Relation(PreviewPanel;paintComponent;getParent,Component,N);
Relation(PreviewPanel;paintComponent;getSize,Component,N);
Relation(PreviewPanel;paintComponent;setColor,Graphics,Color);
Relation(PreviewPanel;paintComponent;setPaint,Graphics2D,Paint);
Relation(Shape;Shape;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;actionPerformed;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;getPattern;getPattern,PreviewPanel,N);
Relation(Shape;setPattern;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;valueChanged;setPattern,PreviewPanel,ShapePaint);
end b144
start b145
Attribute(GanttOptions,ICONS,int,static,public);
Attribute(GanttOptions,ICONS_TEXT,int,static,public);
Attribute(GanttOptions,TEXT,int,static,public);
Attribute(GanttOptions,automatic,boolean,N,private);
Attribute(GanttOptions,bExport3DBorders,boolean,N,private);
Attribute(GanttOptions,bExportComplete,boolean,N,private);
Attribute(GanttOptions,bExportName,boolean,N,private);
Attribute(GanttOptions,bExportRelations,boolean,N,private);
Attribute(GanttOptions,bShowStatusBar,boolean,N,private);
Attribute(GanttOptions,buttonsshow,int,N,private);
Attribute(GanttOptions,csvOptions,CSVOptions,N,private);
Attribute(GanttOptions,documentsMRU,DocumentsMRU,N,private);
Attribute(GanttOptions,dragTime,boolean,N,private);
Attribute(GanttOptions,height,int,N,private);
Attribute(GanttOptions,iconSize,String,N,private);
Attribute(GanttOptions,isloaded,boolean,N,private);
Attribute(GanttOptions,language,GanttLanguage,N,private);
Attribute(GanttOptions,lockDAVMinutes,int,N,private);
Attribute(GanttOptions,lookAndFeel,GanttLookAndFeelInfo,N,private);
Attribute(GanttOptions,myChartMainFont,Font,N,private);
Attribute(GanttOptions,myMenuFont,Font,N,private);
Attribute(GanttOptions,myRoleManager,RoleManager,N,private);
Attribute(GanttOptions,myUIConfig,UIConfiguration,N,private);
Attribute(GanttOptions,openTips,boolean,N,private);
Attribute(GanttOptions,redline,boolean,N,private);
Attribute(GanttOptions,sTaskNamePrefix,String,N,private);
Attribute(GanttOptions,styleClass,String,N,private);
Attribute(GanttOptions,styleName,String,N,private);
Attribute(GanttOptions,toolBarPosition,int,N,private);
Attribute(GanttOptions,width,int,N,private);
Attribute(GanttOptions,workingDir,String,N,private);
Attribute(GanttOptions,x,int,N,private);
Attribute(GanttOptions,xslDir,String,N,private);
Attribute(GanttOptions,xslFo,String,N,private);
Attribute(GanttOptions,y,int,N,private);
Attribute(GanttProject,options,GanttOptions,N,private);
Class(GanttOptions,N,N,public);
Generalisation(GanttOptions,DefaultHandler);
Method(GanttOptions,GanttOptions,N,Y,N,N,public);
Method(GanttOptions,addAttribute,void,Y,N,N,private);
Method(GanttOptions,correct,String,Y,N,N,public);
Method(GanttOptions,emptyElement,void,Y,N,N,private);
Method(GanttOptions,endElement,void,Y,N,N,private);
Method(GanttOptions,getAutomatic,boolean,N,N,N,public);
Method(GanttOptions,getButtonShow,int,N,N,N,public);
Method(GanttOptions,getCSVOptions,CSVOptions,N,N,N,public);
Method(GanttOptions,getDefaultColor,Color,N,N,N,public);
Method(GanttOptions,getDragTime,boolean,N,N,N,public);
Method(GanttOptions,getExport3dBorders,boolean,N,N,N,public);
Method(GanttOptions,getExportComplete,boolean,N,N,N,public);
Method(GanttOptions,getExportName,boolean,N,N,N,public);
Method(GanttOptions,getExportRelations,boolean,N,N,N,public);
Method(GanttOptions,getExportSettings,GanttExportSettings,N,N,N,public);
Method(GanttOptions,getFontSpec,String,Y,N,N,private);
Method(GanttOptions,getFontStyle,String,Y,N,N,private);
Method(GanttOptions,getHeight,int,N,N,N,public);
Method(GanttOptions,getIconSize,String,N,N,N,public);
Method(GanttOptions,getLanguage,GanttLanguage,N,N,N,public);
Method(GanttOptions,getLnfInfos,GanttLookAndFeelInfo,N,N,N,public);
Method(GanttOptions,getLockDAVMinutes,int,N,N,N,public);
Method(GanttOptions,getOpenTips,boolean,N,N,N,public);
Method(GanttOptions,getResourceColor,Color,N,N,N,public);
Method(GanttOptions,getResourceOverloadColor,Color,N,N,N,public);
Method(GanttOptions,getRoleManager,RoleManager,N,N,N,private);
Method(GanttOptions,getShowStatusBar,boolean,N,N,N,public);
Method(GanttOptions,getTaskNamePrefix,String,N,N,N,public);
Method(GanttOptions,getToolBarPosition,int,N,N,N,public);
Method(GanttOptions,getTrueTaskNamePrefix,String,N,N,N,public);
Method(GanttOptions,getUIConfiguration,UIConfiguration,N,N,N,public);
Method(GanttOptions,getWidth,int,N,N,N,public);
Method(GanttOptions,getWorkingDir,String,N,N,N,public);
Method(GanttOptions,getX,int,N,N,N,public);
Method(GanttOptions,getXslDir,String,N,N,N,public);
Method(GanttOptions,getXslFo,String,N,N,N,public);
Method(GanttOptions,getY,int,N,N,N,public);
Method(GanttOptions,initByDefault,void,N,N,N,public);
Method(GanttOptions,isLoaded,boolean,N,N,N,public);
Method(GanttOptions,load,boolean,N,N,N,public);
Method(GanttOptions,loadRoleSets,void,Y,N,N,private);
Method(GanttOptions,save,void,N,N,N,public);
Method(GanttOptions,saveRoleSets,void,Y,N,N,private);
Method(GanttOptions,saveRoles,void,Y,N,N,private);
Method(GanttOptions,setAutomatic,void,Y,N,N,public);
Method(GanttOptions,setButtonShow,void,Y,N,N,public);
Method(GanttOptions,setDefaultTaskColor,void,Y,N,N,public);
Method(GanttOptions,setDocumentsMRU,void,Y,N,N,public);
Method(GanttOptions,setDragTime,void,Y,N,N,public);
Method(GanttOptions,setExport3dBorders,void,Y,N,N,public);
Method(GanttOptions,setExportComplete,void,Y,N,N,public);
Method(GanttOptions,setExportName,void,Y,N,N,public);
Method(GanttOptions,setExportRelations,void,Y,N,N,public);
Method(GanttOptions,setIconSize,void,Y,N,N,public);
Method(GanttOptions,setLockDAVMinutes,void,Y,N,N,public);
Method(GanttOptions,setLookAndFeel,void,Y,N,N,public);
Method(GanttOptions,setOpenTips,void,Y,N,N,public);
Method(GanttOptions,setResourceColor,void,Y,N,N,public);
Method(GanttOptions,setResourceOverloadColor,void,Y,N,N,public);
Method(GanttOptions,setShowStatusBar,void,Y,N,N,public);
Method(GanttOptions,setTaskNamePrefix,void,Y,N,N,public);
Method(GanttOptions,setToolBarPosition,void,Y,N,N,public);
Method(GanttOptions,setUIConfiguration,void,Y,N,N,public);
Method(GanttOptions,setWindowPosition,void,Y,N,N,public);
Method(GanttOptions,setWindowSize,void,Y,N,N,public);
Method(GanttOptions,setWorkingDirectory,void,Y,N,N,public);
Method(GanttOptions,setXslDir,void,Y,N,N,public);
Method(GanttOptions,setXslFo,void,Y,N,N,public);
Method(GanttOptions,startElement,void,Y,N,N,private);
Method(GanttOptions,startElement,void,Y,N,N,public);
Method(GanttProject,getOptions,GanttOptions,N,N,N,public);
Parameter(GanttOptions,GanttOptions,roleManager,RoleManager,declaration);
Parameter(GanttOptions,addAttribute,attrs,AttributesImpl,declaration);
Parameter(GanttOptions,addAttribute,name,String,declaration);
Parameter(GanttOptions,addAttribute,value,String,declaration);
Parameter(GanttOptions,correct,resString,local);
Parameter(GanttOptions,correct,s,String,declaration);
Parameter(GanttOptions,emptyElement,attrs,AttributesImpl,declaration);
Parameter(GanttOptions,emptyElement,handler,TransformerHandler,declaration);
Parameter(GanttOptions,emptyElement,name,String,declaration);
Parameter(GanttOptions,endElement,handler,TransformerHandler,declaration);
Parameter(GanttOptions,endElement,name,String,declaration);
Parameter(GanttOptions,getFontSpec,font,Font,declaration);
Parameter(GanttOptions,getFontStyle,BOLDITALICint,local);
Parameter(GanttOptions,getFontStyle,font,Font,declaration);
Parameter(GanttOptions,getFontStyle,resultString,local);
Parameter(GanttOptions,load,factorySAXParserFactory,local);
Parameter(GanttOptions,load,fileFile,local);
Parameter(GanttOptions,load,handlerDefaultHandler,local);
Parameter(GanttOptions,load,infoGanttLookAndFeelInfo,local);
Parameter(GanttOptions,load,sFileNameString,local);
Parameter(GanttOptions,load,saxParserSAXParser,local);
Parameter(GanttOptions,loadRoleSets,loaderGanttXMLOpen,local);
Parameter(GanttOptions,loadRoleSets,optionsFile,File,declaration);
Parameter(GanttOptions,save,attrsAttributesImpl,local);
Parameter(GanttOptions,save,documentDocument,local);
Parameter(GanttOptions,save,fileFile,local);
Parameter(GanttOptions,save,handlerTransformerHandler,local);
Parameter(GanttOptions,save,resourceColorColor,local);
Parameter(GanttOptions,save,resourceOverloadColorColor,local);
Parameter(GanttOptions,save,sFileNameString,local);
Parameter(GanttOptions,save,serializerTransformer,local);
Parameter(GanttOptions,save,taskColorColor,local);
Parameter(GanttOptions,saveRoleSets,attrsAttributesImpl,local);
Parameter(GanttOptions,saveRoleSets,handler,TransformerHandler,declaration);
Parameter(GanttOptions,saveRoleSets,roleSetsRoleSet[],local);
Parameter(GanttOptions,saveRoles,attrsAttributesImpl,local);
Parameter(GanttOptions,saveRoles,handler,TransformerHandler,declaration);
Parameter(GanttOptions,saveRoles,nextRole,local);
Parameter(GanttOptions,saveRoles,roleSet,RoleSet,declaration);
Parameter(GanttOptions,saveRoles,rolesRole[],local);
Parameter(GanttOptions,setAutomatic,automatic,boolean,declaration);
Parameter(GanttOptions,setButtonShow,buttonShow,int,declaration);
Parameter(GanttOptions,setDefaultTaskColor,color,Color,declaration);
Parameter(GanttOptions,setDocumentsMRU,documentsMRU,DocumentsMRU,declaration);
Parameter(GanttOptions,setDragTime,dragTime,boolean,declaration);
Parameter(GanttOptions,setExport3dBorders,borders3d,boolean,declaration);
Parameter(GanttOptions,setExportComplete,exportComplete,boolean,declaration);
Parameter(GanttOptions,setExportName,exportName,boolean,declaration);
Parameter(GanttOptions,setExportRelations,eportRelations,boolean,declaration);
Parameter(GanttOptions,setIconSize,sIconSize,String,declaration);
Parameter(GanttOptions,setLockDAVMinutes,minuteslock,int,declaration);
Parameter(GanttOptions,setLookAndFeel,lookAndFeel,GanttLookAndFeelInfo,declaration);
Parameter(GanttOptions,setOpenTips,openTips,boolean,declaration);
Parameter(GanttOptions,setResourceColor,color,Color,declaration);
Parameter(GanttOptions,setResourceOverloadColor,color,Color,declaration);
Parameter(GanttOptions,setShowStatusBar,showStatusBar,boolean,declaration);
Parameter(GanttOptions,setTaskNamePrefix,taskNamePrefix,String,declaration);
Parameter(GanttOptions,setToolBarPosition,iToolBarPosition,int,declaration);
Parameter(GanttOptions,setUIConfiguration,uiConfiguration,UIConfiguration,declaration);
Parameter(GanttOptions,setWindowPosition,x,int,declaration);
Parameter(GanttOptions,setWindowPosition,y,int,declaration);
Parameter(GanttOptions,setWindowSize,height,int,declaration);
Parameter(GanttOptions,setWindowSize,width,int,declaration);
Parameter(GanttOptions,setWorkingDirectory,workingDirectory,String,declaration);
Parameter(GanttOptions,setXslDir,xslDir,String,declaration);
Parameter(GanttOptions,setXslFo,xslFo,String,declaration);
Parameter(GanttOptions,startElement,aNameString,local);
Parameter(GanttOptions,startElement,attrs,Attributes,declaration);
Parameter(GanttOptions,startElement,bint,local);
Parameter(GanttOptions,startElement,categoryString,local);
Parameter(GanttOptions,startElement,colorRColor,local);
Parameter(GanttOptions,startElement,colorTColor,local);
Parameter(GanttOptions,startElement,gint,local);
Parameter(GanttOptions,startElement,handler,TransformerHandler,declaration);
Parameter(GanttOptions,startElement,name,String,declaration);
Parameter(GanttOptions,startElement,namespaceURI,String,declaration);
Parameter(GanttOptions,startElement,qName,String,declaration);
Parameter(GanttOptions,startElement,rint,local);
Parameter(GanttOptions,startElement,sName,String,declaration);
Parameter(GanttProject,main,optionsGanttOptions,local);
Relation(CSVSettingsPanel;CSVSettingsPanel;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;applyChanges;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;initialize;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;separatCharHasChange;getCSVOptions,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExport3dBorders,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportComplete,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportName,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;getExportRelations,GanttOptions,N);
Relation(ExportSettingsPanel;applyChanges;setExport3dBorders,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportComplete,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportName,GanttOptions,boolean);
Relation(ExportSettingsPanel;applyChanges;setExportRelations,GanttOptions,boolean);
Relation(ExportSettingsPanel;initialize;getExport3dBorders,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportComplete,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportName,GanttOptions,N);
Relation(ExportSettingsPanel;initialize;getExportRelations,GanttOptions,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDragTime,GanttOptions,N);
Relation(GanttOptions;GanttOptions;getMessage,Throwable,N);
Relation(GanttOptions;GanttOptions;getProperty,System,String);
Relation(GanttOptions;GanttOptions;initByDefault,GanttOptions,N);
Relation(GanttOptions;GanttOptions;println,PrintStream,String);
Relation(GanttOptions;NgetInstance,GanttLanguage,N);
Relation(GanttOptions;addAttribute;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttOptions;correct;replaceAll,String,String-String);
Relation(GanttOptions;emptyElement;clear,AttributesImpl,N);
Relation(GanttOptions;emptyElement;endElement,GanttOptions,String-TransformerHandler);
Relation(GanttOptions;emptyElement;startElement,GanttOptions,String-Attributes-TransformerHandler);
Relation(GanttOptions;endElement;endElement,ContentHandler,String-String-String);
Relation(GanttOptions;getDefaultColor;getTaskColor,UIConfiguration,N);
Relation(GanttOptions;getDefaultColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;getFontSpec;getFamily,Font,N);
Relation(GanttOptions;getFontSpec;getFontStyle,GanttOptions,Font);
Relation(GanttOptions;getFontSpec;getSize,Font,N);
Relation(GanttOptions;getFontStyle;getStyle,Font,N);
Relation(GanttOptions;getResourceColor;getResourceColor,UIConfiguration,N);
Relation(GanttOptions;getResourceColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;getResourceOverloadColor;getResourceOverloadColor,UIConfiguration,N);
Relation(GanttOptions;getResourceOverloadColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;getTaskNamePrefix;equals,String,Object);
Relation(GanttOptions;getTaskNamePrefix;getText,GanttLanguage,String);
Relation(GanttOptions;getTrueTaskNamePrefix;equals,String,Object);
Relation(GanttOptions;getTrueTaskNamePrefix;getText,GanttLanguage,String);
Relation(GanttOptions;initByDefault;getResource,Class<GanttOptions>,String);
Relation(GanttOptions;initByDefault;toString,URL,N);
Relation(GanttOptions;load;clear,DocumentsMRU,N);
Relation(GanttOptions;load;exists,File,N);
Relation(GanttOptions;load;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttOptions;load;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(GanttOptions;load;getInfoByClass,GanttLookAndFeels,String);
Relation(GanttOptions;load;getInfoByName,GanttLookAndFeels,String);
Relation(GanttOptions;load;getProperty,System,String);
Relation(GanttOptions;load;loadRoleSets,GanttOptions,File);
Relation(GanttOptions;load;newInstance,SAXParserFactory,N);
Relation(GanttOptions;load;newSAXParser,SAXParserFactory,N);
Relation(GanttOptions;load;parse,SAXParser,File-DefaultHandler);
Relation(GanttOptions;load;printStackTrace,Throwable,N);
Relation(GanttOptions;loadRoleSets;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttOptions;loadRoleSets;getRoleManager,GanttOptions,N);
Relation(GanttOptions;loadRoleSets;load,GanttXMLOpen,File);
Relation(GanttOptions;save;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttOptions;save;addAttribute,GanttOptions,String-String-AttributesImpl);
Relation(GanttOptions;save;clear,AttributesImpl,N);
Relation(GanttOptions;save;emptyElement,GanttOptions,String-AttributesImpl-TransformerHandler);
Relation(GanttOptions;save;endDocument,ContentHandler,N);
Relation(GanttOptions;save;endElement,ContentHandler,String-String-String);
Relation(GanttOptions;save;endElement,GanttOptions,String-TransformerHandler);
Relation(GanttOptions;save;getChartMainFont,UIConfiguration,N);
Relation(GanttOptions;save;getClassName,LookAndFeelInfo,N);
Relation(GanttOptions;save;getColor,ColorConvertion,Color);
Relation(GanttOptions;save;getFontSpec,GanttOptions,Font);
Relation(GanttOptions;save;getMenuFont,UIConfiguration,N);
Relation(GanttOptions;save;getName,LookAndFeelInfo,N);
Relation(GanttOptions;save;getPath,Document,N);
Relation(GanttOptions;save;getProperty,System,String);
Relation(GanttOptions;save;getResourceColor,UIConfiguration,N);
Relation(GanttOptions;save;getResourceOverloadColor,UIConfiguration,N);
Relation(GanttOptions;save;getTaskColor,UIConfiguration,N);
Relation(GanttOptions;save;getText,GanttLanguage,String);
Relation(GanttOptions;save;getTransformer,TransformerHandler,N);
Relation(GanttOptions;save;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;save;hasNext,Iterator,N);
Relation(GanttOptions;save;isRedlineOn,UIConfiguration,N);
Relation(GanttOptions;save;iterator,DocumentsMRU,N);
Relation(GanttOptions;save;newInstance,TransformerFactory,N);
Relation(GanttOptions;save;newTransformerHandler,SAXTransformerFactory,N);
Relation(GanttOptions;save;next,Iterator,N);
Relation(GanttOptions;save;printStackTrace,Throwable,N);
Relation(GanttOptions;save;println,PrintStream,String);
Relation(GanttOptions;save;saveRoleSets,GanttOptions,TransformerHandler);
Relation(GanttOptions;save;setOutputProperty,Transformer,String-String);
Relation(GanttOptions;save;setResult,TransformerHandler,Result);
Relation(GanttOptions;save;startDocument,ContentHandler,N);
Relation(GanttOptions;save;startElement,ContentHandler,String-String-String-Attributes);
Relation(GanttOptions;save;startElement,GanttOptions,String-Attributes-TransformerHandler);
Relation(GanttOptions;saveRoleSets;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttOptions;saveRoleSets;endElement,ContentHandler,String-String-String);
Relation(GanttOptions;saveRoleSets;getName,RoleSet,N);
Relation(GanttOptions;saveRoleSets;getRoleManager,GanttOptions,N);
Relation(GanttOptions;saveRoleSets;getRoleSets,RoleManager,N);
Relation(GanttOptions;saveRoleSets;saveRoles,GanttOptions,RoleSet-TransformerHandler);
Relation(GanttOptions;saveRoleSets;startElement,ContentHandler,String-String-String-Attributes);
Relation(GanttOptions;saveRoles;addAttribute,GanttOptions,String-String-AttributesImpl);
Relation(GanttOptions;saveRoles;emptyElement,GanttOptions,String-AttributesImpl-TransformerHandler);
Relation(GanttOptions;saveRoles;getID,Role,N);
Relation(GanttOptions;saveRoles;getName,Role,N);
Relation(GanttOptions;saveRoles;getRoles,RoleSet,N);
Relation(GanttOptions;setDefaultTaskColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;setDefaultTaskColor;setTaskColor,UIConfiguration,Color);
Relation(GanttOptions;setResourceColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;setResourceColor;setResourceColor,UIConfiguration,Color);
Relation(GanttOptions;setResourceOverloadColor;getUIConfiguration,GanttOptions,N);
Relation(GanttOptions;setResourceOverloadColor;setResourceOverloadColor,UIConfiguration,Color);
Relation(GanttOptions;startElement;append,DocumentsMRU,Document);
Relation(GanttOptions;startElement;booleanValue,Boolean,N);
Relation(GanttOptions;startElement;createDocument,DocumentCreator,String);
Relation(GanttOptions;startElement;decode,Font,String);
Relation(GanttOptions;startElement;determineColor,ColorConvertion,String);
Relation(GanttOptions;startElement;equals,String,Object);
Relation(GanttOptions;startElement;exists,File,N);
Relation(GanttOptions;startElement;getLength,Attributes,N);
Relation(GanttOptions;startElement;getQName,Attributes,int);
Relation(GanttOptions;startElement;getValue,Attributes,String);
Relation(GanttOptions;startElement;getValue,Attributes,int);
Relation(GanttOptions;startElement;hashCode,Integer,N);
Relation(GanttOptions;startElement;intValue,Integer,N);
Relation(GanttOptions;startElement;setDefaultTaskColor,GanttOptions,Color);
Relation(GanttOptions;startElement;setLocale,GanttLanguage,Locale);
Relation(GanttOptions;startElement;setResourceColor,GanttOptions,Color);
Relation(GanttOptions;startElement;setResourceOverloadColor,GanttOptions,Color);
Relation(GanttOptions;startElement;startElement,ContentHandler,String-String-String-Attributes);
Relation(GanttProject;GanttProject;getButtonShow,GanttOptions,N);
Relation(GanttProject;GanttProject;getDefaultColor,GanttOptions,N);
Relation(GanttProject;GanttProject;getHeight,GanttOptions,N);
Relation(GanttProject;GanttProject;getLanguage,GanttOptions,N);
Relation(GanttProject;GanttProject;getLnfInfos,GanttOptions,N);
Relation(GanttProject;GanttProject;getLockDAVMinutes,GanttOptions,N);
Relation(GanttProject;GanttProject;getOpenTips,GanttOptions,N);
Relation(GanttProject;GanttProject;getShowStatusBar,GanttOptions,N);
Relation(GanttProject;GanttProject;getToolBarPosition,GanttOptions,N);
Relation(GanttProject;GanttProject;getUIConfiguration,GanttOptions,N);
Relation(GanttProject;GanttProject;getWidth,GanttOptions,N);
Relation(GanttProject;GanttProject;getX,GanttOptions,N);
Relation(GanttProject;GanttProject;getY,GanttOptions,N);
Relation(GanttProject;GanttProject;isLoaded,GanttOptions,N);
Relation(GanttProject;GanttProject;load,GanttOptions,N);
Relation(GanttProject;GanttProject;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;GanttProject;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(GanttProject;GanttProject;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(GanttProject;actionPerformed;getOpenTips,GanttOptions,N);
Relation(GanttProject;addButtons;getIconSize,GanttOptions,N);
Relation(GanttProject;applyButtonOptions;getButtonShow,GanttOptions,N);
Relation(GanttProject;applyButtonOptions;getIconSize,GanttOptions,N);
Relation(GanttProject;changeWorkingDirectory;setWorkingDirectory,GanttOptions,String);
Relation(GanttProject;doExport;getCSVOptions,GanttOptions,N);
Relation(GanttProject;getXslDir;getXslDir,GanttOptions,N);
Relation(GanttProject;getXslFo;getXslFo,GanttOptions,N);
Relation(GanttProject;importcbk;getWorkingDir,GanttOptions,N);
Relation(GanttProject;main;setXslDir,GanttOptions,String);
Relation(GanttProject;main;setXslFo,GanttOptions,String);
Relation(GanttProject;newTask;getAutomatic,GanttOptions,N);
Relation(GanttProject;newTask;getTaskNamePrefix,GanttOptions,N);
Relation(GanttProject;openFile;getWorkingDir,GanttOptions,N);
Relation(GanttProject;printProject;getExportSettings,GanttOptions,N);
Relation(GanttProject;quitApplication;save,GanttOptions,N);
Relation(GanttProject;quitApplication;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;quitApplication;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(GanttProject;quitApplication;setToolBarPosition,GanttOptions,int);
Relation(GanttProject;quitApplication;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(GanttProject;quitApplication;setWindowPosition,GanttOptions,int-int);
Relation(GanttProject;quitApplication;setWindowSize,GanttOptions,int-int);
Relation(GanttProject;restoreOptions;getUIConfiguration,GanttOptions,N);
Relation(GanttProject;restoreOptions;initByDefault,GanttOptions,N);
Relation(GanttProject;saveAsProject;getWorkingDir,GanttOptions,N);
Relation(GanttProject;selectExportFile;getExportSettings,GanttOptions,N);
Relation(GanttProject;selectExportFile;getWorkingDir,GanttOptions,N);
Relation(GanttProject;setButtonText;getButtonShow,GanttOptions,N);
Relation(HTMLSettingsPanel;applyChanges;setXslDir,GanttOptions,String);
Relation(HTMLSettingsPanel;initialize;getXslDir,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getButtonShow,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getIconSize,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;getShowStatusBar,GanttOptions,N);
Relation(LnFSettingsPanel;applyChanges;setButtonShow,GanttOptions,int);
Relation(LnFSettingsPanel;applyChanges;setIconSize,GanttOptions,String);
Relation(LnFSettingsPanel;applyChanges;setShowStatusBar,GanttOptions,boolean);
Relation(LnFSettingsPanel;initialize;getButtonShow,GanttOptions,N);
Relation(LnFSettingsPanel;initialize;getIconSize,GanttOptions,N);
Relation(LnFSettingsPanel;initialize;getShowStatusBar,GanttOptions,N);
Relation(PDFSettingsPanel;applyChanges;setXslFo,GanttOptions,String);
Relation(PDFSettingsPanel;initialize;getXslFo,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getAutomatic,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getDragTime,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getLockDAVMinutes,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;getTrueTaskNamePrefix,GanttOptions,N);
Relation(ParametersSettingsPanel;applyChanges;setAutomatic,GanttOptions,boolean);
Relation(ParametersSettingsPanel;applyChanges;setDragTime,GanttOptions,boolean);
Relation(ParametersSettingsPanel;applyChanges;setLockDAVMinutes,GanttOptions,int);
Relation(ParametersSettingsPanel;applyChanges;setTaskNamePrefix,GanttOptions,String);
Relation(ParametersSettingsPanel;initialize;getAutomatic,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getDragTime,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getLockDAVMinutes,GanttOptions,N);
Relation(ParametersSettingsPanel;initialize;getTaskNamePrefix,GanttOptions,N);
Relation(TipsDialog;TipsDialog;setOpenTips,GanttOptions,boolean);
end b145
start b146
Class(ExportException,N,N,public);
Generalisation(ExportException,Exception);
Method(ExportException,ExportException,N,Y,N,N,package);
Method(ExportException,ExportException,N,Y,N,N,public);
Parameter(ExportException,ExportException,cause,Throwable,declaration);
Parameter(ExportException,ExportException,message,String,declaration);
end b146
start b147
Class(TextObject,N,N,private);
Method(GanttXFIGSaver,task2text,TextObject,Y,N,N,public);
Parameter(GanttXFIGSaver,drawTasks,txtObjTextObject,local);
Parameter(GanttXFIGSaver,drawtext,txtObj,TextObject,declaration);
Parameter(GanttXFIGSaver,setProjectPlotTimes,textLabelTextObject,local);
Parameter(GanttXFIGSaver,task2text,taskTextTextObject,local);
Relation(GanttXFIGSaver;drawTasks;drawtext,GanttXFIGSaver,OutputStreamWriter-TextObject);
end b147
start b148
Attribute(ChartModelImpl,myTimeUnitStack,GregorianTimeUnitStack,N,private);
Attribute(GregorianTimeUnitStack,ATOM_UNIT,TimeUnit,static,private);
Attribute(GregorianTimeUnitStack,DAY,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,DAY_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,HOUR,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,HOUR_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,MINUTE,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,MINUTE_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,MONTH,TimeUnitFunctionOfDate,static,public);
Attribute(GregorianTimeUnitStack,MONTH_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,SECOND,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,SECOND_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,lastDate,Date,N,private);
Attribute(GregorianTimeUnitStack,myBaseDate,Date,N,private);
Attribute(GregorianTimeUnitStack,myBottomUnit,TimeUnit,N,private);
Attribute(GregorianTimeUnitStack,myCalendar,GregorianCalendar,N,private);
Attribute(GregorianTimeUnitStack,myEndDate,Date,N,package);
Attribute(GregorianTimeUnitStack,myEndDate,Date,N,private);
Attribute(GregorianTimeUnitStack,myFirstItem,LineItem,N,package);
Attribute(GregorianTimeUnitStack,myHighestFrameable,DateFrameable,N,private);
Attribute(GregorianTimeUnitStack,myItemCount,int,N,private);
Attribute(GregorianTimeUnitStack,myLineHeader,LineHeader,N,private);
Attribute(GregorianTimeUnitStack,myLowestFrameable,DateFrameable,N,private);
Attribute(GregorianTimeUnitStack,myNextFrameStartDate,Date,N,private);
Attribute(GregorianTimeUnitStack,myNextHeader,LineHeader,N,private);
Attribute(GregorianTimeUnitStack,myNextItem,LineItem,N,package);
Attribute(GregorianTimeUnitStack,myRoundedCount,int,N,package);
Attribute(GregorianTimeUnitStack,myStartDate,Date,N,package);
Attribute(GregorianTimeUnitStack,myStartDate,Date,N,private);
Attribute(GregorianTimeUnitStack,myTopUnit,TimeUnit,N,private);
Attribute(GregorianTimeUnitStack,myTruncatedCount,int,N,package);
Attribute(GregorianTimeUnitStack,myUnit,TimeUnit,N,package);
Attribute(GregorianTimeUnitStack,ourGraph,TimeUnitGraph,static,private);
Attribute(GregorianTimeUnitStack,ourUnit2field,HashMap,static,private);
Class(GregorianTimeUnitStack,N,N,public);
Method(GregorianTimeUnitStack,GregorianTimeUnitStack,N,N,N,N,public);
Method(GregorianTimeUnitStack,LineHeader,N,Y,N,N,public);
Method(GregorianTimeUnitStack,LineItem,N,Y,N,N,public);
Method(GregorianTimeUnitStack,TimeFrameImpl,N,Y,N,N,package);
Method(GregorianTimeUnitStack,UnitInfo,N,Y,N,N,public);
Method(GregorianTimeUnitStack,append,void,Y,N,N,package);
Method(GregorianTimeUnitStack,calculateEndDate,Date,N,N,N,private);
Method(GregorianTimeUnitStack,calculateHighestFrameableUnit,DateFrameable,Y,N,N,private);
Method(GregorianTimeUnitStack,calculateLines,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,calculateLowestFrameableUnit,DateFrameable,Y,N,N,private);
Method(GregorianTimeUnitStack,createHeader,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,createLineItem,LineItem,Y,N,N,private);
Method(GregorianTimeUnitStack,createTimeFrame,TimeFrame,Y,N,N,public);
Method(GregorianTimeUnitStack,fillLine,void,Y,N,N,private);
Method(GregorianTimeUnitStack,fullDump,String,N,N,N,public);
Method(GregorianTimeUnitStack,getBottomUnit,TimeUnit,N,N,N,public);
Method(GregorianTimeUnitStack,getFinishDate,Date,N,N,N,public);
Method(GregorianTimeUnitStack,getItemCount,int,N,N,N,public);
Method(GregorianTimeUnitStack,getLineHeader,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,getLineItem,LineItem,Y,N,N,package);
Method(GregorianTimeUnitStack,getStartDate,Date,N,N,N,public);
Method(GregorianTimeUnitStack,getTopUnit,TimeUnit,N,N,N,public);
Method(GregorianTimeUnitStack,getUnitCount,int,Y,N,N,private);
Method(GregorianTimeUnitStack,getUnitCount,int,Y,N,N,public);
Method(GregorianTimeUnitStack,getUnitStart,Date,Y,N,N,public);
Method(GregorianTimeUnitStack,getUnitText,String,Y,N,N,private);
Method(GregorianTimeUnitStack,getUnitText,String,Y,N,N,public);
Method(GregorianTimeUnitStack,next,LineHeader,N,N,N,package);
Method(GregorianTimeUnitStack,toString,String,N,N,N,public);
Parameter(GregorianTimeUnitStack,LineHeader,myUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,LineItem,myEndDate,Date,declaration);
Parameter(GregorianTimeUnitStack,LineItem,myStartDate,Date,declaration);
Parameter(GregorianTimeUnitStack,TimeFrameImpl,baseDate,Date,declaration);
Parameter(GregorianTimeUnitStack,TimeFrameImpl,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,TimeFrameImpl,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,UnitInfo,lastDate,Date,declaration);
Parameter(GregorianTimeUnitStack,UnitInfo,myRoundedCount,int,declaration);
Parameter(GregorianTimeUnitStack,UnitInfo,myTruncatedCount,int,declaration);
Parameter(GregorianTimeUnitStack,append,next,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,calculateEndDate,countFrameableint,local);
Parameter(GregorianTimeUnitStack,calculateEndDate,dateDate,local);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,highestFrameableDateFrameable,local);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateLines,curHeaderLineHeader,local);
Parameter(GregorianTimeUnitStack,calculateLines,curUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,calculateLines,lastHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,lowestFrameableDateFrameable,local);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createHeader,unit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createLineItem,endDate,Date,declaration);
Parameter(GregorianTimeUnitStack,createLineItem,startDate,Date,declaration);
Parameter(GregorianTimeUnitStack,createTimeFrame,baseDate,Date,declaration);
Parameter(GregorianTimeUnitStack,createTimeFrame,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createTimeFrame,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,fillLine,curItemLineItem,local);
Parameter(GregorianTimeUnitStack,fillLine,curStartDateDate,local);
Parameter(GregorianTimeUnitStack,fillLine,endDateDate,local);
Parameter(GregorianTimeUnitStack,fillLine,header,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,fillLine,higherHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,fillLine,itemLineItem,local);
Parameter(GregorianTimeUnitStack,fillLine,newItemLineItem,local);
Parameter(GregorianTimeUnitStack,fillLine,nextEndDateDate,local);
Parameter(GregorianTimeUnitStack,fillLine,startDateDate,local);
Parameter(GregorianTimeUnitStack,fillLine,unitCountint,local);
Parameter(GregorianTimeUnitStack,fullDump,nextLineItem,local);
Parameter(GregorianTimeUnitStack,fullDump,resultStringBuffer,local);
Parameter(GregorianTimeUnitStack,getLineHeader,resultLineHeader,local);
Parameter(GregorianTimeUnitStack,getLineHeader,timeUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getLineItem,position,int,declaration);
Parameter(GregorianTimeUnitStack,getLineItem,resultLineItem,local);
Parameter(GregorianTimeUnitStack,getUnitCount,header,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,higherHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,higherItem,LineItem,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,higherUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,getUnitCount,lineHeaderLineHeader,local);
Parameter(GregorianTimeUnitStack,getUnitCount,lowerUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,getUnitCount,resultint,local);
Parameter(GregorianTimeUnitStack,getUnitCount,unit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getUnitStart,position,int,declaration);
Parameter(GregorianTimeUnitStack,getUnitStart,unitLine,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getUnitText,lineHeaderLineHeader,local);
Parameter(GregorianTimeUnitStack,getUnitText,lineItemLineItem,local);
Parameter(GregorianTimeUnitStack,getUnitText,position,int,declaration);
Parameter(GregorianTimeUnitStack,getUnitText,resultString,local);
Parameter(GregorianTimeUnitStack,getUnitText,startDate,Date,declaration);
Parameter(GregorianTimeUnitStack,getUnitText,startDateDate,local);
Parameter(GregorianTimeUnitStack,getUnitText,unitLine,TimeUnit,declaration);
Relation(ChartModelImpl;calculateTimeFrames;createTimeFrame,GregorianTimeUnitStack,Date-TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;NcreateAtomTimeUnit,TimeUnitGraph,String);
Relation(GregorianTimeUnitStack;NcreateDateFrameableTimeUnit,TimeUnitGraph,String-TimeUnit-int-DateFrameable);
Relation(GregorianTimeUnitStack;NcreateTimeUnitFunctionOfDate,TimeUnitGraph,String-TimeUnit-DateFrameable);
Relation(GregorianTimeUnitStack;Nput,HashMap,Object-Object);
Relation(GregorianTimeUnitStack;NsetTextFormatter,TimeUnit,TextFormatter);
Relation(GregorianTimeUnitStack;TimeFrameImpl;adjustLeft,DateFrameable,Date);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateHighestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLowestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;clone,Calendar,N);
Relation(GregorianTimeUnitStack;TimeFrameImpl;getInstance,Calendar,N);
Relation(GregorianTimeUnitStack;TimeFrameImpl;isConstructedFrom,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;println,PrintStream,String);
Relation(GregorianTimeUnitStack;TimeFrameImpl;setTime,Calendar,Date);
Relation(GregorianTimeUnitStack;calculateEndDate;adjustRight,DateFrameable,Date);
Relation(GregorianTimeUnitStack;calculateEndDate;getAtomCount,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;calculateHighestFrameableUnit;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;calculateHighestFrameableUnit;println,PrintStream,String);
Relation(GregorianTimeUnitStack;calculateLines;append,LineHeader,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;createHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;calculateLines;fillLine,TimeFrameImpl,LineHeader-LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;calculateLowestFrameableUnit;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;fillLine;adjustRight,DateFrameable,Date);
Relation(GregorianTimeUnitStack;fillLine;compareTo,Date,Date);
Relation(GregorianTimeUnitStack;fillLine;createLineItem,TimeFrameImpl,Date-Date);
Relation(GregorianTimeUnitStack;fillLine;fullDump,LineHeader,N);
Relation(GregorianTimeUnitStack;fillLine;getUnitCount,TimeFrameImpl,LineHeader-LineHeader-LineItem);
Relation(GregorianTimeUnitStack;fillLine;println,PrintStream,String);
Relation(GregorianTimeUnitStack;fullDump;append,StringBuffer,String);
Relation(GregorianTimeUnitStack;fullDump;getItemCount,LineHeader,N);
Relation(GregorianTimeUnitStack;fullDump;getLineItem,LineHeader,int);
Relation(GregorianTimeUnitStack;fullDump;toString,LineHeader,N);
Relation(GregorianTimeUnitStack;fullDump;toString,StringBuffer,N);
Relation(GregorianTimeUnitStack;getFinishDate;calculateEndDate,TimeFrameImpl,N);
Relation(GregorianTimeUnitStack;getFinishDate;println,PrintStream,String);
Relation(GregorianTimeUnitStack;getLineHeader;next,LineHeader,N);
Relation(GregorianTimeUnitStack;getUnitCount;createTimeUnit,TimeUnitFunctionOfDate,Date);
Relation(GregorianTimeUnitStack;getUnitCount;getAtomCount,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitCount;getItemCount,LineHeader,N);
Relation(GregorianTimeUnitStack;getUnitCount;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;equals,String,Object);
Relation(GregorianTimeUnitStack;getUnitText;format,TimeUnit,Date);
Relation(GregorianTimeUnitStack;getUnitText;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;getLineItem,LineHeader,int);
Relation(GregorianTimeUnitStack;getUnitText;getUnitText,TimeFrameImpl,TimeUnit-Date);
Relation(GregorianTimeUnitStack;getUnitText;println,PrintStream,String);
Relation(GregorianTimeUnitStack;toString;toString,Date,N);
Relation(GregorianTimeUnitStack;toString;toString,Object,N);
end b148
start b149
Attribute(ResourceTagHandler,myLateResource2roleBinding,HashMap,N,private);
Attribute(ResourceTagHandler,myResourceManager,ResourceManager,N,private);
Attribute(ResourceTagHandler,myRoleManager,RoleManager,N,private);
Class(ResourceTagHandler,N,N,public);
Method(ResourceTagHandler,ResourceTagHandler,N,Y,N,N,public);
Method(ResourceTagHandler,endElement,void,Y,N,N,public);
Method(ResourceTagHandler,findRole,Role,Y,N,N,private);
Method(ResourceTagHandler,getResourceManager,ResourceManager,N,N,N,private);
Method(ResourceTagHandler,loadResource,void,Y,N,N,private);
Method(ResourceTagHandler,parsingFinished,void,N,N,N,public);
Method(ResourceTagHandler,parsingStarted,void,N,N,N,public);
Method(ResourceTagHandler,startElement,void,Y,N,N,public);
Parameter(GanttProject,importcbk,resourceHandlerResourceTagHandler,local);
Parameter(GanttProject,openDocument,resourceHandlerResourceTagHandler,local);
Parameter(GanttProject,openXMLStream,resourceHandlerResourceTagHandler,local);
Parameter(ImportResources,actionPerformed,tagHandlerResourceTagHandler,local);
Parameter(ResourceTagHandler,ResourceTagHandler,resourceManager,ResourceManager,declaration);
Parameter(ResourceTagHandler,ResourceTagHandler,roleManager,RoleManager,declaration);
Parameter(ResourceTagHandler,endElement,namespaceURI,String,declaration);
Parameter(ResourceTagHandler,endElement,qName,String,declaration);
Parameter(ResourceTagHandler,endElement,sName,String,declaration);
Parameter(ResourceTagHandler,findRole,persistentIDRolePersistentID,local);
Parameter(ResourceTagHandler,findRole,persistentIDasString,String,declaration);
Parameter(ResourceTagHandler,findRole,resultRole,local);
Parameter(ResourceTagHandler,findRole,roleIDint,local);
Parameter(ResourceTagHandler,findRole,roleSetRoleSet,local);
Parameter(ResourceTagHandler,findRole,rolesetNameString,local);
Parameter(ResourceTagHandler,loadResource,atts,Attributes,declaration);
Parameter(ResourceTagHandler,loadResource,hrHumanResource,local);
Parameter(ResourceTagHandler,loadResource,roleIDString,local);
Parameter(ResourceTagHandler,parsingFinished,nextEntryEntry,local);
Parameter(ResourceTagHandler,parsingFinished,nextRoleRole,local);
Parameter(ResourceTagHandler,parsingFinished,persistentIDString,local);
Parameter(ResourceTagHandler,startElement,attrs,Attributes,declaration);
Parameter(ResourceTagHandler,startElement,namespaceURI,String,declaration);
Parameter(ResourceTagHandler,startElement,qName,String,declaration);
Parameter(ResourceTagHandler,startElement,sName,String,declaration);
Relation(ResourceTagHandler;ResourceTagHandler;clear,ResourceManager,N);
Relation(ResourceTagHandler;findRole;findRole,RoleSet,int);
Relation(ResourceTagHandler;findRole;getProjectRoleSet,RoleManager,N);
Relation(ResourceTagHandler;findRole;getRoleID,RolePersistentID,N);
Relation(ResourceTagHandler;findRole;getRoleSet,RoleManager,String);
Relation(ResourceTagHandler;findRole;getRoleSetID,RolePersistentID,N);
Relation(ResourceTagHandler;findRole;setEnabled,RoleSet,boolean);
Relation(ResourceTagHandler;loadResource;create,ResourceManager,String-int);
Relation(ResourceTagHandler;loadResource;getResourceManager,ResourceTagHandler,N);
Relation(ResourceTagHandler;loadResource;getValue,Attributes,String);
Relation(ResourceTagHandler;loadResource;parseInt,Integer,String);
Relation(ResourceTagHandler;loadResource;println,PrintStream,String);
Relation(ResourceTagHandler;loadResource;put,HashMap,Object-Object);
Relation(ResourceTagHandler;loadResource;setId,ProjectResource,int);
Relation(ResourceTagHandler;loadResource;setMail,HumanResource,String);
Relation(ResourceTagHandler;loadResource;setPhone,HumanResource,String);
Relation(ResourceTagHandler;loadResource;toString,Throwable,N);
Relation(ResourceTagHandler;parsingFinished;entrySet,HashMap,N);
Relation(ResourceTagHandler;parsingFinished;findRole,ResourceTagHandler,String);
Relation(ResourceTagHandler;parsingFinished;getKey,Entry,N);
Relation(ResourceTagHandler;parsingFinished;getValue,Entry,N);
Relation(ResourceTagHandler;parsingFinished;hasNext,Iterator,N);
Relation(ResourceTagHandler;parsingFinished;iterator,Set,N);
Relation(ResourceTagHandler;parsingFinished;next,Iterator,N);
Relation(ResourceTagHandler;parsingFinished;println,PrintStream,String);
Relation(ResourceTagHandler;parsingFinished;remove,Iterator,N);
Relation(ResourceTagHandler;parsingFinished;setRole,HumanResource,Role);
Relation(ResourceTagHandler;startElement;equals,String,Object);
Relation(ResourceTagHandler;startElement;loadResource,ResourceTagHandler,Attributes);
end b149
start b150
Class(MutableTask,N,N,public);
Method(MutableTask,addNotes,void,Y,N,N,package);
Method(MutableTask,setColor,void,Y,N,N,package);
Method(MutableTask,setCompletionPercentage,void,Y,N,N,package);
Method(MutableTask,setDuration,void,Y,N,N,package);
Method(MutableTask,setEnd,void,Y,N,N,package);
Method(MutableTask,setExpand,void,Y,N,N,package);
Method(MutableTask,setMilestone,void,Y,N,N,package);
Method(MutableTask,setName,void,Y,N,N,package);
Method(MutableTask,setNotes,void,Y,N,N,package);
Method(MutableTask,setPriority,void,Y,N,N,package);
Method(MutableTask,setShape,void,Y,N,N,package);
Method(MutableTask,setStart,void,Y,N,N,package);
Method(MutableTask,setStartFixed,void,Y,N,N,package);
Parameter(MutableTask,addNotes,notes,String,declaration);
Parameter(MutableTask,setColor,color,Color,declaration);
Parameter(MutableTask,setCompletionPercentage,percentage,int,declaration);
Parameter(MutableTask,setDuration,length,TaskLength,declaration);
Parameter(MutableTask,setEnd,end,GanttCalendar,declaration);
Parameter(MutableTask,setExpand,expand,boolean,declaration);
Parameter(MutableTask,setMilestone,isMilestone,boolean,declaration);
Parameter(MutableTask,setName,name,String,declaration);
Parameter(MutableTask,setNotes,notes,String,declaration);
Parameter(MutableTask,setPriority,priority,int,declaration);
Parameter(MutableTask,setShape,shape,ShapePaint,declaration);
Parameter(MutableTask,setStart,start,GanttCalendar,declaration);
Parameter(MutableTask,setStartFixed,isFixed,boolean,declaration);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(GanttTask;GanttTask;setDuration,MutableTask,TaskLength);
Relation(GanttTask;GanttTask;setName,MutableTask,String);
Relation(GanttTask;GanttTask;setStart,MutableTask,GanttCalendar);
Relation(GanttTask;setLength;setDuration,MutableTask,TaskLength);
Relation(GanttTree;addObjectWithExpand;setExpand,MutableTask,boolean);
Relation(GanttTree;computePercentComplete;setCompletionPercentage,MutableTask,int);
Relation(GanttTree;getCellEditorValue;setName,MutableTask,String);
Relation(GanttTree;indentCurrentNodes;setMilestone,MutableTask,boolean);
Relation(GanttTree;treeCollapsed;setExpand,MutableTask,boolean);
Relation(GanttTree;treeExpanded;setExpand,MutableTask,boolean);
Relation(GanttXMLOpen;characters;setNotes,MutableTask,String);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;setCompletionPercentage,MutableTask,int);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskEnd;setEnd,MutableTask,GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setDuration,MutableTask,TaskLength);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;setStart,MutableTask,GanttCalendar);
Relation(TaskManagerImpl;getRootTask;setDuration,MutableTask,TaskLength);
Relation(TaskManagerImpl;getRootTask;setExpand,MutableTask,boolean);
Relation(TaskManagerImpl;getRootTask;setStart,MutableTask,GanttCalendar);
end b150
start b151
Attribute(PDFSettingsPanel,appli,GanttProject,N,private);
Attribute(PDFSettingsPanel,buttonXslFo,JButton,N,package);
Attribute(PDFSettingsPanel,cbDefault,JCheckBox,N,package);
Attribute(PDFSettingsPanel,tfXslFo,JTextField,N,package);
Class(PDFSettingsPanel,N,N,public);
Generalisation(PDFSettingsPanel,GeneralOptionPanel);
Method(PDFSettingsPanel,PDFSettingsPanel,N,Y,N,N,public);
Method(PDFSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(PDFSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(PDFSettingsPanel,getXslFoFile,String,Y,N,N,public);
Method(PDFSettingsPanel,initialize,void,N,N,N,public);
Parameter(PDFSettingsPanel,PDFSettingsPanel,defaultPanelJPanel,local);
Parameter(PDFSettingsPanel,PDFSettingsPanel,fcJFileChooser,local);
Parameter(PDFSettingsPanel,PDFSettingsPanel,filefiltersFileFilter[],local);
Parameter(PDFSettingsPanel,PDFSettingsPanel,parent,GanttProject,declaration);
Parameter(PDFSettingsPanel,PDFSettingsPanel,pdfThemeJPanel,local);
Parameter(PDFSettingsPanel,PDFSettingsPanel,returnValint,local);
Parameter(PDFSettingsPanel,PDFSettingsPanel,xslFilterFileFilter,local);
Parameter(PDFSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(PDFSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(PDFSettingsPanel,getXslFoFile,useDefault,boolean,declaration);
Relation(PDFSettingsPanel;PDFSettingsPanel;add,Container,Component);
Relation(PDFSettingsPanel;PDFSettingsPanel;add,Container,Component-Object);
Relation(PDFSettingsPanel;PDFSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(PDFSettingsPanel;PDFSettingsPanel;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(PDFSettingsPanel;PDFSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(PDFSettingsPanel;PDFSettingsPanel;correctLabel,GanttProject,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;getChoosableFileFilters,JFileChooser,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getClass,Object,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getInstance,GanttLanguage,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getResource,Class<>,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;getSelectedFile,JFileChooser,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;getText,GanttLanguage,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;getText,JTextComponent,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;println,PrintStream,boolean);
Relation(PDFSettingsPanel;PDFSettingsPanel;removeChoosableFileFilter,JFileChooser,FileFilter);
Relation(PDFSettingsPanel;PDFSettingsPanel;setApproveButtonToolTipText,JFileChooser,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;setColumns,JTextField,int);
Relation(PDFSettingsPanel;PDFSettingsPanel;setDialogTitle,JFileChooser,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;setEditable,JTextComponent,boolean);
Relation(PDFSettingsPanel;PDFSettingsPanel;setText,JTextComponent,String);
Relation(PDFSettingsPanel;PDFSettingsPanel;showDialog,JFileChooser,Component-String);
Relation(PDFSettingsPanel;PDFSettingsPanel;toString,File,N);
Relation(PDFSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(PDFSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(PDFSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(PDFSettingsPanel;applyChanges;getXslFoFile,PDFSettingsPanel,boolean);
Relation(PDFSettingsPanel;applyChanges;isSelected,AbstractButton,N);
Relation(PDFSettingsPanel;applyChanges;setXslFo,GanttOptions,String);
Relation(PDFSettingsPanel;getXslFoFile;exists,File,N);
Relation(PDFSettingsPanel;getXslFoFile;getResource,Class<PDFSettingsPanel>,String);
Relation(PDFSettingsPanel;getXslFoFile;getText,JTextComponent,N);
Relation(PDFSettingsPanel;getXslFoFile;length,String,N);
Relation(PDFSettingsPanel;getXslFoFile;toString,URL,N);
Relation(PDFSettingsPanel;initialize;getMessage,Throwable,N);
Relation(PDFSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(PDFSettingsPanel;initialize;getProperty,System,String);
Relation(PDFSettingsPanel;initialize;getXslFo,GanttOptions,N);
Relation(PDFSettingsPanel;initialize;println,PrintStream,String);
Relation(PDFSettingsPanel;initialize;setText,JTextComponent,String);
end b151
start b152
Attribute(GanttCSVExport,bFixedSize,boolean,N,package);
Attribute(GanttCSVExport,csvOptions,CSVOptions,N,private);
Attribute(GanttCSVExport,iMaxSize,int,N,package);
Attribute(GanttCSVExport,lot,ArrayList,N,package);
Attribute(GanttCSVExport,peop,GanttResourcePanel,N,private);
Attribute(GanttCSVExport,prjInfos,PrjInfos,N,private);
Attribute(GanttCSVExport,resources,ArrayList,N,package);
Attribute(GanttCSVExport,tree,GanttTree,N,private);
Class(GanttCSVExport,N,N,public);
Method(GanttCSVExport,GanttCSVExport,N,Y,N,N,public);
Method(GanttCSVExport,beginToSave,void,Y,N,N,public);
Method(GanttCSVExport,correctField,String,Y,N,N,private);
Method(GanttCSVExport,getAssignments,String,Y,N,N,private);
Method(GanttCSVExport,getMaxSize,void,N,N,N,package);
Method(GanttCSVExport,getName,String,Y,N,N,private);
Method(GanttCSVExport,getWebLink,String,Y,N,N,private);
Method(GanttCSVExport,save,void,Y,N,N,public);
Method(GanttCSVExport,writeProjectInfos,void,Y,N,N,private);
Method(GanttCSVExport,writeResources,void,Y,N,N,private);
Method(GanttCSVExport,writeTasks,void,Y,N,N,private);
Parameter(GanttCSVExport,GanttCSVExport,csvOptions,CSVOptions,declaration);
Parameter(GanttCSVExport,GanttCSVExport,peop,GanttResourcePanel,declaration);
Parameter(GanttCSVExport,GanttCSVExport,prjInfos,PrjInfos,declaration);
Parameter(GanttCSVExport,GanttCSVExport,tree,GanttTree,declaration);
Parameter(GanttCSVExport,beginToSave,out,OutputStreamWriter,declaration);
Parameter(GanttCSVExport,correctField,field,String,declaration);
Parameter(GanttCSVExport,correctField,resString,local);
Parameter(GanttCSVExport,getAssignments,assignmentResourceAssignment[],local);
Parameter(GanttCSVExport,getAssignments,resString,local);
Parameter(GanttCSVExport,getAssignments,task,GanttTask,declaration);
Parameter(GanttCSVExport,getMaxSize,nodeDefaultMutableTreeNode,local);
Parameter(GanttCSVExport,getMaxSize,pHumanResource,local);
Parameter(GanttCSVExport,getMaxSize,roleRole,local);
Parameter(GanttCSVExport,getMaxSize,sRoleIDString,local);
Parameter(GanttCSVExport,getMaxSize,sString,local);
Parameter(GanttCSVExport,getMaxSize,taskGanttTask,local);
Parameter(GanttCSVExport,getName,node,DefaultMutableTreeNode,declaration);
Parameter(GanttCSVExport,getName,resString,local);
Parameter(GanttCSVExport,getName,task,GanttTask,declaration);
Parameter(GanttCSVExport,getWebLink,task,GanttTask,declaration);
Parameter(GanttCSVExport,save,outOutputStreamWriter,local);
Parameter(GanttCSVExport,save,stream,OutputStream,declaration);
Parameter(GanttCSVExport,writeProjectInfos,out,OutputStreamWriter,declaration);
Parameter(GanttCSVExport,writeResources,out,OutputStreamWriter,declaration);
Parameter(GanttCSVExport,writeResources,pHumanResource,local);
Parameter(GanttCSVExport,writeResources,roleRole,local);
Parameter(GanttCSVExport,writeResources,sRoleIDString,local);
Parameter(GanttCSVExport,writeTasks,nodeDefaultMutableTreeNode,local);
Parameter(GanttCSVExport,writeTasks,out,OutputStreamWriter,declaration);
Parameter(GanttCSVExport,writeTasks,taskGanttTask,local);
Parameter(GanttProject,doExport,saverGanttCSVExport,local);
Relation(GanttCSVExport;beginToSave;getAllTasks,GanttTree,N);
Relation(GanttCSVExport;beginToSave;getMaxSize,GanttCSVExport,N);
Relation(GanttCSVExport;beginToSave;getPeople,GanttResourcePanel,N);
Relation(GanttCSVExport;beginToSave;write,Writer,String);
Relation(GanttCSVExport;beginToSave;writeResources,GanttCSVExport,OutputStreamWriter);
Relation(GanttCSVExport;beginToSave;writeTasks,GanttCSVExport,OutputStreamWriter);
Relation(GanttCSVExport;correctField;length,String,N);
Relation(GanttCSVExport;getAssignments;equals,String,Object);
Relation(GanttCSVExport;getAssignments;getAssignments,TaskImpl,N);
Relation(GanttCSVExport;getAssignments;getResource,ResourceAssignment,N);
Relation(GanttCSVExport;getMaxSize;get,ArrayList,int);
Relation(GanttCSVExport;getMaxSize;getAssignments,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;getMaxSize;getCompletionPercentage,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getEnd,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getId,ProjectResource,N);
Relation(GanttCSVExport;getMaxSize;getLength,GanttTask,N);
Relation(GanttCSVExport;getMaxSize;getMail,HumanResource,N);
Relation(GanttCSVExport;getMaxSize;getName,GanttCSVExport,DefaultMutableTreeNode-GanttTask);
Relation(GanttCSVExport;getMaxSize;getName,ProjectResource,N);
Relation(GanttCSVExport;getMaxSize;getNotes,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getPersistentID,Role,N);
Relation(GanttCSVExport;getMaxSize;getPhone,HumanResource,N);
Relation(GanttCSVExport;getMaxSize;getRole,HumanResource,N);
Relation(GanttCSVExport;getMaxSize;getStart,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getTaskID,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttCSVExport;getMaxSize;getWebLink,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;getMaxSize;hasNext,Iterator,N);
Relation(GanttCSVExport;getMaxSize;isRoot,DefaultMutableTreeNode,N);
Relation(GanttCSVExport;getMaxSize;iterator,ArrayList,N);
Relation(GanttCSVExport;getMaxSize;length,String,N);
Relation(GanttCSVExport;getMaxSize;next,Iterator,N);
Relation(GanttCSVExport;getMaxSize;size,ArrayList,N);
Relation(GanttCSVExport;getName;getLevel,DefaultMutableTreeNode,N);
Relation(GanttCSVExport;getName;getName,TaskImpl,N);
Relation(GanttCSVExport;getWebLink;equals,String,Object);
Relation(GanttCSVExport;getWebLink;getWebLink,TaskImpl,N);
Relation(GanttCSVExport;save;beginToSave,GanttCSVExport,OutputStreamWriter);
Relation(GanttCSVExport;save;close,OutputStreamWriter,N);
Relation(GanttCSVExport;save;printStackTrace,Throwable,N);
Relation(GanttCSVExport;save;println,PrintStream,Object);
Relation(GanttCSVExport;save;println,PrintStream,String);
Relation(GanttCSVExport;writeResources;correctField,GanttCSVExport,String);
Relation(GanttCSVExport;writeResources;get,ArrayList,int);
Relation(GanttCSVExport;writeResources;getId,ProjectResource,N);
Relation(GanttCSVExport;writeResources;getMail,HumanResource,N);
Relation(GanttCSVExport;writeResources;getName,ProjectResource,N);
Relation(GanttCSVExport;writeResources;getPersistentID,Role,N);
Relation(GanttCSVExport;writeResources;getPhone,HumanResource,N);
Relation(GanttCSVExport;writeResources;getRole,HumanResource,N);
Relation(GanttCSVExport;writeResources;size,ArrayList,N);
Relation(GanttCSVExport;writeResources;write,Writer,String);
Relation(GanttCSVExport;writeTasks;correctField,GanttCSVExport,String);
Relation(GanttCSVExport;writeTasks;getAssignments,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;writeTasks;getCompletionPercentage,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getEnd,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getLength,GanttTask,N);
Relation(GanttCSVExport;writeTasks;getName,GanttCSVExport,DefaultMutableTreeNode-GanttTask);
Relation(GanttCSVExport;writeTasks;getNotes,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getStart,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getTaskID,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttCSVExport;writeTasks;getWebLink,GanttCSVExport,GanttTask);
Relation(GanttCSVExport;writeTasks;hasNext,Iterator,N);
Relation(GanttCSVExport;writeTasks;isRoot,DefaultMutableTreeNode,N);
Relation(GanttCSVExport;writeTasks;iterator,ArrayList,N);
Relation(GanttCSVExport;writeTasks;next,Iterator,N);
Relation(GanttCSVExport;writeTasks;toString,GanttCalendar,N);
Relation(GanttCSVExport;writeTasks;write,Writer,String);
Relation(GanttProject;doExport;save,GanttCSVExport,OutputStream);
end b152
start b153
Attribute(GanttGraphicArea,myUIConfiguration,UIConfiguration,N,private);
Attribute(GanttOptions,myUIConfig,UIConfiguration,N,private);
Attribute(GanttProject,myUIConfiguration,UIConfiguration,N,private);
Attribute(UIConfiguration,isRedlineOn,boolean,N,private);
Attribute(UIConfiguration,myChartMainFont,Font,N,private);
Attribute(UIConfiguration,myMenuFont,Font,N,private);
Attribute(UIConfiguration,myResColor,Color,N,private);
Attribute(UIConfiguration,myResOverColor,Color,N,private);
Attribute(UIConfiguration,myTaskColor,Color,N,private);
Class(UIConfiguration,N,N,public);
Method(GanttOptions,getUIConfiguration,UIConfiguration,N,N,N,public);
Method(GanttProject,getUIConfiguration,UIConfiguration,N,N,N,public);
Method(IGanttProject,getUIConfiguration,UIConfiguration,N,N,N,package);
Method(UIConfiguration,UIConfiguration,N,Y,N,N,public);
Method(UIConfiguration,getChartMainFont,Font,N,N,N,public);
Method(UIConfiguration,getMenuFont,Font,N,N,N,public);
Method(UIConfiguration,getResourceColor,Color,N,N,N,public);
Method(UIConfiguration,getResourceOverloadColor,Color,N,N,N,public);
Method(UIConfiguration,getTaskColor,Color,N,N,N,public);
Method(UIConfiguration,isRedlineOn,boolean,N,N,N,public);
Method(UIConfiguration,setRedlineOn,void,Y,N,N,public);
Method(UIConfiguration,setResourceColor,void,Y,N,N,public);
Method(UIConfiguration,setResourceOverloadColor,void,Y,N,N,public);
Method(UIConfiguration,setTaskColor,void,Y,N,N,public);
Parameter(GanttGraphicArea,GanttGraphicArea,uiConfiguration,UIConfiguration,declaration);
Parameter(GanttMetalTheme,GanttMetalTheme,config,UIConfiguration,declaration);
Parameter(GanttOptions,setUIConfiguration,uiConfiguration,UIConfiguration,declaration);
Parameter(UIConfiguration,UIConfiguration,chartMainFont,Font,declaration);
Parameter(UIConfiguration,UIConfiguration,isRedlineOn,boolean,declaration);
Parameter(UIConfiguration,UIConfiguration,menuFont,Font,declaration);
Parameter(UIConfiguration,UIConfiguration,taskColor,Color,declaration);
Parameter(UIConfiguration,setRedlineOn,redlineOn,boolean,declaration);
Parameter(UIConfiguration,setResourceColor,myResColor,Color,declaration);
Parameter(UIConfiguration,setResourceOverloadColor,myResOverColor,Color,declaration);
Parameter(UIConfiguration,setTaskColor,myTaskColor,Color,declaration);
Relation(ColorSettingsPanel;applyChanges;setResourceColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;applyChanges;setResourceOverloadColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;applyChanges;setTaskColor,UIConfiguration,Color);
Relation(ColorSettingsPanel;initialize;getResourceColor,UIConfiguration,N);
Relation(ColorSettingsPanel;initialize;getResourceOverloadColor,UIConfiguration,N);
Relation(ColorSettingsPanel;initialize;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;getTaskColor;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskBilan;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskChild;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskFather;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintCalendar1;isRedlineOn,UIConfiguration,N);
Relation(GanttGraphicArea;paintTasks;getChartMainFont,UIConfiguration,N);
Relation(GanttGraphicArea;printTasks;getChartMainFont,UIConfiguration,N);
Relation(GanttMetalTheme;GanttMetalTheme;getMenuFont,UIConfiguration,N);
Relation(GanttOptions;getDefaultColor;getTaskColor,UIConfiguration,N);
Relation(GanttOptions;getResourceColor;getResourceColor,UIConfiguration,N);
Relation(GanttOptions;getResourceOverloadColor;getResourceOverloadColor,UIConfiguration,N);
Relation(GanttOptions;save;getChartMainFont,UIConfiguration,N);
Relation(GanttOptions;save;getMenuFont,UIConfiguration,N);
Relation(GanttOptions;save;getResourceColor,UIConfiguration,N);
Relation(GanttOptions;save;getResourceOverloadColor,UIConfiguration,N);
Relation(GanttOptions;save;getTaskColor,UIConfiguration,N);
Relation(GanttOptions;save;isRedlineOn,UIConfiguration,N);
Relation(GanttOptions;setDefaultTaskColor;setTaskColor,UIConfiguration,Color);
Relation(GanttOptions;setResourceColor;setResourceColor,UIConfiguration,Color);
Relation(GanttOptions;setResourceOverloadColor;setResourceOverloadColor,UIConfiguration,Color);
Relation(GanttProject;GanttProject;getTaskColor,UIConfiguration,N);
Relation(GanttProject;GanttProject;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(GanttProject;quitApplication;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(ParametersSettingsPanel;applyChanges;isRedlineOn,UIConfiguration,N);
Relation(ParametersSettingsPanel;applyChanges;setRedlineOn,UIConfiguration,boolean);
Relation(ParametersSettingsPanel;initialize;isRedlineOn,UIConfiguration,N);
Relation(ResourceLoadGraphicArea;paintLoads;getResourceColor,UIConfiguration,N);
Relation(ResourceLoadGraphicArea;paintLoads;getResourceOverloadColor,UIConfiguration,N);
Relation(UIConfiguration;UIConfiguration;setTaskColor,UIConfiguration,Color);
end b153
start b154
Class(SystemInfo,N,N,package);
Parameter(AboutJavaInfosPanel,addField,w,SystemInfo,declaration);
Parameter(AboutJavaInfosPanel,getValueAt,infoSystemInfo,local);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;addField,AboutFieldTableModel,SystemInfo);
Relation(AboutJavaInfosPanel;getValueAt;getName,SystemInfo,N);
Relation(AboutJavaInfosPanel;getValueAt;getValue,SystemInfo,N);
end b154
start b155
Class(AutoscrollingTree,N,N,private);
end b155
start b156
Attribute(AboutJavaInfosPanel,columnClasses,Class[],N,package);
Attribute(AboutJavaInfosPanel,columnNames,String[],N,package);
Attribute(AboutJavaInfosPanel,data,Vector,N,package);
Attribute(AboutJavaInfosPanel,language,GanttLanguage,N,private);
Attribute(AboutJavaInfosPanel,name,String,N,private);
Attribute(AboutJavaInfosPanel,value,String,N,private);
Class(AboutJavaInfosPanel,N,N,public);
Generalisation(AboutJavaInfosPanel,AbstractTableModel);
Generalisation(AboutJavaInfosPanel,GeneralOptionPanel);
Method(AboutJavaInfosPanel,AboutJavaInfosPanel,N,Y,N,N,public);
Method(AboutJavaInfosPanel,SystemInfo,N,Y,N,N,public);
Method(AboutJavaInfosPanel,addField,void,Y,N,N,public);
Method(AboutJavaInfosPanel,applyChanges,boolean,Y,N,N,public);
Method(AboutJavaInfosPanel,getColumnClass,Class,Y,N,N,public);
Method(AboutJavaInfosPanel,getColumnCount,int,N,N,N,public);
Method(AboutJavaInfosPanel,getColumnName,String,Y,N,N,public);
Method(AboutJavaInfosPanel,getName,String,N,N,N,public);
Method(AboutJavaInfosPanel,getRowCount,int,N,N,N,public);
Method(AboutJavaInfosPanel,getValue,String,N,N,N,public);
Method(AboutJavaInfosPanel,getValueAt,Object,Y,N,N,public);
Method(AboutJavaInfosPanel,initialize,void,N,N,N,public);
Method(AboutJavaInfosPanel,isCellEditable,boolean,Y,N,N,public);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,iIterator,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,infosPanelJPanel,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,jTablePropertiesJTable,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,modelpropertiesAboutFieldTableModel,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,parent,GanttProject,declaration);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,propString,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,propsEnumeration,local);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,sSortedSet,local);
Parameter(AboutJavaInfosPanel,SystemInfo,name,String,declaration);
Parameter(AboutJavaInfosPanel,SystemInfo,value,String,declaration);
Parameter(AboutJavaInfosPanel,addField,w,SystemInfo,declaration);
Parameter(AboutJavaInfosPanel,applyChanges,askForApply,boolean,declaration);
Parameter(AboutJavaInfosPanel,getColumnClass,c,int,declaration);
Parameter(AboutJavaInfosPanel,getColumnName,col,int,declaration);
Parameter(AboutJavaInfosPanel,getValueAt,col,int,declaration);
Parameter(AboutJavaInfosPanel,getValueAt,infoSystemInfo,local);
Parameter(AboutJavaInfosPanel,getValueAt,row,int,declaration);
Parameter(AboutJavaInfosPanel,isCellEditable,col,int,declaration);
Parameter(AboutJavaInfosPanel,isCellEditable,row,int,declaration);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;add,Container,Component);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;add,Container,Component-Object);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;add,Set,Object);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;addField,AboutFieldTableModel,SystemInfo);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getInstance,GanttLanguage,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getMessage,Throwable,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getProperties,System,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getProperty,System,String);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;getText,GanttLanguage,String);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;hasMoreElements,Enumeration,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;hasNext,Iterator,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;iterator,Set,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;next,Iterator,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;nextElement,Enumeration,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;println,PrintStream,String);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;propertyNames,Properties,N);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;setModel,JTable,TableModel);
Relation(AboutJavaInfosPanel;AboutJavaInfosPanel;setPreferredSize,JComponent,Dimension);
Relation(AboutJavaInfosPanel;NgetInstance,GanttLanguage,N);
Relation(AboutJavaInfosPanel;NgetText,GanttLanguage,String);
Relation(AboutJavaInfosPanel;addField;addElement,Vector,Object);
Relation(AboutJavaInfosPanel;addField;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(AboutJavaInfosPanel;addField;size,Vector,N);
Relation(AboutJavaInfosPanel;getRowCount;size,Vector,N);
Relation(AboutJavaInfosPanel;getValueAt;elementAt,Vector,int);
Relation(AboutJavaInfosPanel;getValueAt;getName,SystemInfo,N);
Relation(AboutJavaInfosPanel;getValueAt;getValue,SystemInfo,N);
end b156
start b157
Attribute(GanttProject,myFacadeInvalidator,FacadeInvalidator,N,private);
Class(FacadeInvalidator,N,static,private);
Relation(GanttProject;GanttProject;isValid,FacadeInvalidator,N);
Relation(GanttProject;GanttProject;reset,FacadeInvalidator,N);
end b157
start b158
Class(AuthorsInfo,N,N,package);
Parameter(AboutAuthorPanel,addField,w,AuthorsInfo,declaration);
Parameter(AboutAuthorPanel,getValueAt,infoAuthorsInfo,local);
Relation(AboutAuthorPanel;AboutAuthorPanel;addField,AuthorsFieldTableModel,AuthorsInfo);
Relation(AboutAuthorPanel;getValueAt;getMail,AuthorsInfo,N);
Relation(AboutAuthorPanel;getValueAt;getName,AuthorsInfo,N);
end b158
start b159
Attribute(FramerImpl,myCalendarField,int,N,private);
Class(FramerImpl,N,N,package);
Method(FramerImpl,FramerImpl,N,Y,N,N,public);
Method(FramerImpl,adjustLeft,Date,Y,N,N,public);
Method(FramerImpl,adjustRight,Date,Y,N,N,public);
Method(FramerImpl,clearFields,void,Y,N,N,private);
Method(FramerImpl,jumpLeft,Date,Y,N,N,public);
Parameter(FramerImpl,FramerImpl,calendarField,int,declaration);
Parameter(FramerImpl,adjustLeft,baseDate,Date,declaration);
Parameter(FramerImpl,adjustLeft,beforeClearDate,local);
Parameter(FramerImpl,adjustLeft,cCalendar,local);
Parameter(FramerImpl,adjustRight,baseDate,Date,declaration);
Parameter(FramerImpl,adjustRight,cCalendar,local);
Parameter(FramerImpl,clearFields,c,Calendar,declaration);
Parameter(FramerImpl,jumpLeft,baseDate,Date,declaration);
Parameter(FramerImpl,jumpLeft,cCalendar,local);
Relation(FramerImpl;adjustLeft;clearFields,FramerImpl,Calendar);
Relation(FramerImpl;adjustLeft;clone,Calendar,N);
Relation(FramerImpl;adjustLeft;getInstance,Calendar,N);
Relation(FramerImpl;adjustLeft;getTime,Calendar,N);
Relation(FramerImpl;adjustLeft;setTime,Calendar,Date);
Relation(FramerImpl;adjustRight;add,Calendar,int-int);
Relation(FramerImpl;adjustRight;clearFields,FramerImpl,Calendar);
Relation(FramerImpl;adjustRight;clone,Calendar,N);
Relation(FramerImpl;adjustRight;getInstance,Calendar,N);
Relation(FramerImpl;adjustRight;getTime,Calendar,N);
Relation(FramerImpl;adjustRight;setTime,Calendar,Date);
Relation(FramerImpl;clearFields;clear,Calendar,int);
Relation(FramerImpl;jumpLeft;add,Calendar,int-int);
Relation(FramerImpl;jumpLeft;clone,Calendar,N);
Relation(FramerImpl;jumpLeft;getInstance,Calendar,N);
Relation(FramerImpl;jumpLeft;getTime,Calendar,N);
Relation(FramerImpl;jumpLeft;setTime,Calendar,Date);
end b159
start b160
Attribute(AboutAuthorPanel,columnClasses,Class[],N,package);
Attribute(AboutAuthorPanel,columnNames,String[],N,package);
Attribute(AboutAuthorPanel,data,Vector,N,package);
Attribute(AboutAuthorPanel,language,GanttLanguage,N,private);
Attribute(AboutAuthorPanel,mail,String,N,private);
Attribute(AboutAuthorPanel,name,String,N,private);
Class(AboutAuthorPanel,N,N,public);
Generalisation(AboutAuthorPanel,AbstractTableModel);
Generalisation(AboutAuthorPanel,GeneralOptionPanel);
Method(AboutAuthorPanel,AboutAuthorPanel,N,Y,N,N,public);
Method(AboutAuthorPanel,AuthorsInfo,N,Y,N,N,public);
Method(AboutAuthorPanel,addField,void,Y,N,N,public);
Method(AboutAuthorPanel,applyChanges,boolean,Y,N,N,public);
Method(AboutAuthorPanel,getColumnClass,Class,Y,N,N,public);
Method(AboutAuthorPanel,getColumnCount,int,N,N,N,public);
Method(AboutAuthorPanel,getColumnName,String,Y,N,N,public);
Method(AboutAuthorPanel,getMail,String,N,N,N,public);
Method(AboutAuthorPanel,getName,String,N,N,N,public);
Method(AboutAuthorPanel,getRowCount,int,N,N,N,public);
Method(AboutAuthorPanel,getValueAt,Object,Y,N,N,public);
Method(AboutAuthorPanel,initialize,void,N,N,N,public);
Method(AboutAuthorPanel,isCellEditable,boolean,Y,N,N,public);
Parameter(AboutAuthorPanel,AboutAuthorPanel,authorsPanelJPanel,local);
Parameter(AboutAuthorPanel,AboutAuthorPanel,jTableAuthorsJTable,local);
Parameter(AboutAuthorPanel,AboutAuthorPanel,modelauthorsAuthorsFieldTableModel,local);
Parameter(AboutAuthorPanel,AboutAuthorPanel,parent,GanttProject,declaration);
Parameter(AboutAuthorPanel,AuthorsInfo,mail,String,declaration);
Parameter(AboutAuthorPanel,AuthorsInfo,name,String,declaration);
Parameter(AboutAuthorPanel,addField,w,AuthorsInfo,declaration);
Parameter(AboutAuthorPanel,applyChanges,askForApply,boolean,declaration);
Parameter(AboutAuthorPanel,getColumnClass,c,int,declaration);
Parameter(AboutAuthorPanel,getColumnName,col,int,declaration);
Parameter(AboutAuthorPanel,getValueAt,col,int,declaration);
Parameter(AboutAuthorPanel,getValueAt,infoAuthorsInfo,local);
Parameter(AboutAuthorPanel,getValueAt,row,int,declaration);
Parameter(AboutAuthorPanel,isCellEditable,col,int,declaration);
Parameter(AboutAuthorPanel,isCellEditable,row,int,declaration);
Relation(AboutAuthorPanel;AboutAuthorPanel;add,Container,Component);
Relation(AboutAuthorPanel;AboutAuthorPanel;add,Container,Component-Object);
Relation(AboutAuthorPanel;AboutAuthorPanel;addField,AuthorsFieldTableModel,AuthorsInfo);
Relation(AboutAuthorPanel;AboutAuthorPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(AboutAuthorPanel;AboutAuthorPanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutAuthorPanel;AboutAuthorPanel;getInstance,GanttLanguage,N);
Relation(AboutAuthorPanel;AboutAuthorPanel;getText,GanttLanguage,String);
Relation(AboutAuthorPanel;AboutAuthorPanel;setModel,JTable,TableModel);
Relation(AboutAuthorPanel;AboutAuthorPanel;setPreferredSize,JComponent,Dimension);
Relation(AboutAuthorPanel;NgetInstance,GanttLanguage,N);
Relation(AboutAuthorPanel;NgetText,GanttLanguage,String);
Relation(AboutAuthorPanel;addField;addElement,Vector,Object);
Relation(AboutAuthorPanel;addField;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(AboutAuthorPanel;addField;size,Vector,N);
Relation(AboutAuthorPanel;getRowCount;size,Vector,N);
Relation(AboutAuthorPanel;getValueAt;elementAt,Vector,int);
Relation(AboutAuthorPanel;getValueAt;getMail,AuthorsInfo,N);
Relation(AboutAuthorPanel;getValueAt;getName,AuthorsInfo,N);
end b160
start b161
Attribute(ProjectNamePage,myI18N,I18N,N,private);
Attribute(ProjectNamePage,myProjectSettingsPanel,ProjectSettingsPanel,N,private);
Class(ProjectNamePage,N,N,public);
Method(ProjectNamePage,ProjectNamePage,N,Y,N,N,public);
Method(ProjectNamePage,getComponent,Component,N,N,N,public);
Method(ProjectNamePage,getTitle,String,N,N,N,public);
Method(ProjectNamePage,setActive,void,Y,N,N,public);
Parameter(ProjectNamePage,ProjectNamePage,i18n,I18N,declaration);
Parameter(ProjectNamePage,ProjectNamePage,owner,Frame,declaration);
Parameter(ProjectNamePage,ProjectNamePage,project,IGanttProject,declaration);
Parameter(ProjectNamePage,setActive,active,boolean,declaration);
Relation(ProjectNamePage;getTitle;getNewProjectWizardWindowTitle,I18N,N);
Relation(ProjectNamePage;setActive;applyChanges,ProjectSettingsPanel,boolean);
end b161
start b162
Class(AboutDialog,N,N,public);
Generalisation(AboutDialog,GeneralDialog);
Method(AboutDialog,AboutDialog,N,Y,N,N,public);
Method(AboutDialog,constructSections,void,N,N,N,public);
Method(AboutDialog,valueChanged,void,Y,N,N,public);
Parameter(AboutDialog,AboutDialog,parent,GanttProject,declaration);
Parameter(AboutDialog,constructSections,aboutNodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,constructSections,authorsNodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,constructSections,jinfosNodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,constructSections,libraryNodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,constructSections,licenseNodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,valueChanged,e,TreeSelectionEvent,declaration);
Parameter(AboutDialog,valueChanged,nodeDefaultMutableTreeNode,local);
Parameter(AboutDialog,valueChanged,sNodeString,local);
Parameter(AboutDialog,valueChanged,vbBox,local);
Parameter(GanttProject,actionPerformed,agpAboutDialog,local);
Relation(AboutDialog;AboutDialog;correctLabel,GanttProject,String);
Relation(AboutDialog;AboutDialog;getInstance,GanttLanguage,N);
Relation(AboutDialog;AboutDialog;getText,GanttLanguage,String);
Relation(AboutDialog;AboutDialog;hide,Component,N);
Relation(AboutDialog;constructSections;addObject,GeneralDialog,Object-DefaultMutableTreeNode);
Relation(AboutDialog;constructSections;correctLabel,GanttProject,String);
Relation(AboutDialog;constructSections;getText,GanttLanguage,String);
Relation(AboutDialog;valueChanged;add,Container,Component);
Relation(AboutDialog;valueChanged;add,Container,Component-int);
Relation(AboutDialog;valueChanged;correctLabel,GanttProject,String);
Relation(AboutDialog;valueChanged;createVerticalBox,Box,N);
Relation(AboutDialog;valueChanged;equals,String,Object);
Relation(AboutDialog;valueChanged;getComment,GeneralOptionPanel,N);
Relation(AboutDialog;valueChanged;getLastPathComponent,TreePath,N);
Relation(AboutDialog;valueChanged;getPath,TreeSelectionEvent,N);
Relation(AboutDialog;valueChanged;getText,GanttLanguage,String);
Relation(AboutDialog;valueChanged;getTitle,GeneralOptionPanel,N);
Relation(AboutDialog;valueChanged;getUserObject,DefaultMutableTreeNode,N);
Relation(AboutDialog;valueChanged;initialize,GeneralOptionPanel,N);
Relation(AboutDialog;valueChanged;remove,Container,int);
Relation(AboutDialog;valueChanged;repaint,Component,N);
Relation(AboutDialog;valueChanged;validate,Container,N);
end b162
start b163
Attribute(ChartModelImpl,myChartHeader,ChartHeader,N,private);
Class(ChartHeader,N,N,public);
Method(ChartHeader,paint,void,Y,N,N,package);
Method(ChartModel,getChartHeader,ChartHeader,N,N,N,package);
Method(ChartModelImpl,getChartHeader,ChartHeader,N,N,N,public);
Parameter(ChartHeader,paint,g,Graphics,declaration);
Relation(GanttGraphicArea;paintCalendar2New;paint,ChartHeader,Graphics);
end b163
start b164
Attribute(BrowserControl,MAC_CMDLINE,String[],static,private);
Attribute(BrowserControl,MAC_ID,int,static,private);
Attribute(BrowserControl,MAC_PREFIX,String,static,private);
Attribute(BrowserControl,OTHER_CMDLINES,String[][],static,private);
Attribute(BrowserControl,OTHER_FALLBACKS,String[][],static,private);
Attribute(BrowserControl,OTHER_ID,int,static,private);
Attribute(BrowserControl,URLTOKEN,String,static,private);
Attribute(BrowserControl,WIN_CMDLINE,String[],static,private);
Attribute(BrowserControl,WIN_ID,int,static,private);
Attribute(BrowserControl,WIN_PREFIX,String,static,private);
Class(BrowserControl,N,N,public);
Method(BrowserControl,connectStringArray,String,Y,N,static,private);
Method(BrowserControl,displayURL,boolean,Y,N,static,public);
Method(BrowserControl,getPlatform,int,N,N,static,private);
Method(BrowserControl,replaceToken,String[],Y,N,static,private);
Method(BrowserControl,runCmdLine,boolean,Y,N,static,private);
Parameter(BrowserControl,connectStringArray,a,String[],declaration);
Parameter(BrowserControl,connectStringArray,sString,local);
Parameter(BrowserControl,displayURL,basSerClassClass,local);
Parameter(BrowserControl,displayURL,basicServiceObject,local);
Parameter(BrowserControl,displayURL,cmdString[],local);
Parameter(BrowserControl,displayURL,serManClassClass,local);
Parameter(BrowserControl,displayURL,stringParamClass[],local);
Parameter(BrowserControl,displayURL,url,String,declaration);
Parameter(BrowserControl,displayURL,urlParamClass[],local);
Parameter(BrowserControl,getPlatform,osString,local);
Parameter(BrowserControl,replaceToken,replacement,String,declaration);
Parameter(BrowserControl,replaceToken,resultString[],local);
Parameter(BrowserControl,replaceToken,target,String[],declaration);
Parameter(BrowserControl,replaceToken,token,String,declaration);
Parameter(BrowserControl,runCmdLine,cmdLine,String[],declaration);
Parameter(BrowserControl,runCmdLine,exitCodeint,local);
Parameter(BrowserControl,runCmdLine,fallBackCmdLine,String[],declaration);
Parameter(BrowserControl,runCmdLine,pProcess,local);
Relation(AboutPanel;AboutPanel;displayURL,BrowserControl,String);
Relation(BrowserControl;displayURL;forName,Class,String);
Relation(BrowserControl;displayURL;getMethod,Class,String-Class[]);
Relation(BrowserControl;displayURL;getPlatform,BrowserControl,N);
Relation(BrowserControl;displayURL;invoke,Method,Object-Object[]);
Relation(BrowserControl;displayURL;replaceToken,BrowserControl,String[]-String-String);
Relation(BrowserControl;displayURL;runCmdLine,BrowserControl,String[]);
Relation(BrowserControl;displayURL;runCmdLine,BrowserControl,String[]-String[]);
Relation(BrowserControl;getPlatform;getProperty,System,String);
Relation(BrowserControl;getPlatform;startsWith,String,String);
Relation(BrowserControl;replaceToken;replaceAll,String,String-String);
Relation(BrowserControl;runCmdLine;connectStringArray,BrowserControl,String[]);
Relation(BrowserControl;runCmdLine;exec,Runtime,String[]);
Relation(BrowserControl;runCmdLine;getRuntime,Runtime,N);
Relation(BrowserControl;runCmdLine;println,PrintStream,N);
Relation(BrowserControl;runCmdLine;println,PrintStream,String);
Relation(BrowserControl;runCmdLine;println,PrintStream,int);
Relation(BrowserControl;runCmdLine;runCmdLine,BrowserControl,String[]-String[]);
Relation(BrowserControl;runCmdLine;waitFor,Process,N);
Relation(GanttProject;openWebPage;displayURL,BrowserControl,String);
Relation(GanttResourcePanel;sendMail;displayURL,BrowserControl,String);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;displayURL,BrowserControl,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;displayURL,BrowserControl,String);
end b164
start b165
Attribute(GanttURLChooser,change,boolean,N,public);
Attribute(GanttURLChooser,fileurl,String,N,public);
Attribute(GanttURLChooser,language,GanttLanguage,N,package);
Attribute(GanttURLChooser,password,String,N,public);
Attribute(GanttURLChooser,passwordField,JPasswordField,N,private);
Attribute(GanttURLChooser,urlField,JTextField,N,private);
Attribute(GanttURLChooser,userName,String,N,public);
Attribute(GanttURLChooser,userNameField,JTextField,N,private);
Class(GanttURLChooser,N,N,public);
Generalisation(GanttURLChooser,JDialog);
Method(GanttURLChooser,GanttURLChooser,N,Y,N,N,public);
Method(GanttURLChooser,actionPerformed,void,Y,N,N,public);
Parameter(GanttProject,openURL,ucGanttURLChooser,local);
Parameter(GanttProject,saveAsURLProject,ucGanttURLChooser,local);
Parameter(GanttURLChooser,GanttURLChooser,cancelJButton,local);
Parameter(GanttURLChooser,GanttURLChooser,centerPanelJPanel,local);
Parameter(GanttURLChooser,GanttURLChooser,currentPass,String,declaration);
Parameter(GanttURLChooser,GanttURLChooser,currentURL,String,declaration);
Parameter(GanttURLChooser,GanttURLChooser,currentUser,String,declaration);
Parameter(GanttURLChooser,GanttURLChooser,hbBox,local);
Parameter(GanttURLChooser,GanttURLChooser,inputPanelJPanel,local);
Parameter(GanttURLChooser,GanttURLChooser,ivbeBox,local);
Parameter(GanttURLChooser,GanttURLChooser,ivbwBox,local);
Parameter(GanttURLChooser,GanttURLChooser,okJButton,local);
Parameter(GanttURLChooser,GanttURLChooser,opening,boolean,declaration);
Parameter(GanttURLChooser,GanttURLChooser,parent,GanttProject,declaration);
Parameter(GanttURLChooser,GanttURLChooser,sDefaultURLString,local);
Parameter(GanttURLChooser,GanttURLChooser,serverBoxBox,local);
Parameter(GanttURLChooser,GanttURLChooser,southPanelJPanel,local);
Parameter(GanttURLChooser,actionPerformed,evt,ActionEvent,declaration);
Relation(GanttURLChooser;GanttURLChooser;add,Container,Component);
Relation(GanttURLChooser;GanttURLChooser;add,Container,Component-Object);
Relation(GanttURLChooser;GanttURLChooser;addActionListener,AbstractButton,ActionListener);
Relation(GanttURLChooser;GanttURLChooser;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttURLChooser;GanttURLChooser;center,DialogAligner,JDialog-Container);
Relation(GanttURLChooser;GanttURLChooser;correctLabel,GanttProject,String);
Relation(GanttURLChooser;GanttURLChooser;createHorizontalBox,Box,N);
Relation(GanttURLChooser;GanttURLChooser;createVerticalBox,Box,N);
Relation(GanttURLChooser;GanttURLChooser;dispose,Window,N);
Relation(GanttURLChooser;GanttURLChooser;getComponentOrientation,GanttLanguage,N);
Relation(GanttURLChooser;GanttURLChooser;getContentPane,JDialog,N);
Relation(GanttURLChooser;GanttURLChooser;getInstance,GanttLanguage,N);
Relation(GanttURLChooser;GanttURLChooser;getParent,Component,N);
Relation(GanttURLChooser;GanttURLChooser;getPassword,JPasswordField,N);
Relation(GanttURLChooser;GanttURLChooser;getRootPane,JDialog,N);
Relation(GanttURLChooser;GanttURLChooser;getText,GanttLanguage,String);
Relation(GanttURLChooser;GanttURLChooser;getText,JTextComponent,N);
Relation(GanttURLChooser;GanttURLChooser;pack,Window,N);
Relation(GanttURLChooser;GanttURLChooser;setDefaultButton,JRootPane,JButton);
Relation(GanttURLChooser;GanttURLChooser;setResizable,Dialog,boolean);
Relation(GanttURLChooser;GanttURLChooser;setVisible,Dialog,boolean);
Relation(GanttURLChooser;NgetInstance,GanttLanguage,N);
end b165
start b166
Class(OkAction,N,N,public);
end b166
start b167
Attribute(TaskDependencyCollectionImpl,myCleanupMutation,MutationInfo,N,private);
Class(MutationInfo,N,static,private);
Parameter(ResourceAssignmentCollectionImpl,commit,nextMutationInfo,local);
Parameter(ResourceAssignmentCollectionImpl,deleteAssignment,infoMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,commit,nextMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,compareTo,rvalueMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,deleteDependency,infoMutationInfo,local);
end b167
start b168
Attribute(CommonPanel,myTask,Task,N,private);
Attribute(DependencyTableModel,myTask,Task,N,package);
Attribute(DependencyTableModel,myTask,Task,N,private);
Attribute(GanttDialogProperties,task,Task,N,private);
Attribute(GanttDialogProperties,ttask,Task,N,private);
Attribute(GanttProject,myRootTask,Task,N,private);
Attribute(Task,DEFAULT_COLOR,Color,N,package);
Attribute(TaskDependencyImpl,myDependant,Task,N,private);
Attribute(TaskDependencyImpl,myDependee,Task,N,private);
Attribute(TaskDependencySliceImpl,myTask,Task,N,private);
Attribute(TaskHierarchyEvent,myNewContainer,Task,N,private);
Attribute(TaskHierarchyEvent,myOldContainer,Task,N,private);
Attribute(TaskHierarchyEvent,myTask,Task,N,private);
Attribute(TaskHierarchyItem,myTask,Task,N,private);
Attribute(TaskManagerImpl,myRoot,Task,N,private);
Class(Task,N,N,public);
Method(CommonPanel,getTask,Task,N,N,N,protected);
Method(GanttProject,getContainer,Task,Y,N,N,public);
Method(GanttProject,getRoot,Task,N,N,N,public);
Method(GanttProject,newTask,Task,N,N,N,public);
Method(GanttTaskPropertiesBean,getReturnTask,Task,N,N,N,public);
Method(GanttTaskRelationship,getSuccessorTask,Task,N,N,N,public);
Method(GanttTree,getTask,Task,Y,N,N,public);
Method(IGanttProject,newTask,Task,N,N,N,package);
Method(ResourceAssignment,getTask,Task,N,N,N,package);
Method(ResourceAssignmentCollectionImpl,getTask,Task,N,N,N,private);
Method(ResourceAssignmentCollectionImpl,getTask,Task,N,N,N,public);
Method(Task,createMutator,TaskMutator,N,N,N,package);
Method(Task,getAssignmentCollection,ResourceAssignmentCollection,N,N,N,package);
Method(Task,getAssignments,ResourceAssignment[],N,N,N,package);
Method(Task,getColor,Color,N,N,N,package);
Method(Task,getCompletionPercentage,int,N,N,N,package);
Method(Task,getDependencies,TaskDependencySlice,N,N,N,package);
Method(Task,getDependenciesAsDependant,TaskDependencySlice,N,N,N,package);
Method(Task,getDependenciesAsDependee,TaskDependencySlice,N,N,N,package);
Method(Task,getDuration,TaskLength,N,N,N,package);
Method(Task,getEnd,GanttCalendar,N,N,N,package);
Method(Task,getExpand,boolean,N,N,N,package);
Method(Task,getManager,TaskManager,N,N,N,package);
Method(Task,getName,String,N,N,N,package);
Method(Task,getNestedTasks,Task[],N,N,N,package);
Method(Task,getNotes,String,N,N,N,package);
Method(Task,getPredecessors,GanttTaskRelationship[],N,N,N,package);
Method(Task,getPriority,int,N,N,N,package);
Method(Task,getShape,ShapePaint,N,N,N,package);
Method(Task,getStart,GanttCalendar,N,N,N,package);
Method(Task,getSuccessors,GanttTaskRelationship[],N,N,N,package);
Method(Task,getSupertask,Task,N,N,N,package);
Method(Task,getTaskID,int,N,N,N,package);
Method(Task,isMilestone,boolean,N,N,N,package);
Method(Task,isStartFixed,boolean,N,N,N,package);
Method(Task,move,void,Y,N,N,package);
Method(TaskContainmentHierarchyFacade,getContainer,Task,Y,N,N,package);
Method(TaskContainmentHierarchyFacade,getRoot,Task,N,N,N,package);
Method(TaskDependency,getDependant,Task,N,N,N,package);
Method(TaskDependency,getDependee,Task,N,N,N,package);
Method(TaskDependencyImpl,getDependant,Task,N,N,N,public);
Method(TaskDependencyImpl,getDependee,Task,N,N,N,public);
Method(TaskDependencySliceImpl,getTask,Task,N,N,N,protected);
Method(TaskHierarchyEvent,getNewContainer,Task,N,N,N,public);
Method(TaskHierarchyEvent,getOldContainer,Task,N,N,N,public);
Method(TaskHierarchyEvent,getTask,Task,N,N,N,public);
Method(TaskHierarchyItem,getTask,Task,N,N,N,public);
Method(TaskImpl,getSupertask,Task,N,N,N,public);
Method(TaskManager,getRootTask,Task,N,N,N,public);
Method(TaskManagerImpl,getContainer,Task,Y,N,N,public);
Method(TaskManagerImpl,getRoot,Task,N,N,N,public);
Method(TaskManagerImpl,getRootTask,Task,N,N,N,public);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskEnd,task,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,modifyTaskStart,task,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,nextNestedTask,local);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskSchedule,supertask,Task,declaration);
Parameter(AdjustTaskBoundsAlgorithm,recalculateSupertaskScheduleBottomUp,nextSupertaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,run,nextTaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,run,supertaskTask,local);
Parameter(AdjustTaskBoundsAlgorithm,run,task,Task,declaration);
Parameter(AllocationTagHandler,loadAllocation,taskTask,local);
Parameter(CommonPanel,CommonPanel,task,Task,declaration);
Parameter(DependencyTableModel,DependencyTableModel,task,Task,declaration);
Parameter(DependencyTableModel,TaskComboItem,task,Task,declaration);
Parameter(DependencyTableModel,createDependency,selectedTaskTask,local);
Parameter(DependencyTableModel,updateDependency,selectedTaskTask,local);
Parameter(DependencyTagHandler,parsingFinished,dependantTask,local);
Parameter(DependencyTagHandler,parsingFinished,dependeeTask,local);
Parameter(FindPossibleDependeesAlgorithm,run,dependant,Task,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,dependant,Task,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,nextTask,local);
Parameter(FindPossibleDependeesAlgorithmImpl,run,dependant,Task,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,run,rootTask,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependantTask,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependeeTask,local);
Parameter(FinishStartConstraintImpl,getCollision,dependantTask,local);
Parameter(FinishStartConstraintImpl,getCollision,dependeeTask,local);
Parameter(GanttDialogProperties,actionPerformed,returnTaskTask,local);
Parameter(GanttGraphicArea,adjustDependencies,task,Task,declaration);
Parameter(GanttGraphicArea,calcProjectBegAndEnd,taskTask,local);
Parameter(GanttGraphicArea,fitWholeProject,nextTask,local);
Parameter(GanttGraphicArea,getChart,nextTask,local);
Parameter(GanttGraphicArea,isVisible,taskFatherTask,local);
Parameter(GanttGraphicArea,isVisible,thetask,Task,declaration);
Parameter(GanttGraphicArea,paintATaskBilan,task,Task,declaration);
Parameter(GanttGraphicArea,paintATaskChild,task,Task,declaration);
Parameter(GanttGraphicArea,paintATaskFather,task,Task,declaration);
Parameter(GanttGraphicArea,paintDepend,task2Task,local);
Parameter(GanttGraphicArea,paintResources,task,Task,declaration);
Parameter(GanttGraphicArea,printTask,nextTask,local);
Parameter(GanttHTMLExport,writeTasks,tTask,local);
Parameter(GanttPDFExport,writeTasks,tTask,local);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,taskTask,local);
Parameter(GanttProject,actionPerformed,tTask,local);
Parameter(GanttProject,deleteTasks,ttaskTask,local);
Parameter(GanttProject,getContainer,nestedTask,Task,declaration);
Parameter(GanttProject,getNestedTasks,container,Task,declaration);
Parameter(GanttTaskRelationship,setPredecessorTask,predecessorTask,Task,declaration);
Parameter(GanttTaskRelationship,setSuccessorTask,successorTask,Task,declaration);
Parameter(GanttTree,addObjectWithExpand,taskFatherTask,local);
Parameter(GanttTree,addObjectWithExpand,taskTask,local);
Parameter(GanttTree,checkDepend,task1,Task,declaration);
Parameter(GanttTree,computePercentComplete,taskTask,local);
Parameter(GanttTree,dedentCurrentNodes,currentTask,local);
Parameter(GanttTree,expandRefresh,movedTaskTask,local);
Parameter(GanttTree,getAllChildTask,task,Task,declaration);
Parameter(GanttTree,getCellEditorValue,ganttTaskTask,local);
Parameter(GanttTree,getFatherNode,node,Task,declaration);
Parameter(GanttTree,getToolTip,task,Task,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,taskTask,local);
Parameter(GanttTree,indentCurrentNodes,currentTask,local);
Parameter(GanttTree,isDragAcceptable,taskTask,local);
Parameter(GanttTree,refreshAllFather,taskFatherTask,local);
Parameter(GanttTree,refreshAllFather,tmpTaskTask,local);
Parameter(GanttTree,treeCollapsed,taskTask,local);
Parameter(GanttTree,treeExpanded,taskTask,local);
Parameter(GanttTree,treeNodesInserted,taskTask,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,tTask,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,taskTask,local);
Parameter(GanttXMLOpen,characters,taskTask,local);
Parameter(GanttXMLSaver,writeAllocations,taskTask,local);
Parameter(GanttXMLSaver,writeTask,task2Task,local);
Parameter(MutableTaskDependencyCollection,createDependency,dependant,Task,declaration);
Parameter(MutableTaskDependencyCollection,createDependency,dependee,Task,declaration);
Parameter(RangeSearchFromKey,RangeSearchFromKey,task,Task,declaration);
Parameter(RangeSearchToKey,RangeSearchToKey,task,Task,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,nextTask,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,task,Task,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp,task,Task,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,run,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,changedTask,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,buildDistanceGraph,dependantTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,dependantTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,isMarked,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,markTask,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskEnd,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,modifyTaskStart,task,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,run,changedTask,Task,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,run,nextTask,local);
Parameter(RecalculateTaskScheduleAlgorithm,traverse,root,Task,declaration);
Parameter(ResourceLoadGraphicArea,calculateLoad,taskTask,local);
Parameter(ResourceLoadGraphicArea,paintLoads,taskTask,local);
Parameter(SearchKey,SearchKey,firstTaskTask,local);
Parameter(SearchKey,SearchKey,secondTaskTask,local);
Parameter(StartFinishConstraintImpl,getCollision,dependantTask,local);
Parameter(StartFinishConstraintImpl,getCollision,dependeeTask,local);
Parameter(StartStartConstraintImpl,getCollision,dependantTask,local);
Parameter(StartStartConstraintImpl,getCollision,dependeeTask,local);
Parameter(Task,move,targetSupertask,Task,declaration);
Parameter(TaskAllocationsPanel,TaskAllocationsPanel,task,Task,declaration);
Parameter(TaskContainmentHierarchyFacade,getContainer,nestedTask,Task,declaration);
Parameter(TaskContainmentHierarchyFacade,getNestedTasks,container,Task,declaration);
Parameter(TaskDependenciesPanel,TaskDependenciesPanel,task,Task,declaration);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,nextTask,local);
Parameter(TaskDependencyCollection,getDependencies,task,Task,declaration);
Parameter(TaskDependencyCollection,getDependenciesAsDependant,dependant,Task,declaration);
Parameter(TaskDependencyCollection,getDependenciesAsDependee,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,createDependency,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,createDependency,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependencies,task,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,dependee,Task,declaration);
Parameter(TaskDependencyImpl,TaskDependencyImpl,dependant,Task,declaration);
Parameter(TaskDependencyImpl,TaskDependencyImpl,dependee,Task,declaration);
Parameter(TaskDependencySliceAsDependant,TaskDependencySliceAsDependant,task,Task,declaration);
Parameter(TaskDependencySliceAsDependee,TaskDependencySliceAsDependee,task,Task,declaration);
Parameter(TaskDependencySliceImpl,TaskDependencySliceImpl,task,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myNewContainer,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myOldContainer,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myTask,Task,declaration);
Parameter(TaskHierarchyItem,TaskHierarchyItem,myTask,Task,declaration);
Parameter(TaskHierarchyManagerImpl,createItem,task,Task,declaration);
Parameter(TaskImpl,move,targetSupertask,Task,declaration);
Parameter(TaskManager,registerTask,task,Task,declaration);
Parameter(TaskManagerImpl,FacadeImpl,root,Task,declaration);
Parameter(TaskManagerImpl,fireTaskAdded,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,oldSupertask,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,changedTask,Task,declaration);
Parameter(TaskManagerImpl,getContainer,nestedTask,Task,declaration);
Parameter(TaskManagerImpl,getNestedTasks,container,Task,declaration);
Parameter(TaskManagerImpl,registerTask,task,Task,declaration);
Parameter(TaskManagerImpl,setTask,task,Task,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,source,Task,declaration);
Relation(AdjustTaskBoundsAlgorithm;modifyTaskStart;getDuration,Task,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getEnd,Task,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;getStart,Task,N);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskEnd,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskSchedule;modifyTaskStart,AdjustTaskBoundsAlgorithm,Task-GanttCalendar);
Relation(AdjustTaskBoundsAlgorithm;recalculateSupertaskScheduleBottomUp;recalculateSupertaskSchedule,AdjustTaskBoundsAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(AdjustTaskBoundsAlgorithm;run;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(AllocationTagHandler;loadAllocation;getAssignmentCollection,Task,N);
Relation(CommonPanel;setupCommonFields;getDuration,Task,N);
Relation(CommonPanel;setupCommonFields;getName,Task,N);
Relation(DependencyTableModel;DependencyTableModel;getDependenciesAsDependant,Task,N);
Relation(DependencyTableModel;DependencyTableModel;getManager,Task,N);
Relation(DependencyTableModel;TaskComboItem;getTaskID,Task,N);
Relation(DependencyTableModel;createDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;getValueAt;getTaskID,Task,N);
Relation(DependencyTableModel;updateDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTagHandler;parsingFinished;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;processTask,FindPossibleDependeesAlgorithmImpl,Task[]-Task-ArrayList);
Relation(FindPossibleDependeesAlgorithmImpl;run;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;run;processTask,FindPossibleDependeesAlgorithmImpl,Task[]-Task-ArrayList);
Relation(FinishFinishConstraintImpl;getCollision;getDuration,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;getEnd,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;getStart,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(FinishStartConstraintImpl;getCollision;getEnd,Task,N);
Relation(FinishStartConstraintImpl;getCollision;getStart,Task,N);
Relation(FinishStartConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(GanttDialogProperties;actionPerformed;getTaskID,Task,N);
Relation(GanttDialogProperties;getTaskManager;getManager,Task,N);
Relation(GanttGraphicArea;GanttGraphicArea;adjustDependencies,,Task);
Relation(GanttGraphicArea;GanttGraphicArea;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttGraphicArea;GanttGraphicArea;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttGraphicArea;GanttGraphicArea;run,RecalculateTaskScheduleAlgorithm,Task);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getEnd,Task,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getStart,Task,N);
Relation(GanttGraphicArea;fitWholeProject;getEnd,Task,N);
Relation(GanttGraphicArea;fitWholeProject;getStart,Task,N);
Relation(GanttGraphicArea;fitWholeProject;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;getChart;getName,Task,N);
Relation(GanttGraphicArea;getChart;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;isVisible;getExpand,Task,N);
Relation(GanttGraphicArea;isVisible;getFatherNode,GanttTree,Task);
Relation(GanttGraphicArea;paintATaskBilan;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskBilan;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintATaskChild;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskChild;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintATaskFather;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskFather;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintDepend;getTaskID,Task,N);
Relation(GanttGraphicArea;paintDepend;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;paintResources;getAssignments,Task,N);
Relation(GanttGraphicArea;paintTasks;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;paintTasks;paintATaskBilan,GanttGraphicArea,Graphics-int-int-Task);
Relation(GanttGraphicArea;paintTasks;paintATaskChild,GanttGraphicArea,Graphics-int-int-int-Task);
Relation(GanttGraphicArea;paintTasks;paintATaskFather,GanttGraphicArea,Graphics-int-int-int-Task);
Relation(GanttGraphicArea;printTask;getName,Task,N);
Relation(GanttGraphicArea;printTask;isVisible,GanttGraphicArea,Task);
Relation(GanttHTMLExport;writeTasks;getAssignments,Task,N);
Relation(GanttHTMLExport;writeTasks;getCompletionPercentage,Task,N);
Relation(GanttHTMLExport;writeTasks;getEnd,Task,N);
Relation(GanttHTMLExport;writeTasks;getManager,Task,N);
Relation(GanttHTMLExport;writeTasks;getName,Task,N);
Relation(GanttHTMLExport;writeTasks;getNotes,Task,N);
Relation(GanttHTMLExport;writeTasks;getStart,Task,N);
Relation(GanttHTMLExport;writeTasks;isMilestone,Task,N);
Relation(GanttPDFExport;writeTasks;getAssignments,Task,N);
Relation(GanttPDFExport;writeTasks;getColor,Task,N);
Relation(GanttPDFExport;writeTasks;getCompletionPercentage,Task,N);
Relation(GanttPDFExport;writeTasks;getEnd,Task,N);
Relation(GanttPDFExport;writeTasks;getManager,Task,N);
Relation(GanttPDFExport;writeTasks;getNotes,Task,N);
Relation(GanttPDFExport;writeTasks;getStart,Task,N);
Relation(GanttPDFExport;writeTasks;isMilestone,Task,N);
Relation(GanttProject;deleteTasks;getFatherNode,GanttTree,Task);
Relation(GanttProject;deleteTasks;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttProject;linkRelationships;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttProject;newTask;registerTask,TaskManager,Task);
Relation(GanttProject;newTask;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttProject;newTask;run,RecalculateTaskCompletionPercentageAlgorithm,Task);
Relation(GanttTXTOpen;load;registerTask,TaskManager,Task);
Relation(GanttTask;getPredecessorsOld;getTaskID,Task,N);
Relation(GanttTask;getSuccessorsOld;getTaskID,Task,N);
Relation(GanttTaskRelationship;setPredecessorTask;getTaskID,Task,N);
Relation(GanttTaskRelationship;setSuccessorTask;getTaskID,Task,N);
Relation(GanttTree;addObjectWithExpand;getExpand,Task,N);
Relation(GanttTree;checkDepend;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttTree;checkDepend;getAllChildTask,GanttTree,Task);
Relation(GanttTree;checkDepend;getTaskID,Task,N);
Relation(GanttTree;cutSelectedNode;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttTree;expandRefresh;getExpand,Task,N);
Relation(GanttTree;getAllChildTask;getTaskID,Task,N);
Relation(GanttTree;getFatherNode;getTaskID,Task,N);
Relation(GanttTree;getNode;getTaskID,Task,N);
Relation(GanttTree;getToolTip;getAssignments,Task,N);
Relation(GanttTree;getToolTip;getEnd,Task,N);
Relation(GanttTree;getToolTip;getNotes,Task,N);
Relation(GanttTree;getToolTip;getPriority,Task,N);
Relation(GanttTree;getToolTip;getStart,Task,N);
Relation(GanttTree;getTreeCellRendererComponent;getPriority,Task,N);
Relation(GanttTree;getTreeCellRendererComponent;getToolTip,GanttTreeCellRenderer,Task-int);
Relation(GanttTree;getTreeCellRendererComponent;isMilestone,Task,N);
Relation(GanttTree;insertClonedNode;registerTask,TaskManager,Task);
Relation(GanttTree;isDragAcceptable;isMilestone,Task,N);
Relation(GanttTree;refreshAllFather;getFatherNode,GanttTree,Task);
Relation(GanttXFIGSaver;getTaskTextWidth;getName,Task,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;getEnd,Task,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;getStart,Task,N);
Relation(GanttXMLOpen;startElement;registerTask,TaskManager,Task);
Relation(GanttXMLSaver;writeAllocations;getAssignments,Task,N);
Relation(GanttXMLSaver;writeAllocations;getTaskID,Task,N);
Relation(RangeSearchFromKey;RangeSearchFromKey;getTaskID,Task,N);
Relation(RangeSearchToKey;RangeSearchToKey;getTaskID,Task,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getCompletionPercentage,Task,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getDuration,Task,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;recalculateSupertaskCompletionPercentage,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(RecalculateTaskCompletionPercentageAlgorithm;run;recalculateSupertaskCompletionPercentageBottomUp,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;getDependenciesAsDependee,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getDependenciesAsDependant,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getStart,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;modifyTaskStart,RecalculateTaskScheduleAlgorithm,Task-GanttCalendar);
Relation(RecalculateTaskScheduleAlgorithm;modifyTaskStart;getDuration,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;run;buildDistanceGraph,RecalculateTaskScheduleAlgorithm,Task);
Relation(RecalculateTaskScheduleAlgorithm;run;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
Relation(RecalculateTaskScheduleAlgorithm;traverse;getDependenciesAsDependant,Task,N);
Relation(RecalculateTaskScheduleAlgorithm;traverse;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskScheduleAlgorithm;traverse;traverse,RecalculateTaskScheduleAlgorithm,TaskContainmentHierarchyFacade-Task-Set);
Relation(ResourceLoadGraphicArea;calculateLoad;getAssignments,Task,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getEnd,Task,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getStart,Task,N);
Relation(ResourceLoadGraphicArea;paintLoads;getEnd,Task,N);
Relation(ResourceLoadGraphicArea;paintLoads;getStart,Task,N);
Relation(SearchKey;SearchKey;getTaskID,Task,N);
Relation(StartFinishConstraintImpl;getCollision;getDuration,Task,N);
Relation(StartFinishConstraintImpl;getCollision;getEnd,Task,N);
Relation(StartFinishConstraintImpl;getCollision;getStart,Task,N);
Relation(StartFinishConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(StartStartConstraintImpl;getCollision;getStart,Task,N);
Relation(StartStartConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(TaskAllocationsPanel;getComponent;getAssignmentCollection,Task,N);
Relation(TaskDependenciesPanel;TaskDependenciesPanel;getManager,Task,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;run,FindPossibleDependeesAlgorithm,Task);
Relation(TaskDependencyCollectionImpl;createDependency;auxCreateDependency,TaskDependencyCollectionImpl,Task-Task);
Relation(TaskDependencyCollectionImpl;delete;getTaskID,Task,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependant;getTaskID,Task,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependee;getTaskID,Task,N);
Relation(TaskDependencySliceAsDependant;toArray;getDependenciesAsDependant,TaskDependencyCollection,Task);
Relation(TaskDependencySliceAsDependee;toArray;getDependenciesAsDependee,TaskDependencyCollection,Task);
Relation(TaskDependencySliceImpl;toArray;getDependencies,TaskDependencyCollection,Task);
Relation(TaskImpl;TaskImpl;createItem,TaskHierarchyManagerImpl,Task);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskManagerImpl;createTask;fireTaskAdded,TaskManagerImpl,Task);
Relation(TaskManagerImpl;createTask;move,TaskImpl,Task);
Relation(TaskManagerImpl;fireTaskAdded;getSupertask,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getEnd,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getStart,Task,N);
Relation(TaskManagerImpl;getContainer;getSupertask,Task,N);
Relation(TaskManagerImpl;getNestedTasks;getNestedTasks,Task,N);
Relation(TaskManagerImpl;registerTask;getTaskID,Task,N);
Relation(TaskManagerImpl;setTask;getTaskID,Task,N);
Relation(TaskTagHandler;loadTask;registerTask,TaskManager,Task);
end b168
start b169
Class(ParameterizedTimeUnitImpl,N,N,private);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getDirectAtomCount,ParameterizedTimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getDirectAtomUnit,ParameterizedTimeUnitImpl,N);
end b169
start b170
Attribute(GanttTaskPropertiesBean,myAllocationsPanel,TaskAllocationsPanel,N,private);
Attribute(TaskAllocationsPanel,myHRManager,HumanResourceManager,N,private);
Attribute(TaskAllocationsPanel,myResourcesTableModel,ResourcesTableModel,N,private);
Attribute(TaskAllocationsPanel,resourcesPanel,JPanel,N,private);
Attribute(TaskAllocationsPanel,resourcesScrollPane,JScrollPane,N,private);
Attribute(TaskAllocationsPanel,resourcesTable,JTable,N,private);
Class(TaskAllocationsPanel,N,N,public);
Generalisation(TaskAllocationsPanel,CommonPanel);
Method(TaskAllocationsPanel,TaskAllocationsPanel,N,Y,N,N,public);
Method(TaskAllocationsPanel,actionPerformed,void,Y,N,N,public);
Method(TaskAllocationsPanel,constructResourcesPanel,void,Y,N,N,private);
Method(TaskAllocationsPanel,getComponent,JPanel,N,N,N,public);
Method(TaskAllocationsPanel,getTableModel,ResourcesTableModel,N,N,N,public);
Method(TaskAllocationsPanel,setUpResourcesComboColumn,void,Y,N,N,private);
Parameter(TaskAllocationsPanel,TaskAllocationsPanel,hrManager,HumanResourceManager,declaration);
Parameter(TaskAllocationsPanel,TaskAllocationsPanel,task,Task,declaration);
Parameter(TaskAllocationsPanel,actionPerformed,evt,ActionEvent,declaration);
Parameter(TaskAllocationsPanel,constructResourcesPanel,assignments,ResourceAssignmentCollection,declaration);
Parameter(TaskAllocationsPanel,constructResourcesPanel,bremoveJButton,local);
Parameter(TaskAllocationsPanel,constructResourcesPanel,commonFieldsJPanel,local);
Parameter(TaskAllocationsPanel,constructResourcesPanel,gbcGridBagConstraints,local);
Parameter(TaskAllocationsPanel,constructResourcesPanel,secondResourcesScrollPaneJPanel,local);
Parameter(TaskAllocationsPanel,constructResourcesPanel,selectedRowint[],local);
Parameter(TaskAllocationsPanel,setUpResourcesComboColumn,comboBoxJComboBox,local);
Parameter(TaskAllocationsPanel,setUpResourcesComboColumn,resourceTable,JTable,declaration);
Parameter(TaskAllocationsPanel,setUpResourcesComboColumn,resourcesArrayList,local);
Parameter(TaskAllocationsPanel,setUpResourcesComboColumn,resourcesColumnTableColumn,local);
Relation(GanttTaskPropertiesBean;constructResourcesPanel;getComponent,TaskAllocationsPanel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getTableModel,TaskAllocationsPanel,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;add,Container,Component);
Relation(TaskAllocationsPanel;constructResourcesPanel;add,Container,Component-Object);
Relation(TaskAllocationsPanel;constructResourcesPanel;addActionListener,AbstractButton,ActionListener);
Relation(TaskAllocationsPanel;constructResourcesPanel;addUsingGBL,CommonPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(TaskAllocationsPanel;constructResourcesPanel;correctLabel,GanttProject,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;getClass,Object,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;getColumn,TableColumnModel,int);
Relation(TaskAllocationsPanel;constructResourcesPanel;getColumnModel,JTable,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;getLanguage,CommonPanel,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;getModel,JTable,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;getResource,Class<>,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;getSelectedRows,JTable,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;getText,GanttLanguage,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;getToolTip,GanttProject,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;setBorder,JComponent,Border);
Relation(TaskAllocationsPanel;constructResourcesPanel;setPreferredSize,JComponent,Dimension);
Relation(TaskAllocationsPanel;constructResourcesPanel;setPreferredWidth,TableColumn,int);
Relation(TaskAllocationsPanel;constructResourcesPanel;setRowHeight,JTable,int);
Relation(TaskAllocationsPanel;constructResourcesPanel;setToolTipText,JComponent,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;setUpResourcesComboColumn,TaskAllocationsPanel,JTable);
Relation(TaskAllocationsPanel;constructResourcesPanel;setValueAt,TableModel,Object-int-int);
Relation(TaskAllocationsPanel;constructResourcesPanel;setupCommonFields,CommonPanel,N);
Relation(TaskAllocationsPanel;getComponent;constructResourcesPanel,TaskAllocationsPanel,ResourceAssignmentCollection);
Relation(TaskAllocationsPanel;getComponent;getAssignmentCollection,Task,N);
Relation(TaskAllocationsPanel;getComponent;getTask,CommonPanel,N);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;addItem,JComboBox,Object);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;get,ArrayList,int);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;getColumn,TableColumnModel,int);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;getColumnModel,JTable,N);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;getResources,HumanResourceManager,N);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;setCellEditor,TableColumn,TableCellEditor);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;setEditable,JComboBox,boolean);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;size,ArrayList,N);
end b170
start b171
Attribute(GregorianTimeUnitStack,MONTH,TimeUnitFunctionOfDate,static,public);
Class(TimeUnitFunctionOfDate,N,N,public);
Method(TimeUnitFunctionOfDate,createTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitGraph,createTimeUnitFunctionOfDate,TimeUnitFunctionOfDate,Y,N,N,public);
Parameter(TimeUnitFunctionOfDate,createTimeUnit,date,Date,declaration);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,resultTimeUnitFunctionOfDate,local);
Relation(ChartModelImpl;setTopTimeUnit;createTimeUnit,TimeUnitFunctionOfDate,Date);
Relation(GregorianTimeUnitStack;getUnitCount;createTimeUnit,TimeUnitFunctionOfDate,Date);
end b171
start b172
Attribute(ProjectExportData,myExportSettings,GanttExportSettings,N,package);
Attribute(ProjectExportData,myGanttChartExportProcessor,GanttChartExportProcessor,N,package);
Attribute(ProjectExportData,myGanttTree,GanttTree,N,package);
Attribute(ProjectExportData,myOrganization,String,N,package);
Attribute(ProjectExportData,myOutputFile,File,N,package);
Attribute(ProjectExportData,myProjectDescription,String,N,package);
Attribute(ProjectExportData,myProjectName,String,N,package);
Attribute(ProjectExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,N,package);
Attribute(ProjectExportData,myResourceManager,HumanResourceManager,N,package);
Attribute(ProjectExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,N,package);
Class(ProjectExportData,N,N,public);
Generalisation(PDFExportData,ProjectExportData);
Method(ProjectExportData,ProjectExportData,N,Y,N,N,public);
Parameter(PDFExportProcessor,exportGanttChart,exportData,ProjectExportData,declaration);
Parameter(PDFExportProcessor,exportResourceChart,exportData,ProjectExportData,declaration);
Parameter(ProjectExportData,ProjectExportData,ganttTree,GanttTree,declaration);
Parameter(ProjectExportData,ProjectExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(ProjectExportData,ProjectExportData,myGanttChartExportProcessor,GanttChartExportProcessor,declaration);
Parameter(ProjectExportData,ProjectExportData,myOrganization,String,declaration);
Parameter(ProjectExportData,ProjectExportData,myOutputFile,File,declaration);
Parameter(ProjectExportData,ProjectExportData,myProjectDescription,String,declaration);
Parameter(ProjectExportData,ProjectExportData,myProjectName,String,declaration);
Parameter(ProjectExportData,ProjectExportData,myResourceChartExportProcessor,ResourceChartExportProcessor,declaration);
Parameter(ProjectExportData,ProjectExportData,myResourceManager,HumanResourceManager,declaration);
Parameter(ProjectExportData,ProjectExportData,myTaskHierarchyFacade,TaskContainmentHierarchyFacade,declaration);
Relation(PDFExportProcessor;run;exportGanttChart,PDFExportProcessor,ProjectExportData);
Relation(PDFExportProcessor;run;exportResourceChart,PDFExportProcessor,ProjectExportData);
end b172
start b173
Attribute(PreviewPanel,pattern,ShapePaint,N,protected);
Attribute(ShapeConstants,BACKSLASH,ShapePaint,static,public);
Attribute(ShapeConstants,CROSS,ShapePaint,static,public);
Attribute(ShapeConstants,DEFAULT,ShapePaint,static,public);
Attribute(ShapeConstants,DIAMOND,ShapePaint,static,public);
Attribute(ShapeConstants,DOT,ShapePaint,static,public);
Attribute(ShapeConstants,DOTS,ShapePaint,static,public);
Attribute(ShapeConstants,GRID,ShapePaint,static,public);
Attribute(ShapeConstants,HORZ,ShapePaint,static,public);
Attribute(ShapeConstants,NE_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,NW_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,ROUND,ShapePaint,static,public);
Attribute(ShapeConstants,SE_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,SLASH,ShapePaint,static,public);
Attribute(ShapeConstants,SW_TRIANGLE,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_BACKSLASH,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_GRID,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_HORZ,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_SLASH,ShapePaint,static,public);
Attribute(ShapeConstants,THICK_VERT,ShapePaint,static,public);
Attribute(ShapeConstants,TRANSPARENT,ShapePaint,static,public);
Attribute(ShapeConstants,VERT,ShapePaint,static,public);
Attribute(ShapePaint,array,int[],N,protected);
Attribute(ShapePaint,background,Color,N,protected);
Attribute(ShapePaint,foreground,Color,N,protected);
Attribute(ShapePaint,height,int,N,protected);
Attribute(ShapePaint,width,int,N,protected);
Attribute(TaskImpl,myShape,ShapePaint,N,private);
Class(ShapePaint,N,N,public);
Generalisation(ShapePaint,TexturePaint);
Method(PreviewPanel,getPattern,ShapePaint,N,N,N,public);
Method(Shape,getPattern,ShapePaint,N,N,N,public);
Method(ShapePaint,ShapePaint,N,Y,N,N,public);
Method(ShapePaint,createTexture,BufferedImage,Y,N,static,private);
Method(ShapePaint,equals,boolean,Y,N,N,public);
Method(ShapePaint,getArray,String,N,N,N,public);
Method(ShapePaint,getarray,int[],N,N,N,public);
Method(ShapePaint,toString,String,N,N,N,public);
Method(ShapePaint,toString2,String,N,N,N,public);
Method(Task,getShape,ShapePaint,N,N,N,package);
Method(TaskImpl,getShape,ShapePaint,N,N,N,public);
Parameter(GanttGraphicArea,paintAdvancement,shape,ShapePaint,declaration);
Parameter(MutableTask,setShape,shape,ShapePaint,declaration);
Parameter(PreviewPanel,setPattern,pattern,ShapePaint,declaration);
Parameter(Shape,setPattern,pattern,ShapePaint,declaration);
Parameter(ShapePaint,ShapePaint,array,int[],declaration);
Parameter(ShapePaint,ShapePaint,background,Color,declaration);
Parameter(ShapePaint,ShapePaint,foreground,Color,declaration);
Parameter(ShapePaint,ShapePaint,height,int,declaration);
Parameter(ShapePaint,ShapePaint,pattern,ShapePaint,declaration);
Parameter(ShapePaint,ShapePaint,width,int,declaration);
Parameter(ShapePaint,createTexture,array,int[],declaration);
Parameter(ShapePaint,createTexture,background,Color,declaration);
Parameter(ShapePaint,createTexture,foreground,Color,declaration);
Parameter(ShapePaint,createTexture,height,int,declaration);
Parameter(ShapePaint,createTexture,imageBufferedImage,local);
Parameter(ShapePaint,createTexture,width,int,declaration);
Parameter(ShapePaint,equals,obj,Object,declaration);
Parameter(ShapePaint,equals,paintShapePaint,local);
Parameter(ShapePaint,getArray,resultString,local);
Parameter(ShapePaint,toString,bufferStringBuffer,local);
Parameter(ShapePaint,toString2,bufferStringBuffer,local);
Parameter(TaskImpl,setShape,shape,ShapePaint,declaration);
Relation(GanttGraphicArea;paintTasks;paintAdvancement,GanttGraphicArea,Graphics-int-int-int-int-ShapePaint-Color-boolean);
Relation(GanttProject;newTask;setShape,TaskImpl,ShapePaint);
Relation(GanttTaskPropertiesBean;getReturnTask;setShape,TaskImpl,ShapePaint);
Relation(GanttTaskPropertiesBean;setSelectedTask;equals,ShapePaint,Object);
Relation(GanttXMLOpen;startElement;setShape,TaskImpl,ShapePaint);
Relation(GanttXMLSaver;writeTask;getArray,ShapePaint,N);
Relation(Shape;Shape;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;actionPerformed;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;setPattern;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;valueChanged;setPattern,PreviewPanel,ShapePaint);
Relation(ShapePaint;ShapePaint;createTexture,ShapePaint,int-int-int[]-Color-Color);
Relation(ShapePaint;createTexture;getRGB,Color,N);
Relation(ShapePaint;createTexture;setRGB,BufferedImage,int-int-int);
Relation(ShapePaint;getArray;length,String,N);
Relation(ShapePaint;getArray;substring,String,int-int);
Relation(ShapePaint;getArray;trim,String,N);
Relation(ShapePaint;toString2;append,StringBuffer,String);
Relation(ShapePaint;toString2;toString,StringBuffer,N);
Relation(ShapePaint;toString;append,StringBuffer,String);
Relation(ShapePaint;toString;toString,StringBuffer,N);
Relation(TaskImpl;setShape;setShape,TaskImpl,ShapePaint);
end b173
start b174
Attribute(ResourcesTableModel,myAssignmentCollection,ResourceAssignmentCollection,N,private);
Class(ResourceAssignmentCollection,N,N,public);
Method(ResourceAssignmentCollection,createMutator,ResourceAssignmentMutator,N,N,N,package);
Method(ResourceAssignmentCollection,getAssignment,ResourceAssignment,Y,N,N,package);
Method(ResourceAssignmentCollection,getAssignments,ResourceAssignment[],N,N,N,package);
Method(Task,getAssignmentCollection,ResourceAssignmentCollection,N,N,N,package);
Method(TaskImpl,getAssignmentCollection,ResourceAssignmentCollection,N,N,N,public);
Parameter(ResourceAssignmentCollection,getAssignment,resource,ProjectResource,declaration);
Parameter(ResourcesTableModel,ResourcesTableModel,assignmentCollection,ResourceAssignmentCollection,declaration);
Parameter(TaskAllocationsPanel,constructResourcesPanel,assignments,ResourceAssignmentCollection,declaration);
Relation(ResourcesTableModel;ResourcesTableModel;createMutator,ResourceAssignmentCollection,N);
Relation(ResourcesTableModel;ResourcesTableModel;getAssignments,ResourceAssignmentCollection,N);
Relation(TaskAllocationsPanel;getComponent;constructResourcesPanel,TaskAllocationsPanel,ResourceAssignmentCollection);
end b174
start b175
Class(GanttTXTFileFilter,N,N,public);
Generalisation(GanttTXTFileFilter,FileFilter);
Method(GanttTXTFileFilter,accept,boolean,Y,N,N,public);
Method(GanttTXTFileFilter,getDescription,String,N,N,N,public);
Method(GanttTXTFileFilter,getExtension,String,Y,N,static,public);
Parameter(GanttTXTFileFilter,accept,extensionString,local);
Parameter(GanttTXTFileFilter,accept,f,File,declaration);
Parameter(GanttTXTFileFilter,getExtension,extString,local);
Parameter(GanttTXTFileFilter,getExtension,f,File,declaration);
Parameter(GanttTXTFileFilter,getExtension,iint,local);
Parameter(GanttTXTFileFilter,getExtension,sString,local);
Relation(GanttTXTFileFilter;accept;equals,String,Object);
Relation(GanttTXTFileFilter;accept;getExtension,GanttTXTFileFilter,File);
Relation(GanttTXTFileFilter;accept;isDirectory,File,N);
Relation(GanttTXTFileFilter;getExtension;getName,File,N);
Relation(GanttTXTFileFilter;getExtension;lastIndexOf,String,int);
Relation(GanttTXTFileFilter;getExtension;length,String,N);
Relation(GanttTXTFileFilter;getExtension;substring,String,int);
Relation(GanttTXTFileFilter;getExtension;toLowerCase,String,N);
end b175
start b176
Attribute(RoleSetPage,myI18N,I18N,N,private);
Attribute(RoleSetPage,myI18n,I18N,N,private);
Attribute(RoleSetPage,myListModel,RoleSetListModel,N,private);
Attribute(RoleSetPage,myRoleSets,RoleSet[],N,private);
Class(RoleSetPage,N,N,public);
Generalisation(RoleSetPage,AbstractListModel);
Method(RoleSetPage,RoleSetListModel,N,Y,N,N,package);
Method(RoleSetPage,RoleSetPage,N,Y,N,N,package);
Method(RoleSetPage,createTooltipText,String,Y,N,N,private);
Method(RoleSetPage,getCellRenderer,ListCellRenderer,N,N,N,package);
Method(RoleSetPage,getComponent,Component,N,N,N,public);
Method(RoleSetPage,getElementAt,Object,Y,N,N,public);
Method(RoleSetPage,getListCellRendererComponent,Component,Y,N,N,public);
Method(RoleSetPage,getSize,int,N,N,N,public);
Method(RoleSetPage,getTitle,String,N,N,N,public);
Method(RoleSetPage,isTheOnlyEnabled,boolean,Y,N,N,private);
Method(RoleSetPage,mouseClicked,void,Y,N,N,public);
Method(RoleSetPage,setActive,void,Y,N,N,public);
Method(RoleSetPage,toggle,void,Y,N,N,public);
Parameter(RoleSetPage,RoleSetListModel,i18n,I18N,declaration);
Parameter(RoleSetPage,RoleSetListModel,roleSets,RoleSet[],declaration);
Parameter(RoleSetPage,RoleSetPage,i18n,I18N,declaration);
Parameter(RoleSetPage,RoleSetPage,roleSets,RoleSet[],declaration);
Parameter(RoleSetPage,createTooltipText,nextRoleRole,local);
Parameter(RoleSetPage,createTooltipText,resultStringBuffer,local);
Parameter(RoleSetPage,createTooltipText,roleSet,RoleSet,declaration);
Parameter(RoleSetPage,createTooltipText,rolesRole[],local);
Parameter(RoleSetPage,getComponent,domainBoxBox,local);
Parameter(RoleSetPage,getComponent,indexint,local);
Parameter(RoleSetPage,getComponent,labelJLabel,local);
Parameter(RoleSetPage,getComponent,resultJPanel,local);
Parameter(RoleSetPage,getComponent,roleSetsListJList,local);
Parameter(RoleSetPage,getElementAt,index,int,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,cellHasFocus,boolean,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,index,int,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,isSelected,boolean,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,list,JList,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,resultJCheckBox,local);
Parameter(RoleSetPage,getListCellRendererComponent,roleSetRoleSet,local);
Parameter(RoleSetPage,getListCellRendererComponent,value,Object,declaration);
Parameter(RoleSetPage,isTheOnlyEnabled,resultboolean,local);
Parameter(RoleSetPage,isTheOnlyEnabled,roleSet,RoleSet,declaration);
Parameter(RoleSetPage,mouseClicked,e,MouseEvent,declaration);
Parameter(RoleSetPage,setActive,active,boolean,declaration);
Parameter(RoleSetPage,toggle,index,int,declaration);
Relation(RoleSetPage;createTooltipText;append,StringBuffer,String);
Relation(RoleSetPage;createTooltipText;formatRoleForTooltip,I18N,Role);
Relation(RoleSetPage;createTooltipText;getName,RoleSet,N);
Relation(RoleSetPage;createTooltipText;getRoles,RoleSet,N);
Relation(RoleSetPage;createTooltipText;getRolesetTooltipFooter,I18N,N);
Relation(RoleSetPage;createTooltipText;getRolesetTooltipHeader,I18N,String);
Relation(RoleSetPage;createTooltipText;toString,StringBuffer,N);
Relation(RoleSetPage;getComponent;add,Container,Component);
Relation(RoleSetPage;getComponent;add,Container,Component-Object);
Relation(RoleSetPage;getComponent;addMouseListener,Component,MouseListener);
Relation(RoleSetPage;getComponent;createVerticalStrut,Box,int);
Relation(RoleSetPage;getComponent;getCellRenderer,RoleSetListModel,N);
Relation(RoleSetPage;getComponent;getInstance,GanttLanguage,N);
Relation(RoleSetPage;getComponent;getPoint,MouseEvent,N);
Relation(RoleSetPage;getComponent;getText,GanttLanguage,String);
Relation(RoleSetPage;getComponent;locationToIndex,JList,Point);
Relation(RoleSetPage;getComponent;setAlignmentX,JComponent,float);
Relation(RoleSetPage;getComponent;setCellRenderer,JList,ListCellRenderer);
Relation(RoleSetPage;getComponent;setLabelFor,JLabel,Component);
Relation(RoleSetPage;getComponent;toggle,RoleSetListModel,int);
Relation(RoleSetPage;getListCellRendererComponent;createTooltipText,RoleSetListModel,RoleSet);
Relation(RoleSetPage;getListCellRendererComponent;getName,RoleSet,N);
Relation(RoleSetPage;getListCellRendererComponent;isEnabled,RoleSet,N);
Relation(RoleSetPage;getListCellRendererComponent;isTheOnlyEnabled,RoleSetListModel,RoleSet);
Relation(RoleSetPage;getListCellRendererComponent;setEnabled,AbstractButton,boolean);
Relation(RoleSetPage;getListCellRendererComponent;setToolTipText,JComponent,String);
Relation(RoleSetPage;getTitle;getProjectDomainPageTitle,I18N,N);
Relation(RoleSetPage;isTheOnlyEnabled;isEnabled,RoleSet,N);
Relation(RoleSetPage;toggle;fireContentsChanged,AbstractListModel,Object-int-int);
Relation(RoleSetPage;toggle;isEnabled,RoleSet,N);
Relation(RoleSetPage;toggle;setEnabled,RoleSet,boolean);
end b176
start b177
Class(GanttTreeCellRenderer,N,N,public);
Relation(GanttTree;getTreeCellRendererComponent;getToolTip,GanttTreeCellRenderer,Task-int);
end b177
start b178
Class(FileFormatException,N,N,public);
Generalisation(FileFormatException,Exception);
Method(FileFormatException,FileFormatException,N,N,N,N,public);
Method(FileFormatException,FileFormatException,N,Y,N,N,public);
Parameter(FileFormatException,FileFormatException,cause,Throwable,declaration);
Parameter(FileFormatException,FileFormatException,message,String,declaration);
end b178
start b179
Attribute(GanttXFIGSaver,abl,ArrayList,N,package);
Attribute(GanttXFIGSaver,angle,float,N,package);
Attribute(GanttXFIGSaver,area,GanttGraphicArea,N,private);
Attribute(GanttXFIGSaver,area_fill,int,N,package);
Attribute(GanttXFIGSaver,atl,ArrayList,N,package);
Attribute(GanttXFIGSaver,backward_arrow,int,N,package);
Attribute(GanttXFIGSaver,cap_style,int,N,package);
Attribute(GanttXFIGSaver,chwidth,float,N,package);
Attribute(GanttXFIGSaver,code,int,N,package);
Attribute(GanttXFIGSaver,color,int,N,package);
Attribute(GanttXFIGSaver,dateShift,GanttCalendar,N,package);
Attribute(GanttXFIGSaver,debug,boolean,N,package);
Attribute(GanttXFIGSaver,depth,int,N,package);
Attribute(GanttXFIGSaver,fTtextwidth,float,N,package);
Attribute(GanttXFIGSaver,fill_color,int,N,package);
Attribute(GanttXFIGSaver,font,int,N,package);
Attribute(GanttXFIGSaver,font_flags,int,N,package);
Attribute(GanttXFIGSaver,font_size,float,N,package);
Attribute(GanttXFIGSaver,forward_arrow,int,N,package);
Attribute(GanttXFIGSaver,height,float,N,package);
Attribute(GanttXFIGSaver,join_style,int,N,package);
Attribute(GanttXFIGSaver,length,float,N,package);
Attribute(GanttXFIGSaver,line_style,int,N,package);
Attribute(GanttXFIGSaver,loc,ArrayList,N,package);
Attribute(GanttXFIGSaver,lot,ArrayList,N,package);
Attribute(GanttXFIGSaver,lots,ArrayList,N,package);
Attribute(GanttXFIGSaver,npoints,int,N,package);
Attribute(GanttXFIGSaver,pen_color,int,N,package);
Attribute(GanttXFIGSaver,pen_style,int,N,package);
Attribute(GanttXFIGSaver,peop,GanttResourcePanel,N,private);
Attribute(GanttXFIGSaver,points,float[],N,package);
Attribute(GanttXFIGSaver,prjInfos,PrjInfos,N,private);
Attribute(GanttXFIGSaver,radius,int,N,package);
Attribute(GanttXFIGSaver,scale,float,N,package);
Attribute(GanttXFIGSaver,str,String,N,package);
Attribute(GanttXFIGSaver,style_val,int,N,package);
Attribute(GanttXFIGSaver,sub_type,int,N,package);
Attribute(GanttXFIGSaver,thickness,int,N,package);
Attribute(GanttXFIGSaver,tree,GanttTree,N,private);
Attribute(GanttXFIGSaver,x,int,N,package);
Attribute(GanttXFIGSaver,y,int,N,package);
Class(GanttXFIGSaver,N,N,public);
Method(GanttXFIGSaver,GanttXFIGSaver,N,Y,N,N,public);
Method(GanttXFIGSaver,beginToSave,void,Y,N,N,public);
Method(GanttXFIGSaver,drawTasks,void,Y,N,N,public);
Method(GanttXFIGSaver,drawbox,void,Y,N,N,public);
Method(GanttXFIGSaver,drawtext,void,Y,N,N,public);
Method(GanttXFIGSaver,getHexaColor,String,Y,N,N,private);
Method(GanttXFIGSaver,getProjectTextWidth,float,N,N,N,public);
Method(GanttXFIGSaver,getTaskTextWidth,float,Y,N,N,public);
Method(GanttXFIGSaver,labelAxes,void,Y,N,N,public);
Method(GanttXFIGSaver,save,void,Y,N,N,public);
Method(GanttXFIGSaver,searchUserColor,void,N,N,N,public);
Method(GanttXFIGSaver,setProjectPlotTimes,void,Y,N,N,public);
Method(GanttXFIGSaver,task2box,BoxObject,Y,N,N,public);
Method(GanttXFIGSaver,task2text,TextObject,Y,N,N,public);
Method(GanttXFIGSaver,xfigheader,void,Y,N,N,public);
Parameter(GanttProject,doExport,saverGanttXFIGSaver,local);
Parameter(GanttXFIGSaver,GanttXFIGSaver,area,GanttGraphicArea,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,peop,GanttResourcePanel,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,prjInfos,PrjInfos,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,tree,GanttTree,declaration);
Parameter(GanttXFIGSaver,beginToSave,depthvalfloat,local);
Parameter(GanttXFIGSaver,beginToSave,fout,OutputStreamWriter,declaration);
Parameter(GanttXFIGSaver,beginToSave,targetWidthPointsfloat,local);
Parameter(GanttXFIGSaver,beginToSave,version,String,declaration);
Parameter(GanttXFIGSaver,drawTasks,boxObjectBoxObject,local);
Parameter(GanttXFIGSaver,drawTasks,fout,OutputStreamWriter,declaration);
Parameter(GanttXFIGSaver,drawTasks,iint,local);
Parameter(GanttXFIGSaver,drawTasks,nodeDefaultMutableTreeNode,local);
Parameter(GanttXFIGSaver,drawTasks,taskGanttTask,local);
Parameter(GanttXFIGSaver,drawTasks,txtObjTextObject,local);
Parameter(GanttXFIGSaver,drawbox,arrow_heightfloat,local);
Parameter(GanttXFIGSaver,drawbox,arrow_styleint,local);
Parameter(GanttXFIGSaver,drawbox,arrow_thicknessfloat,local);
Parameter(GanttXFIGSaver,drawbox,arrow_typeint,local);
Parameter(GanttXFIGSaver,drawbox,arrow_widthfloat,local);
Parameter(GanttXFIGSaver,drawbox,boxObject,BoxObject,declaration);
Parameter(GanttXFIGSaver,drawbox,fout,OutputStreamWriter,declaration);
Parameter(GanttXFIGSaver,drawtext,fout,OutputStreamWriter,declaration);
Parameter(GanttXFIGSaver,drawtext,txtObj,TextObject,declaration);
Parameter(GanttXFIGSaver,getHexaColor,color,Color,declaration);
Parameter(GanttXFIGSaver,getHexaColor,sColorString,local);
Parameter(GanttXFIGSaver,getProjectTextWidth,resfloat,local);
Parameter(GanttXFIGSaver,getProjectTextWidth,taskDefaultMutableTreeNode,local);
Parameter(GanttXFIGSaver,getProjectTextWidth,taskTextWidthfloat,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,childrenArrayList,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,resfloat,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,subTaskTextWidthfloat,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,tTask,local);
Parameter(GanttXFIGSaver,getTaskTextWidth,task,DefaultMutableTreeNode,declaration);
Parameter(GanttXFIGSaver,labelAxes,fout,OutputStreamWriter,declaration);
Parameter(GanttXFIGSaver,save,foutOutputStreamWriter,local);
Parameter(GanttXFIGSaver,save,stream,OutputStream,declaration);
Parameter(GanttXFIGSaver,save,version,String,declaration);
Parameter(GanttXFIGSaver,searchUserColor,colorColor,local);
Parameter(GanttXFIGSaver,searchUserColor,hexaColorString,local);
Parameter(GanttXFIGSaver,searchUserColor,nodeDefaultMutableTreeNode,local);
Parameter(GanttXFIGSaver,searchUserColor,taskGanttTask,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,boxObjectBoxObject,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,depthval,float,declaration);
Parameter(GanttXFIGSaver,setProjectPlotTimes,endDateGanttCalendar,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,indexint,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,nodeDefaultMutableTreeNode,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,startDateGanttCalendar,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,targetWidthPoints,float,declaration);
Parameter(GanttXFIGSaver,setProjectPlotTimes,targetwidthfloat,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,taskGanttTask,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,taskTask,local);
Parameter(GanttXFIGSaver,setProjectPlotTimes,textLabelTextObject,local);
Parameter(GanttXFIGSaver,task2box,angwidfloat,local);
Parameter(GanttXFIGSaver,task2box,blenint,local);
Parameter(GanttXFIGSaver,task2box,boxHeightfloat,local);
Parameter(GanttXFIGSaver,task2box,boxLenPctfloat,local);
Parameter(GanttXFIGSaver,task2box,boxLenfloat,local);
Parameter(GanttXFIGSaver,task2box,boxLofloat,local);
Parameter(GanttXFIGSaver,task2box,boxObjectBoxObject,local);
Parameter(GanttXFIGSaver,task2box,depthval,int,declaration);
Parameter(GanttXFIGSaver,task2box,isLeaf,boolean,declaration);
Parameter(GanttXFIGSaver,task2box,number,int,declaration);
Parameter(GanttXFIGSaver,task2box,pHifloat,local);
Parameter(GanttXFIGSaver,task2box,pLofloat,local);
Parameter(GanttXFIGSaver,task2box,pointsPctfloat[],local);
Parameter(GanttXFIGSaver,task2box,task,GanttTask,declaration);
Parameter(GanttXFIGSaver,task2box,xShiftfloat,local);
Parameter(GanttXFIGSaver,task2box,yShiftfloat,local);
Parameter(GanttXFIGSaver,task2text,depthval,int,declaration);
Parameter(GanttXFIGSaver,task2text,level,int,declaration);
Parameter(GanttXFIGSaver,task2text,number,int,declaration);
Parameter(GanttXFIGSaver,task2text,task,GanttTask,declaration);
Parameter(GanttXFIGSaver,task2text,taskTextTextObject,local);
Parameter(GanttXFIGSaver,xfigheader,fout,OutputStreamWriter,declaration);
Relation(GanttProject;doExport;save,GanttXFIGSaver,OutputStream-String);
Relation(GanttXFIGSaver;beginToSave;drawTasks,GanttXFIGSaver,OutputStreamWriter);
Relation(GanttXFIGSaver;beginToSave;getAllTasks,GanttTree,N);
Relation(GanttXFIGSaver;beginToSave;getArryListTaskString,GanttTree,String);
Relation(GanttXFIGSaver;beginToSave;getProjectTextWidth,GanttXFIGSaver,N);
Relation(GanttXFIGSaver;beginToSave;labelAxes,GanttXFIGSaver,OutputStreamWriter);
Relation(GanttXFIGSaver;beginToSave;println,PrintStream,String);
Relation(GanttXFIGSaver;beginToSave;searchUserColor,GanttXFIGSaver,N);
Relation(GanttXFIGSaver;beginToSave;setProjectPlotTimes,GanttXFIGSaver,float-float);
Relation(GanttXFIGSaver;beginToSave;xfigheader,GanttXFIGSaver,OutputStreamWriter);
Relation(GanttXFIGSaver;drawTasks;drawbox,GanttXFIGSaver,OutputStreamWriter-BoxObject);
Relation(GanttXFIGSaver;drawTasks;drawtext,GanttXFIGSaver,OutputStreamWriter-TextObject);
Relation(GanttXFIGSaver;drawTasks;get,ArrayList,int);
Relation(GanttXFIGSaver;drawTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;drawTasks;hasNext,Iterator,N);
Relation(GanttXFIGSaver;drawTasks;isRoot,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;drawTasks;iterator,ArrayList,N);
Relation(GanttXFIGSaver;drawTasks;next,Iterator,N);
Relation(GanttXFIGSaver;drawTasks;println,PrintStream,Object);
Relation(GanttXFIGSaver;drawTasks;println,PrintStream,String);
Relation(GanttXFIGSaver;drawbox;println,PrintStream,String);
Relation(GanttXFIGSaver;drawbox;write,Writer,String);
Relation(GanttXFIGSaver;drawtext;println,PrintStream,String);
Relation(GanttXFIGSaver;drawtext;write,Writer,String);
Relation(GanttXFIGSaver;getHexaColor;getBlue,Color,N);
Relation(GanttXFIGSaver;getHexaColor;getGreen,Color,N);
Relation(GanttXFIGSaver;getHexaColor;getRed,Color,N);
Relation(GanttXFIGSaver;getHexaColor;println,PrintStream,String);
Relation(GanttXFIGSaver;getHexaColor;toHexString,Integer,int);
Relation(GanttXFIGSaver;getProjectTextWidth;getTaskTextWidth,GanttXFIGSaver,DefaultMutableTreeNode);
Relation(GanttXFIGSaver;getProjectTextWidth;hasNext,Iterator,N);
Relation(GanttXFIGSaver;getProjectTextWidth;isRoot,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;getProjectTextWidth;iterator,ArrayList,N);
Relation(GanttXFIGSaver;getProjectTextWidth;next,Iterator,N);
Relation(GanttXFIGSaver;getProjectTextWidth;println,PrintStream,String);
Relation(GanttXFIGSaver;getTaskTextWidth;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttXFIGSaver;getTaskTextWidth;getName,Task,N);
Relation(GanttXFIGSaver;getTaskTextWidth;getTaskTextWidth,GanttXFIGSaver,DefaultMutableTreeNode);
Relation(GanttXFIGSaver;getTaskTextWidth;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;getTaskTextWidth;hasNext,Iterator,N);
Relation(GanttXFIGSaver;getTaskTextWidth;iterator,ArrayList,N);
Relation(GanttXFIGSaver;getTaskTextWidth;length,String,N);
Relation(GanttXFIGSaver;getTaskTextWidth;next,Iterator,N);
Relation(GanttXFIGSaver;getTaskTextWidth;println,PrintStream,String);
Relation(GanttXFIGSaver;labelAxes;println,PrintStream,String);
Relation(GanttXFIGSaver;save;beginToSave,GanttXFIGSaver,OutputStreamWriter-String);
Relation(GanttXFIGSaver;save;close,OutputStreamWriter,N);
Relation(GanttXFIGSaver;save;println,PrintStream,Object);
Relation(GanttXFIGSaver;save;println,PrintStream,String);
Relation(GanttXFIGSaver;searchUserColor;clear,ArrayList,N);
Relation(GanttXFIGSaver;searchUserColor;getColor,TaskImpl,N);
Relation(GanttXFIGSaver;searchUserColor;getHexaColor,GanttXFIGSaver,Color);
Relation(GanttXFIGSaver;searchUserColor;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;searchUserColor;hasNext,Iterator,N);
Relation(GanttXFIGSaver;searchUserColor;isRoot,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;searchUserColor;iterator,ArrayList,N);
Relation(GanttXFIGSaver;searchUserColor;next,Iterator,N);
Relation(GanttXFIGSaver;searchUserColor;println,PrintStream,String);
Relation(GanttXFIGSaver;setProjectPlotTimes;add,ArrayList,Object);
Relation(GanttXFIGSaver;setProjectPlotTimes;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttXFIGSaver;setProjectPlotTimes;diff,GanttCalendar,GanttCalendar);
Relation(GanttXFIGSaver;setProjectPlotTimes;getEnd,Task,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;getLevel,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;getStart,Task,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;hasNext,Iterator,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;isLeaf,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;isRoot,DefaultMutableTreeNode,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;iterator,ArrayList,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;max,Math,float-float);
Relation(GanttXFIGSaver;setProjectPlotTimes;next,Iterator,N);
Relation(GanttXFIGSaver;setProjectPlotTimes;println,PrintStream,String);
Relation(GanttXFIGSaver;setProjectPlotTimes;task2box,GanttXFIGSaver,GanttTask-int-int-boolean);
Relation(GanttXFIGSaver;setProjectPlotTimes;task2text,GanttXFIGSaver,GanttTask-int-int-int);
Relation(GanttXFIGSaver;task2box;diff,GanttCalendar,GanttCalendar);
Relation(GanttXFIGSaver;task2box;getCompletionPercentage,TaskImpl,N);
Relation(GanttXFIGSaver;task2box;getLength,GanttTask,N);
Relation(GanttXFIGSaver;task2box;getStart,TaskImpl,N);
Relation(GanttXFIGSaver;task2box;max,Math,float-float);
Relation(GanttXFIGSaver;task2box;min,Math,float-float);
Relation(GanttXFIGSaver;task2text;getName,TaskImpl,N);
Relation(GanttXFIGSaver;task2text;length,String,N);
Relation(GanttXFIGSaver;task2text;println,PrintStream,String);
Relation(GanttXFIGSaver;xfigheader;println,PrintStream,String);
Relation(GanttXFIGSaver;xfigheader;write,Writer,String);
end b179
start b180
Class(TopUnitTextBuilder,N,N,package);
Parameter(ChartHeaderImpl,createFrames,topUnitTextBuilderTopUnitTextBuilder,local);
Relation(ChartHeaderImpl;createFrames;createTopUnitText,TopUnitTextBuilder,int-TimeFrame);
end b180
start b181
Attribute(OpenDocumentAction,MENU_MASK,int,static,private);
Attribute(OpenDocumentAction,MNEMONIC_KEYS,int[],static,private);
Attribute(OpenDocumentAction,SHORTCUT_KEYS,int[],static,private);
Attribute(OpenDocumentAction,document,Document,N,private);
Attribute(OpenDocumentAction,listener,ActionListener,N,private);
Class(OpenDocumentAction,N,N,public);
Generalisation(OpenDocumentAction,AbstractAction);
Method(OpenDocumentAction,OpenDocumentAction,N,Y,N,N,public);
Method(OpenDocumentAction,actionPerformed,void,Y,N,N,public);
Parameter(OpenDocumentAction,OpenDocumentAction,document,Document,declaration);
Parameter(OpenDocumentAction,OpenDocumentAction,index,int,declaration);
Parameter(OpenDocumentAction,OpenDocumentAction,listener,ActionListener,declaration);
Parameter(OpenDocumentAction,actionPerformed,e,ActionEvent,declaration);
Relation(OpenDocumentAction;NgetDefaultToolkit,Toolkit,N);
Relation(OpenDocumentAction;NgetMenuShortcutKeyMask,Toolkit,N);
Relation(OpenDocumentAction;OpenDocumentAction;getDescription,Document,N);
Relation(OpenDocumentAction;OpenDocumentAction;getKeyStroke,KeyStroke,int-int);
Relation(OpenDocumentAction;OpenDocumentAction;putValue,AbstractAction,String-Object);
Relation(OpenDocumentAction;actionPerformed;actionPerformed,ActionListener,ActionEvent);
Relation(OpenDocumentAction;actionPerformed;getActionCommand,ActionEvent,N);
Relation(OpenDocumentAction;actionPerformed;getID,AWTEvent,N);
end b181
start b182
Class(GanttJPGFileFilter,N,N,public);
Generalisation(GanttJPGFileFilter,FileFilter);
Method(GanttJPGFileFilter,accept,boolean,Y,N,N,public);
Method(GanttJPGFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttJPGFileFilter,accept,f,File,declaration);
Relation(GanttJPGFileFilter;accept;endsWith,String,String);
Relation(GanttJPGFileFilter;accept;getName,File,N);
Relation(GanttJPGFileFilter;accept;isDirectory,File,N);
Relation(GanttJPGFileFilter;accept;toLowerCase,String,N);
Relation(GanttJPGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttJPGFileFilter;getDescription;getText,GanttLanguage,String);
end b182
start b183
Attribute(TaskDependencySliceImpl,myDependencyCollection,TaskDependencyCollection,N,private);
Attribute(TaskDependencySliceImpl,myTask,Task,N,private);
Class(TaskDependencySliceImpl,N,N,public);
Generalisation(TaskDependencySliceAsDependant,TaskDependencySliceImpl);
Generalisation(TaskDependencySliceAsDependee,TaskDependencySliceImpl);
Method(TaskDependencySliceImpl,TaskDependencySliceImpl,N,Y,N,N,public);
Method(TaskDependencySliceImpl,clear,void,N,N,N,public);
Method(TaskDependencySliceImpl,getDependencyCollection,TaskDependencyCollection,N,N,N,protected);
Method(TaskDependencySliceImpl,getTask,Task,N,N,N,protected);
Method(TaskDependencySliceImpl,toArray,TaskDependency[],N,N,N,public);
Parameter(TaskDependencySliceImpl,TaskDependencySliceImpl,dependencyCollection,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceImpl,TaskDependencySliceImpl,task,Task,declaration);
Parameter(TaskDependencySliceImpl,clear,depsTaskDependency[],local);
Relation(TaskDependencySliceAsDependant;toArray;getDependencyCollection,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceAsDependant;toArray;getTask,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceAsDependee;toArray;getDependencyCollection,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceAsDependee;toArray;getTask,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceImpl;clear;delete,TaskDependency,N);
Relation(TaskDependencySliceImpl;clear;toArray,TaskDependencySliceImpl,N);
Relation(TaskDependencySliceImpl;toArray;getDependencies,TaskDependencyCollection,Task);
end b183
start b184
Attribute(AllocationTagHandler,myResourceManager,ResourceManager,N,private);
Attribute(AllocationTagHandler,myTaskManager,TaskManager,N,private);
Class(AllocationTagHandler,N,N,public);
Method(AllocationTagHandler,AllocationTagHandler,N,Y,N,N,public);
Method(AllocationTagHandler,endElement,void,Y,N,N,public);
Method(AllocationTagHandler,getResourceManager,ResourceManager,N,N,N,private);
Method(AllocationTagHandler,getTaskManager,TaskManager,N,N,N,private);
Method(AllocationTagHandler,loadAllocation,void,Y,N,N,private);
Method(AllocationTagHandler,startElement,void,Y,N,N,public);
Parameter(AllocationTagHandler,AllocationTagHandler,resourceMgr,ResourceManager,declaration);
Parameter(AllocationTagHandler,AllocationTagHandler,taskMgr,TaskManager,declaration);
Parameter(AllocationTagHandler,endElement,namespaceURI,String,declaration);
Parameter(AllocationTagHandler,endElement,qName,String,declaration);
Parameter(AllocationTagHandler,endElement,sName,String,declaration);
Parameter(AllocationTagHandler,loadAllocation,aNameString,local);
Parameter(AllocationTagHandler,loadAllocation,assignmentResourceAssignment,local);
Parameter(AllocationTagHandler,loadAllocation,attrs,Attributes,declaration);
Parameter(AllocationTagHandler,loadAllocation,humanHumanResource,local);
Parameter(AllocationTagHandler,loadAllocation,loadAsStringString,local);
Parameter(AllocationTagHandler,loadAllocation,loadfloat,local);
Parameter(AllocationTagHandler,loadAllocation,resourceIdAsStringString,local);
Parameter(AllocationTagHandler,loadAllocation,resourceIdint,local);
Parameter(AllocationTagHandler,loadAllocation,taskIdAsStringString,local);
Parameter(AllocationTagHandler,loadAllocation,taskIdint,local);
Parameter(AllocationTagHandler,loadAllocation,taskTask,local);
Parameter(AllocationTagHandler,startElement,attrs,Attributes,declaration);
Parameter(AllocationTagHandler,startElement,namespaceURI,String,declaration);
Parameter(AllocationTagHandler,startElement,qName,String,declaration);
Parameter(AllocationTagHandler,startElement,sName,String,declaration);
Parameter(GanttProject,importcbk,allocationHandlerAllocationTagHandler,local);
Parameter(GanttProject,openDocument,allocationHandlerAllocationTagHandler,local);
Parameter(GanttProject,openXMLStream,allocationHandlerAllocationTagHandler,local);
Relation(AllocationTagHandler;loadAllocation;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(AllocationTagHandler;loadAllocation;getAssignmentCollection,Task,N);
Relation(AllocationTagHandler;loadAllocation;getById,ResourceManager,int);
Relation(AllocationTagHandler;loadAllocation;getResourceManager,AllocationTagHandler,N);
Relation(AllocationTagHandler;loadAllocation;getTask,TaskManager,int);
Relation(AllocationTagHandler;loadAllocation;getTaskManager,AllocationTagHandler,N);
Relation(AllocationTagHandler;loadAllocation;getValue,Attributes,String);
Relation(AllocationTagHandler;loadAllocation;parseFloat,Float,String);
Relation(AllocationTagHandler;loadAllocation;parseInt,Integer,String);
Relation(AllocationTagHandler;loadAllocation;setLoad,ResourceAssignment,float);
Relation(AllocationTagHandler;startElement;equals,String,Object);
Relation(AllocationTagHandler;startElement;loadAllocation,AllocationTagHandler,Attributes);
end b184
start b185
Class(TaskComboItem,N,static,package);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,selectedItemTaskComboItem,local);
end b185
start b186
Attribute(GanttProject,statusBar,GanttStatusBar,N,private);
Attribute(GanttStatusBar,MESSAGE_1,int,static,private);
Attribute(GanttStatusBar,MESSAGE_2,int,static,private);
Attribute(GanttStatusBar,NO_MESSAGE,int,static,private);
Attribute(GanttStatusBar,PROGRESS_FINISH,int,static,private);
Attribute(GanttStatusBar,bRunning,boolean,N,package);
Attribute(GanttStatusBar,message,JLabel,N,package);
Attribute(GanttStatusBar,message0,MessagePanel,N,protected);
Attribute(GanttStatusBar,message1,MessagePanel,N,protected);
Attribute(GanttStatusBar,message2,MessagePanel,N,protected);
Attribute(GanttStatusBar,mode,int,N,package);
Attribute(GanttStatusBar,pbp,ProgressBarPanel,N,protected);
Attribute(GanttStatusBar,progressBar,JProgressBar,N,private);
Attribute(GanttStatusBar,progressLabel,JLabel,N,private);
Attribute(GanttStatusBar,textColor,Color,N,package);
Attribute(GanttStatusBar,timer,int,N,package);
Class(GanttStatusBar,N,N,public);
Generalisation(GanttStatusBar,JPanel);
Method(GanttProject,getStatusBar,GanttStatusBar,N,N,N,public);
Method(GanttStatusBar,GanttStatusBar,N,N,N,N,public);
Method(GanttStatusBar,MessagePanel,N,Y,N,N,public);
Method(GanttStatusBar,ProgressBarPanel,N,N,N,N,public);
Method(GanttStatusBar,clear,void,N,N,N,public);
Method(GanttStatusBar,getPreferredSize,Dimension,N,N,N,public);
Method(GanttStatusBar,getTimer,int,N,N,N,public);
Method(GanttStatusBar,hideText,void,N,N,N,public);
Method(GanttStatusBar,paint,void,Y,N,N,public);
Method(GanttStatusBar,reset,void,N,N,N,public);
Method(GanttStatusBar,run,void,N,N,N,public);
Method(GanttStatusBar,setFirstText,void,Y,N,N,public);
Method(GanttStatusBar,setProgressValue,void,Y,N,N,public);
Method(GanttStatusBar,setSecondText,void,Y,N,N,public);
Method(GanttStatusBar,setText,void,Y,N,N,public);
Method(GanttStatusBar,setValue,void,Y,N,N,public);
Parameter(GanttStatusBar,MessagePanel,g2Graphics2D,local);
Parameter(GanttStatusBar,MessagePanel,separator,boolean,declaration);
Parameter(GanttStatusBar,MessagePanel,size,int,declaration);
Parameter(GanttStatusBar,hideText,cBlackColor,local);
Parameter(GanttStatusBar,hideText,cPanelColor,local);
Parameter(GanttStatusBar,hideText,dBluefloat,local);
Parameter(GanttStatusBar,hideText,dGreenfloat,local);
Parameter(GanttStatusBar,hideText,dRedfloat,local);
Parameter(GanttStatusBar,hideText,stepint,local);
Parameter(GanttStatusBar,paint,g,Graphics,declaration);
Parameter(GanttStatusBar,setFirstText,mlTimer,int,declaration);
Parameter(GanttStatusBar,setFirstText,text,String,declaration);
Parameter(GanttStatusBar,setProgressValue,value,int,declaration);
Parameter(GanttStatusBar,setSecondText,mlTimer,int,declaration);
Parameter(GanttStatusBar,setSecondText,text,String,declaration);
Parameter(GanttStatusBar,setText,mltimer,int,declaration);
Parameter(GanttStatusBar,setText,text,String,declaration);
Parameter(GanttStatusBar,setValue,value,int,declaration);
Relation(GanttProject;deleteTasks;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;doExport;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;launchOptionsDialog;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;linkRelationships;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;newProject;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;newTask;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;openDocument;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;openWebPage;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;propertiesTask;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;refreshProjectInfos;setSecondText,GanttStatusBar,String);
Relation(GanttProject;resourceAdded;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;saveProject;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;selectExportFile;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;unlinkRelationships;setFirstText,GanttStatusBar,String-int);
Relation(GanttResourcePanel;propertiesHuman;setFirstText,GanttStatusBar,String-int);
Relation(GanttStatusBar;GanttStatusBar;add,Container,Component-Object);
Relation(GanttStatusBar;GanttStatusBar;getInstance,GanttLanguage,N);
Relation(GanttStatusBar;GanttStatusBar;getText,GanttLanguage,String);
Relation(GanttStatusBar;GanttStatusBar;setFirstText,GanttStatusBar,String-int);
Relation(GanttStatusBar;GanttStatusBar;setPreferredSize,JComponent,Dimension);
Relation(GanttStatusBar;GanttStatusBar;setText,MessagePanel,String);
Relation(GanttStatusBar;GanttStatusBar;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;MessagePanel;add,Container,Component);
Relation(GanttStatusBar;MessagePanel;drawString,Graphics2D,String-int-int);
Relation(GanttStatusBar;MessagePanel;getText,JLabel,N);
Relation(GanttStatusBar;MessagePanel;setColor,Graphics,Color);
Relation(GanttStatusBar;MessagePanel;setPreferredSize,JComponent,Dimension);
Relation(GanttStatusBar;ProgressBarPanel;add,Container,Component);
Relation(GanttStatusBar;ProgressBarPanel;setPreferredSize,JComponent,Dimension);
Relation(GanttStatusBar;clear;setText,JLabel,String);
Relation(GanttStatusBar;getPreferredSize;getWidth,JComponent,N);
Relation(GanttStatusBar;hideText;getBackground,Component,N);
Relation(GanttStatusBar;hideText;getBlue,Color,N);
Relation(GanttStatusBar;hideText;getGreen,Color,N);
Relation(GanttStatusBar;hideText;getRed,Color,N);
Relation(GanttStatusBar;hideText;repaint,Component,N);
Relation(GanttStatusBar;hideText;sleep,Thread,long);
Relation(GanttStatusBar;reset;setText,JLabel,String);
Relation(GanttStatusBar;reset;setValue,JProgressBar,int);
Relation(GanttStatusBar;run;getTimer,MessagePanel,N);
Relation(GanttStatusBar;run;hideText,MessagePanel,N);
Relation(GanttStatusBar;run;printStackTrace,Throwable,N);
Relation(GanttStatusBar;run;setText,MessagePanel,String);
Relation(GanttStatusBar;run;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;run;sleep,Thread,long);
Relation(GanttStatusBar;setFirstText;isVisible,Component,N);
Relation(GanttStatusBar;setFirstText;setText,MessagePanel,String);
Relation(GanttStatusBar;setFirstText;setText,MessagePanel,String-int);
Relation(GanttStatusBar;setFirstText;start,Thread,N);
Relation(GanttStatusBar;setProgressValue;isVisible,Component,N);
Relation(GanttStatusBar;setProgressValue;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;setProgressValue;start,Thread,N);
Relation(GanttStatusBar;setSecondText;isVisible,Component,N);
Relation(GanttStatusBar;setSecondText;setText,MessagePanel,String);
Relation(GanttStatusBar;setSecondText;setText,MessagePanel,String-int);
Relation(GanttStatusBar;setSecondText;start,Thread,N);
Relation(GanttStatusBar;setText;setText,JLabel,String);
Relation(GanttStatusBar;setValue;setText,JLabel,String);
Relation(GanttStatusBar;setValue;setValue,JProgressBar,int);
Relation(GanttTree;dedentCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;downCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;indentCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;upCurrentNodes;setFirstText,GanttStatusBar,String-int);
end b186
start b187
Class(FinishFinishConstraintImpl,N,N,public);
Generalisation(FinishFinishConstraintImpl,ConstraintImpl);
Method(FinishFinishConstraintImpl,FinishFinishConstraintImpl,N,N,N,N,public);
Method(FinishFinishConstraintImpl,getCollision,Collision,N,N,N,public);
Parameter(FinishFinishConstraintImpl,getCollision,acceptableStartGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependantEndGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependantTask,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependeeEndGanttCalendar,local);
Parameter(FinishFinishConstraintImpl,getCollision,dependeeTask,local);
Parameter(FinishFinishConstraintImpl,getCollision,isActiveboolean,local);
Parameter(FinishFinishConstraintImpl,getCollision,resultCollision,local);
Relation(FinishFinishConstraintImpl;FinishFinishConstraintImpl;getInstance,GanttLanguage,N);
Relation(FinishFinishConstraintImpl;FinishFinishConstraintImpl;getText,GanttLanguage,String);
Relation(FinishFinishConstraintImpl;getCollision;compareTo,GanttCalendar,GanttCalendar);
Relation(FinishFinishConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(FinishFinishConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(FinishFinishConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(FinishFinishConstraintImpl;getCollision;getDuration,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;getEnd,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;getLength,TaskLength,N);
Relation(FinishFinishConstraintImpl;getCollision;getStart,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;isStartFixed,Task,N);
Relation(FinishFinishConstraintImpl;getCollision;newAdd,GanttCalendar,int);
end b187
start b188
Attribute(AlgorithmCollection,myCompletionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,N,private);
Class(RecalculateTaskCompletionPercentageAlgorithm,abstract,N,public);
Method(AlgorithmCollection,getRecalculateTaskCompletionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,N,N,N,public);
Method(RecalculateTaskCompletionPercentageAlgorithm,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,void,Y,N,N,private);
Method(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp,void,Y,N,N,private);
Method(RecalculateTaskCompletionPercentageAlgorithm,run,void,Y,N,N,public);
Parameter(AlgorithmCollection,AlgorithmCollection,completionPercentageAlgorithm,RecalculateTaskCompletionPercentageAlgorithm,declaration);
Parameter(GanttProject,newTask,alg2RecalculateTaskCompletionPercentageAlgorithm,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,completedDaysint,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,completionPercentageint,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,nestedTasksTask[],local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,nextDurationlong,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,nextTask,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,plannedDayslong,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentage,task,Task,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp,facade,TaskContainmentHierarchyFacade,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,recalculateSupertaskCompletionPercentageBottomUp,task,Task,declaration);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,run,facadeTaskContainmentHierarchyFacade,local);
Parameter(RecalculateTaskCompletionPercentageAlgorithm,run,task,Task,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg4RecalculateTaskCompletionPercentageAlgorithm,local);
Relation(GanttProject;newTask;run,RecalculateTaskCompletionPercentageAlgorithm,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getCompletionPercentage,Task,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getDuration,Task,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getLength,TaskLength,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentage;setCompletionPercentage,MutableTask,int);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;getContainer,TaskContainmentHierarchyFacade,Task);
Relation(RecalculateTaskCompletionPercentageAlgorithm;recalculateSupertaskCompletionPercentageBottomUp;recalculateSupertaskCompletionPercentage,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
Relation(RecalculateTaskCompletionPercentageAlgorithm;run;createContainmentFacade,RecalculateTaskCompletionPercentageAlgorithm,N);
Relation(RecalculateTaskCompletionPercentageAlgorithm;run;recalculateSupertaskCompletionPercentageBottomUp,RecalculateTaskCompletionPercentageAlgorithm,Task-TaskContainmentHierarchyFacade);
end b188
start b189
Attribute(FontRecord,myLocation,URI,N,private);
Attribute(FontRecord,myMetricsLocation,URI,N,private);
Attribute(FontRecord,myTTFFile,TTFFileExt,N,private);
Attribute(FontRecord,myTriplets,ArrayList,N,private);
Class(FontRecord,N,N,public);
Method(FontRecord,FontRecord,N,Y,N,N,public);
Method(FontRecord,addTriplet,void,Y,N,N,public);
Method(FontRecord,getFontLocation,URI,N,N,N,public);
Method(FontRecord,getFontTriplets,FontTriplet[],N,N,N,public);
Method(FontRecord,getMetricsLocation,URI,N,N,N,public);
Method(FontRecord,getTTFFile,TTFFileExt,N,N,N,public);
Method(FontRecord,toString,String,N,N,N,public);
Parameter(FontRecord,FontRecord,fontFile,File,declaration);
Parameter(FontRecord,FontRecord,fontLocation,URI,declaration);
Parameter(FontRecord,FontRecord,metricsLocation,URI,declaration);
Parameter(FontRecord,FontRecord,metricsStorage,FontMetricsStorage,declaration);
Parameter(FontRecord,addTriplet,triplet,FontTriplet,declaration);
Parameter(GanttPDFExport,createConfiguration,nextRecordFontRecord,local);
Parameter(JDKFontLocator,getFontRecords,recordFontRecord,local);
Parameter(JDKFontLocator,populateWithTriplets,record,FontRecord,declaration);
Parameter(PDFExportProcessor,createConfiguration,nextRecordFontRecord,local);
Relation(FontRecord;FontRecord;getFontMetricsURI,FontMetricsStorage,TTFFileExt);
Relation(FontRecord;FontRecord;toURI,File,N);
Relation(FontRecord;addTriplet;add,ArrayList,Object);
Relation(FontRecord;getFontTriplets;toArray,ArrayList,Object[]);
Relation(GanttPDFExport;createConfiguration;getFontLocation,FontRecord,N);
Relation(GanttPDFExport;createConfiguration;getFontTriplets,FontRecord,N);
Relation(GanttPDFExport;createConfiguration;getMetricsLocation,FontRecord,N);
Relation(JDKFontLocator;getFontRecords;getMetricsLocation,FontRecord,N);
Relation(JDKFontLocator;getFontRecords;populateWithTriplets,JDKFontLocator,FontRecord);
Relation(JDKFontLocator;populateWithTriplets;addTriplet,FontRecord,FontTriplet);
Relation(JDKFontLocator;populateWithTriplets;getTTFFile,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getFontLocation,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getFontTriplets,FontRecord,N);
Relation(PDFExportProcessor;createConfiguration;getMetricsLocation,FontRecord,N);
end b189
start b190
Class(ParsingListener,N,N,public);
Method(ParsingListener,parsingFinished,void,N,N,N,public);
Method(ParsingListener,parsingStarted,void,N,N,N,public);
Parameter(GanttXMLOpen,addParsingListener,listener,ParsingListener,declaration);
Parameter(GanttXMLOpen,endDocument,lParsingListener,local);
Relation(GanttProject;openDocument;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttProject;openXMLStream;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttXMLOpen;endDocument;parsingFinished,ParsingListener,N);
end b190
start b191
Class(ChartModel,N,N,public);
Method(ChartModel,getChartHeader,ChartHeader,N,N,N,package);
Method(ChartModel,setBottomTimeUnit,void,Y,N,N,package);
Method(ChartModel,setBottomUnitWidth,void,Y,N,N,package);
Method(ChartModel,setBounds,void,Y,N,N,package);
Method(ChartModel,setStartDate,void,Y,N,N,package);
Method(ChartModel,setTopTimeUnit,void,Y,N,N,package);
Parameter(ChartModel,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(ChartModel,setBottomUnitWidth,pixelsWidth,int,declaration);
Parameter(ChartModel,setBounds,bounds,Dimension,declaration);
Parameter(ChartModel,setStartDate,startDate,Date,declaration);
Parameter(ChartModel,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Parameter(GanttGraphicArea,paintCalendar2New,modelChartModel,local);
Relation(GanttGraphicArea;paintCalendar2New;getChartHeader,ChartModel,N);
Relation(GanttGraphicArea;paintCalendar2New;setBottomTimeUnit,ChartModel,TimeUnit);
Relation(GanttGraphicArea;paintCalendar2New;setBottomUnitWidth,ChartModel,int);
Relation(GanttGraphicArea;paintCalendar2New;setBounds,ChartModel,Dimension);
Relation(GanttGraphicArea;paintCalendar2New;setStartDate,ChartModel,Date);
Relation(GanttGraphicArea;paintCalendar2New;setTopTimeUnit,ChartModel,TimeUnit);
end b191
start b192
Attribute(DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,N,package);
Attribute(GanttResourcePanel,area,ResourceLoadGraphicArea,N,public);
Attribute(ResourceLoadGraphicArea,FOUR_MONTH,int,static,public);
Attribute(ResourceLoadGraphicArea,ONE_MONTH,int,static,public);
Attribute(ResourceLoadGraphicArea,ONE_WEEK,int,static,public);
Attribute(ResourceLoadGraphicArea,ONE_YEAR,int,static,public);
Attribute(ResourceLoadGraphicArea,SIX_MONTH,int,static,public);
Attribute(ResourceLoadGraphicArea,THREE_MONTH,int,static,public);
Attribute(ResourceLoadGraphicArea,THREE_YEAR,int,static,public);
Attribute(ResourceLoadGraphicArea,TWO_MONTH,int,static,public);
Attribute(ResourceLoadGraphicArea,TWO_WEEK,int,static,public);
Attribute(ResourceLoadGraphicArea,TWO_YEAR,int,static,public);
Attribute(ResourceLoadGraphicArea,addTaskLength,float,N,private);
Attribute(ResourceLoadGraphicArea,appli,GanttProject,N,private);
Attribute(ResourceLoadGraphicArea,arrayColor,Color[],N,private);
Attribute(ResourceLoadGraphicArea,beg,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,curs,boolean,N,package);
Attribute(ResourceLoadGraphicArea,date,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,draw3dBorders,boolean,N,private);
Attribute(ResourceLoadGraphicArea,drawName,boolean,N,private);
Attribute(ResourceLoadGraphicArea,drawPercent,boolean,N,private);
Attribute(ResourceLoadGraphicArea,drawVersion,boolean,N,private);
Attribute(ResourceLoadGraphicArea,drawdepend,boolean,N,private);
Attribute(ResourceLoadGraphicArea,end,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,language,GanttLanguage,N,private);
Attribute(ResourceLoadGraphicArea,listOfParam,ArrayList,N,private);
Attribute(ResourceLoadGraphicArea,listOfTask,ArrayList,N,private);
Attribute(ResourceLoadGraphicArea,loads,ArrayList,N,private);
Attribute(ResourceLoadGraphicArea,margY,int,N,private);
Attribute(ResourceLoadGraphicArea,mouseButton,int,N,public);
Attribute(ResourceLoadGraphicArea,moveTask,int,N,private);
Attribute(ResourceLoadGraphicArea,moveView,boolean,N,private);
Attribute(ResourceLoadGraphicArea,oldX,int,N,private);
Attribute(ResourceLoadGraphicArea,oldY,int,N,private);
Attribute(ResourceLoadGraphicArea,olddate,GanttCalendar,N,public);
Attribute(ResourceLoadGraphicArea,printRendering,boolean,N,private);
Attribute(ResourceLoadGraphicArea,rowCount,int,N,private);
Attribute(ResourceLoadGraphicArea,storeTaskLength,int,N,private);
Attribute(ResourceLoadGraphicArea,storeTaskStart,GanttCalendar,N,private);
Attribute(ResourceLoadGraphicArea,storeX,int[],N,private);
Attribute(ResourceLoadGraphicArea,table,JTable,N,public);
Attribute(ResourceLoadGraphicArea,taskDefaultColor,Color,static,public);
Attribute(ResourceLoadGraphicArea,tree,GanttTree,N,public);
Attribute(ResourceLoadGraphicArea,typeSeletion,int,N,package);
Attribute(ResourceLoadGraphicArea,upperLeft,Point,N,private);
Attribute(ResourceLoadGraphicArea,zoomValue,int,N,private);
Class(ResourceLoadGraphicArea,N,N,public);
Generalisation(ResourceLoadGraphicArea,JPanel);
Method(ResourceLoadGraphicArea,ResourceLoadGraphicArea,N,Y,N,N,public);
Method(ResourceLoadGraphicArea,calculateLoad,void,Y,N,N,private);
Method(ResourceLoadGraphicArea,changeDate,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,changeDate2,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,drawGPVersion,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,drawVerticalLinedash,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,export,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,getChart,BufferedImage,Y,N,N,public);
Method(ResourceLoadGraphicArea,getDate,GanttCalendar,N,N,N,public);
Method(ResourceLoadGraphicArea,getFoot,int,N,N,N,public);
Method(ResourceLoadGraphicArea,getGranit,int,Y,N,N,public);
Method(ResourceLoadGraphicArea,getPreferredSize,Dimension,N,N,N,public);
Method(ResourceLoadGraphicArea,getScrollBar,int,N,N,N,public);
Method(ResourceLoadGraphicArea,getZoom,int,N,N,N,public);
Method(ResourceLoadGraphicArea,indexOf,int,Y,N,N,public);
Method(ResourceLoadGraphicArea,mouseClicked,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,mouseEntered,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,mouseExited,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,mousePressed,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,mouseReleased,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,mouseWheelMoved,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintAResourceLoad,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintCalendar1,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintCalendar2,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintComponent,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintEndBorder,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,paintLoads,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,printProject,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,printResources,void,Y,N,N,private);
Method(ResourceLoadGraphicArea,setDate,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,setLanguage,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,setScrollBar,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,setZoom,void,Y,N,N,public);
Method(ResourceLoadGraphicArea,zoomLess,void,N,N,N,public);
Method(ResourceLoadGraphicArea,zoomMore,void,N,N,N,public);
Method(ResourceLoadGraphicArea,zoomToBegin,void,N,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,declaration);
Parameter(GanttHTMLExport,save,rarea,ResourceLoadGraphicArea,declaration);
Parameter(GanttPDFExport,save,rarea,ResourceLoadGraphicArea,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,app,GanttProject,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,fint,local);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,table,JTable,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,tree,GanttTree,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,xint,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,assignmentsResourceAssignment[],local);
Parameter(ResourceLoadGraphicArea,calculateLoad,displayEndGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,displayStartGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,durationint,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,intLoadint,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,loInteger,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,loadHashtable,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,nextResourceAssignment,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,startint,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,taskTask,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,tasks,ArrayList,declaration);
Parameter(ResourceLoadGraphicArea,changeDate,fint,local);
Parameter(ResourceLoadGraphicArea,changeDate,next,boolean,declaration);
Parameter(ResourceLoadGraphicArea,changeDate2,gc,GanttCalendar,declaration);
Parameter(ResourceLoadGraphicArea,drawGPVersion,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,endint,local);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,iint,local);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,size,int,declaration);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,size2int,local);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,x,int,declaration);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,y1,int,declaration);
Parameter(ResourceLoadGraphicArea,drawVerticalLinedash,y2,int,declaration);
Parameter(ResourceLoadGraphicArea,export,file,File,declaration);
Parameter(ResourceLoadGraphicArea,export,format,String,declaration);
Parameter(ResourceLoadGraphicArea,export,imageBufferedImage,local);
Parameter(ResourceLoadGraphicArea,export,settings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,getChart,calculateWidthint,local);
Parameter(ResourceLoadGraphicArea,getChart,date2GanttCalendar,local);
Parameter(ResourceLoadGraphicArea,getChart,fmetricFontMetrics,local);
Parameter(ResourceLoadGraphicArea,getChart,gGraphics,local);
Parameter(ResourceLoadGraphicArea,getChart,heightint,local);
Parameter(ResourceLoadGraphicArea,getChart,image2BufferedImage,local);
Parameter(ResourceLoadGraphicArea,getChart,imageBufferedImage,local);
Parameter(ResourceLoadGraphicArea,getChart,nameOfResString,local);
Parameter(ResourceLoadGraphicArea,getChart,nbcharint,local);
Parameter(ResourceLoadGraphicArea,getChart,oldHeightint,local);
Parameter(ResourceLoadGraphicArea,getChart,oldMargYint,local);
Parameter(ResourceLoadGraphicArea,getChart,renderingint,local);
Parameter(ResourceLoadGraphicArea,getChart,resManResourceManager,local);
Parameter(ResourceLoadGraphicArea,getChart,settings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,getChart,sizeTOCint,local);
Parameter(ResourceLoadGraphicArea,getChart,startGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,getChart,tmpImageBufferedImage,local);
Parameter(ResourceLoadGraphicArea,getChart,transx2int,local);
Parameter(ResourceLoadGraphicArea,getChart,transxint,local);
Parameter(ResourceLoadGraphicArea,getChart,usersArrayList,local);
Parameter(ResourceLoadGraphicArea,getChart,widthint,local);
Parameter(ResourceLoadGraphicArea,getFoot,resint,local);
Parameter(ResourceLoadGraphicArea,getGranit,calGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,getGranit,day,boolean,declaration);
Parameter(ResourceLoadGraphicArea,getGranit,resint,local);
Parameter(ResourceLoadGraphicArea,indexOf,coef,String,declaration);
Parameter(ResourceLoadGraphicArea,indexOf,listOfParam,ArrayList,declaration);
Parameter(ResourceLoadGraphicArea,mouseClicked,e,MouseEvent,declaration);
Parameter(ResourceLoadGraphicArea,mouseEntered,e,MouseEvent,declaration);
Parameter(ResourceLoadGraphicArea,mouseExited,e,MouseEvent,declaration);
Parameter(ResourceLoadGraphicArea,mousePressed,e,MouseEvent,declaration);
Parameter(ResourceLoadGraphicArea,mouseReleased,e,MouseEvent,declaration);
Parameter(ResourceLoadGraphicArea,mouseWheelMoved,e,MouseWheelEvent,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,color,Color,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,dint,local);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,first_cellboolean,local);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,oldState,boolean,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,state,boolean,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,taskName,String,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,x1,int,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,x2,int,declaration);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,xdint,local);
Parameter(ResourceLoadGraphicArea,paintAResourceLoad,y,int,declaration);
Parameter(ResourceLoadGraphicArea,paintCalendar1,dateToPaintGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,drawDateint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,fgrafloat,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintCalendar1,gra2int,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,graint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,headeryint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,sDayString,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,sMonthString,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,sfloat,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,sizexint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,sizeyint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,tmpdateGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar1,todayGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,calGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,dmString,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,dy2int,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,dyint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,fgrafloat,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintCalendar2,gra2int,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,headeryint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,posXfloat,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,sDayString,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,sMonthString,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,sizexint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,sizeyint,local);
Parameter(ResourceLoadGraphicArea,paintCalendar2,tmpdateGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintComponent,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintEndBorder,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintEndBorder,x2,int,declaration);
Parameter(ResourceLoadGraphicArea,paintEndBorder,y,int,declaration);
Parameter(ResourceLoadGraphicArea,paintLoads,durationint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,e1int,local);
Parameter(ResourceLoadGraphicArea,paintLoads,fgrafloat,local);
Parameter(ResourceLoadGraphicArea,paintLoads,firstStartGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintLoads,foisint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,fx1float,local);
Parameter(ResourceLoadGraphicArea,paintLoads,fx2float,local);
Parameter(ResourceLoadGraphicArea,paintLoads,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,paintLoads,headeryint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,intLoadint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,keyString,local);
Parameter(ResourceLoadGraphicArea,paintLoads,lastEndGanttCalendar,local);
Parameter(ResourceLoadGraphicArea,paintLoads,listOfTaskArrayList,local);
Parameter(ResourceLoadGraphicArea,paintLoads,loadHashtable,local);
Parameter(ResourceLoadGraphicArea,paintLoads,oldStateboolean[],local);
Parameter(ResourceLoadGraphicArea,paintLoads,percentint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,resManHumanResourceManager,local);
Parameter(ResourceLoadGraphicArea,paintLoads,sizexint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,sizeyint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,stateboolean[],local);
Parameter(ResourceLoadGraphicArea,paintLoads,taskTask,local);
Parameter(ResourceLoadGraphicArea,paintLoads,typeint,local);
Parameter(ResourceLoadGraphicArea,paintLoads,usersArrayList,local);
Parameter(ResourceLoadGraphicArea,paintLoads,x1int,local);
Parameter(ResourceLoadGraphicArea,paintLoads,x2int,local);
Parameter(ResourceLoadGraphicArea,printProject,imageBufferedImage,local);
Parameter(ResourceLoadGraphicArea,printProject,printJobPrinterJob,local);
Parameter(ResourceLoadGraphicArea,printProject,settings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,printResources,g,Graphics,declaration);
Parameter(ResourceLoadGraphicArea,printResources,nameOfResString,local);
Parameter(ResourceLoadGraphicArea,printResources,resManResourceManager,local);
Parameter(ResourceLoadGraphicArea,printResources,usersArrayList,local);
Parameter(ResourceLoadGraphicArea,printResources,yint,local);
Parameter(ResourceLoadGraphicArea,setDate,d,GanttCalendar,declaration);
Parameter(ResourceLoadGraphicArea,setLanguage,language,GanttLanguage,declaration);
Parameter(ResourceLoadGraphicArea,setScrollBar,v,int,declaration);
Parameter(ResourceLoadGraphicArea,setZoom,z,int,declaration);
Parameter(ResourceLoadGraphicArea,zoomToBegin,dString,local);
Relation(GanttGraphicArea;GanttGraphicArea;setZoom,ResourceLoadGraphicArea,int);
Relation(GanttGraphicArea;GanttGraphicArea;zoomLess,ResourceLoadGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomMore,ResourceLoadGraphicArea,N);
Relation(GanttHTMLExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttPDFExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttProject;addButtons;changeDate,ResourceLoadGraphicArea,boolean);
Relation(GanttProject;addButtons;zoomLess,ResourceLoadGraphicArea,N);
Relation(GanttProject;addButtons;zoomMore,ResourceLoadGraphicArea,N);
Relation(GanttProject;addButtons;zoomToBegin,ResourceLoadGraphicArea,N);
Relation(GanttProject;doExport;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;previewPrint;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(GanttProject;printProject;printProject,ResourceLoadGraphicArea,GanttExportSettings);
Relation(GanttProject;setResourcePanelToGraphicArea;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttProject;setResourcePanelToGraphicArea;setZoom,ResourceLoadGraphicArea,int);
Relation(GanttResourcePanel;adjustmentValueChanged;setScrollBar,ResourceLoadGraphicArea,int);
Relation(GanttXMLOpen;startElement;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setZoom,ResourceLoadGraphicArea,int);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;addMouseListener,Component,MouseListener);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;addMouseWheelListener,Component,MouseWheelListener);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getButton,MouseEvent,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getInstance,GanttLanguage,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getWheelRotation,MouseWheelEvent,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getX,MouseEvent,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getY,MouseEvent,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;repaint,Component,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setCursor,Component,Cursor);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setDay,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setEnabled,TestGanttRolloverButton,boolean);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setZoom,GanttGraphicArea,int);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomLess,GanttGraphicArea,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomLess,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomMore,GanttGraphicArea,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomMore,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomToBegin,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;calculateLoad;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;calculateLoad;add,ArrayList,Object);
Relation(ResourceLoadGraphicArea;calculateLoad;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;calculateLoad;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;calculateLoad;diff,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;calculateLoad;get,ArrayList,int);
Relation(ResourceLoadGraphicArea;calculateLoad;get,Hashtable,Object);
Relation(ResourceLoadGraphicArea;calculateLoad;getAssignments,Task,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getEnd,Task,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getGranit,ResourceLoadGraphicArea,boolean);
Relation(ResourceLoadGraphicArea;calculateLoad;getLoad,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getName,ProjectResource,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getResource,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getStart,Task,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getUserObject,DefaultMutableTreeNode,N);
Relation(ResourceLoadGraphicArea;calculateLoad;intValue,Integer,N);
Relation(ResourceLoadGraphicArea;calculateLoad;put,Hashtable,Object-Object);
Relation(ResourceLoadGraphicArea;calculateLoad;set,ArrayList,int-Object);
Relation(ResourceLoadGraphicArea;calculateLoad;size,ArrayList,N);
Relation(ResourceLoadGraphicArea;changeDate2;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;changeDate;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;drawGPVersion;drawString,Graphics,String-int-int);
Relation(ResourceLoadGraphicArea;drawGPVersion;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;drawGPVersion;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;drawGPVersion;setFont,Graphics,Font);
Relation(ResourceLoadGraphicArea;drawVerticalLinedash;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;export;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(ResourceLoadGraphicArea;export;println,PrintStream,Object);
Relation(ResourceLoadGraphicArea;export;println,PrintStream,String);
Relation(ResourceLoadGraphicArea;export;write,ImageIO,RenderedImage-String-File);
Relation(ResourceLoadGraphicArea;getChart;calcProjectBegAndEnd,GanttGraphicArea,N);
Relation(ResourceLoadGraphicArea;getChart;changeDate,ResourceLoadGraphicArea,boolean);
Relation(ResourceLoadGraphicArea;getChart;changeDate2,ResourceLoadGraphicArea,GanttCalendar);
Relation(ResourceLoadGraphicArea;getChart;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;getChart;drawGPVersion,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;getChart;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(ResourceLoadGraphicArea;getChart;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;getChart;getFontMetrics,Graphics,Font);
Relation(ResourceLoadGraphicArea;getChart;getGraphics,BufferedImage,N);
Relation(ResourceLoadGraphicArea;getChart;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;getChart;getHumanResourceManager,GanttProject,N);
Relation(ResourceLoadGraphicArea;getChart;getResources,ResourceManager,N);
Relation(ResourceLoadGraphicArea;getChart;getSize,Component,N);
Relation(ResourceLoadGraphicArea;getChart;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;getChart;hasNext,Iterator,N);
Relation(ResourceLoadGraphicArea;getChart;iterator,ArrayList,N);
Relation(ResourceLoadGraphicArea;getChart;next,Iterator,N);
Relation(ResourceLoadGraphicArea;getChart;paintComponent,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;getChart;printResources,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;getChart;repaint,Component,N);
Relation(ResourceLoadGraphicArea;getChart;setSize,Component,int-int);
Relation(ResourceLoadGraphicArea;getChart;size,ArrayList,N);
Relation(ResourceLoadGraphicArea;getChart;stringWidth,FontMetrics,String);
Relation(ResourceLoadGraphicArea;getChart;toString,ProjectResource,N);
Relation(ResourceLoadGraphicArea;getChart;translate,Graphics,int-int);
Relation(ResourceLoadGraphicArea;getChart;zoomToBegin,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;getFoot;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;getGranit;go,GanttCalendar,int-int);
Relation(ResourceLoadGraphicArea;getGranit;goNextMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;indexOf;get,ArrayList,int);
Relation(ResourceLoadGraphicArea;indexOf;size,ArrayList,N);
Relation(ResourceLoadGraphicArea;indexOf;toString,Object,N);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;drawString,Graphics,String-int-int);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;fillRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;paintAResourceLoad;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;paintCalendar1;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;paintCalendar1;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar1;drawString,Graphics,String-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar1;drawVerticalLinedash,ResourceLoadGraphicArea,Graphics-int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar1;equals,String,Object);
Relation(ResourceLoadGraphicArea;paintCalendar1;fillRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar1;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getDay,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;getFoot,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getGranit,ResourceLoadGraphicArea,boolean);
Relation(ResourceLoadGraphicArea;paintCalendar1;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getMonth,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getdayMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getdayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;newAdd,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar1;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;paintCalendar1;setFont,Graphics,Font);
Relation(ResourceLoadGraphicArea;paintCalendar1;toString,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;paintCalendar2;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar2;drawRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar2;drawString,Graphics,String-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar2;equals,String,Object);
Relation(ResourceLoadGraphicArea;paintCalendar2;fillRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintCalendar2;getDate,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getDay,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;paintCalendar2;getFoot,ResourceLoadGraphicArea,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getGranit,ResourceLoadGraphicArea,boolean);
Relation(ResourceLoadGraphicArea;paintCalendar2;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getNumberOfDay,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getText,GanttLanguage,String);
Relation(ResourceLoadGraphicArea;paintCalendar2;getWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getdayMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;getdayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;goNextMonth,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;length,String,N);
Relation(ResourceLoadGraphicArea;paintCalendar2;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;paintCalendar2;setFont,Graphics,Font);
Relation(ResourceLoadGraphicArea;paintCalendar2;substring,String,int-int);
Relation(ResourceLoadGraphicArea;paintCalendar2;toString,Integer,N);
Relation(ResourceLoadGraphicArea;paintComponent;drawGPVersion,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;paintComponent;paintCalendar1,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;paintComponent;paintCalendar2,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;paintComponent;paintLoads,ResourceLoadGraphicArea,Graphics);
Relation(ResourceLoadGraphicArea;paintEndBorder;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;paintEndBorder;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;paintEndBorder;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;paintLoads;calculateLoad,ResourceLoadGraphicArea,ArrayList);
Relation(ResourceLoadGraphicArea;paintLoads;clear,ArrayList,N);
Relation(ResourceLoadGraphicArea;paintLoads;compareTo,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;paintLoads;diff,GanttCalendar,GanttCalendar);
Relation(ResourceLoadGraphicArea;paintLoads;get,ArrayList,int);
Relation(ResourceLoadGraphicArea;paintLoads;get,Hashtable,Object);
Relation(ResourceLoadGraphicArea;paintLoads;getAllTasks,GanttTree,N);
Relation(ResourceLoadGraphicArea;paintLoads;getEnd,Task,N);
Relation(ResourceLoadGraphicArea;paintLoads;getGranit,ResourceLoadGraphicArea,boolean);
Relation(ResourceLoadGraphicArea;paintLoads;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;paintLoads;getHumanResourceManager,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintLoads;getResourceColor,UIConfiguration,N);
Relation(ResourceLoadGraphicArea;paintLoads;getResourceOverloadColor,UIConfiguration,N);
Relation(ResourceLoadGraphicArea;paintLoads;getResources,HumanResourceManager,N);
Relation(ResourceLoadGraphicArea;paintLoads;getStart,Task,N);
Relation(ResourceLoadGraphicArea;paintLoads;getUIConfiguration,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintLoads;getUserObject,DefaultMutableTreeNode,N);
Relation(ResourceLoadGraphicArea;paintLoads;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;paintLoads;intValue,Integer,N);
Relation(ResourceLoadGraphicArea;paintLoads;paintAResourceLoad,ResourceLoadGraphicArea,Graphics-int-int-int-String-Color-boolean-boolean);
Relation(ResourceLoadGraphicArea;paintLoads;setFont,Graphics,Font);
Relation(ResourceLoadGraphicArea;paintLoads;size,ArrayList,N);
Relation(ResourceLoadGraphicArea;paintLoads;toString,ProjectResource,N);
Relation(ResourceLoadGraphicArea;printProject;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(ResourceLoadGraphicArea;printProject;getPrinterJob,PrinterJob,N);
Relation(ResourceLoadGraphicArea;printProject;print,PrinterJob,N);
Relation(ResourceLoadGraphicArea;printProject;printDialog,PrinterJob,N);
Relation(ResourceLoadGraphicArea;printProject;printStackTrace,Throwable,N);
Relation(ResourceLoadGraphicArea;printProject;println,PrintStream,String);
Relation(ResourceLoadGraphicArea;printProject;setPrintable,PrinterJob,Printable);
Relation(ResourceLoadGraphicArea;printResources;drawLine,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;printResources;drawRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;printResources;drawString,Graphics,String-int-int);
Relation(ResourceLoadGraphicArea;printResources;fillRect,Graphics,int-int-int-int);
Relation(ResourceLoadGraphicArea;printResources;getHeight,JComponent,N);
Relation(ResourceLoadGraphicArea;printResources;getHumanResourceManager,GanttProject,N);
Relation(ResourceLoadGraphicArea;printResources;getResources,ResourceManager,N);
Relation(ResourceLoadGraphicArea;printResources;getWidth,JComponent,N);
Relation(ResourceLoadGraphicArea;printResources;hasNext,Iterator,N);
Relation(ResourceLoadGraphicArea;printResources;iterator,ArrayList,N);
Relation(ResourceLoadGraphicArea;printResources;next,Iterator,N);
Relation(ResourceLoadGraphicArea;printResources;setColor,Graphics,Color);
Relation(ResourceLoadGraphicArea;printResources;setFont,Graphics,Font);
Relation(ResourceLoadGraphicArea;printResources;toString,ProjectResource,N);
Relation(ResourceLoadGraphicArea;zoomLess;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomLess;getYear,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomMore;Clone,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomToBegin;add,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;zoomToBegin;equals,String,Object);
Relation(ResourceLoadGraphicArea;zoomToBegin;getDay,GanttLanguage,int);
Relation(ResourceLoadGraphicArea;zoomToBegin;getDayWeek,GanttCalendar,N);
Relation(ResourceLoadGraphicArea;zoomToBegin;setDay,GanttCalendar,int);
Relation(ResourceLoadGraphicArea;zoomToBegin;setMonth,GanttCalendar,int);
end b192
start b193
Attribute(GanttOptions,myRoleManager,RoleManager,N,private);
Attribute(ImportResources,myRoleManager,RoleManager,N,private);
Attribute(NewHumanAction,myRoleManager,RoleManager,N,private);
Attribute(ResourceActionSet,myRoleManager,RoleManager,N,private);
Attribute(ResourceTagHandler,myRoleManager,RoleManager,N,private);
Attribute(RoleManager,DEFAULT_ROLES_NUMBER,int,static,public);
Attribute(RoleManager,ourInstance,RoleManager,static,private);
Attribute(RoleTagHandler,myRoleManager,RoleManager,N,private);
Attribute(RolesTableModel,myRoleManager,RoleManager,N,private);
Class(RoleManager,N,N,public);
Method(GanttOptions,getRoleManager,RoleManager,N,N,N,private);
Method(GanttProject,getRoleManager,RoleManager,N,N,N,public);
Method(IGanttProject,getRoleManager,RoleManager,N,N,N,package);
Method(RoleManager,add,void,Y,N,N,public);
Method(RoleManager,clear,void,N,N,N,public);
Method(RoleManager,createRoleSet,RoleSet,Y,N,N,public);
Method(RoleManager,getDefaultRole,Role,N,N,N,public);
Method(RoleManager,getEnabledRoles,Role[],N,N,N,public);
Method(RoleManager,getInstance,RoleManager,N,N,static,public);
Method(RoleManager,getProjectLevelRoles,Role[],N,N,N,public);
Method(RoleManager,getProjectRoleSet,RoleSet,N,N,N,public);
Method(RoleManager,getRoleSet,RoleSet,Y,N,N,public);
Method(RoleManager,getRoleSets,RoleSet[],N,N,N,public);
Method(RoleTagHandler,getRoleManager,RoleManager,N,N,N,private);
Method(RolesTableModel,getRoleManager,RoleManager,N,N,N,public);
Parameter(GanttOptions,GanttOptions,roleManager,RoleManager,declaration);
Parameter(GanttProject,importcbk,roleManagerRoleManager,local);
Parameter(GanttProject,openDocument,roleManagerRoleManager,local);
Parameter(GanttProject,openXMLStream,roleManagerRoleManager,local);
Parameter(GanttXMLSaver,saveRoles,roleManagerRoleManager,local);
Parameter(ImportResources,ImportResources,roleManager,RoleManager,declaration);
Parameter(NewHumanAction,NewHumanAction,roleManager,RoleManager,declaration);
Parameter(ResourceTagHandler,ResourceTagHandler,roleManager,RoleManager,declaration);
Parameter(RoleManager,add,ID,int,declaration);
Parameter(RoleManager,add,role,String,declaration);
Parameter(RoleManager,createRoleSet,name,String,declaration);
Parameter(RoleManager,getRoleSet,rolesetName,String,declaration);
Parameter(RoleTagHandler,RoleTagHandler,roleManager,RoleManager,declaration);
Parameter(RolesSettingsPanel,applyChanges,roleManagerRoleManager,local);
Relation(GanttDialogPerson;initComponents;getEnabledRoles,RoleManager,N);
Relation(GanttOptions;saveRoleSets;getRoleSets,RoleManager,N);
Relation(GanttProject;closeProject;clear,RoleManager,N);
Relation(GanttProject;getHumanResourceManager;getDefaultRole,RoleManager,N);
Relation(GanttProject;openXMLStream;clear,RoleManager,N);
Relation(GanttXMLSaver;saveRoles;getProjectRoleSet,RoleManager,N);
Relation(GanttXMLSaver;saveRoles;getRoleSets,RoleManager,N);
Relation(GanttXMLSaver;writeRoles;getProjectLevelRoles,RoleManager,N);
Relation(NewHumanAction;actionPerformed;getDefaultRole,RoleManager,N);
Relation(NewProjectWizard;createNewProject;getRoleSets,RoleManager,N);
Relation(ResourceTagHandler;findRole;getProjectRoleSet,RoleManager,N);
Relation(ResourceTagHandler;findRole;getRoleSet,RoleManager,String);
Relation(RoleTagHandler;RoleTagHandler;clear,RoleManager,N);
Relation(RoleTagHandler;findRoleSet;createRoleSet,RoleManager,String);
Relation(RoleTagHandler;findRoleSet;getProjectRoleSet,RoleManager,N);
Relation(RoleTagHandler;findRoleSet;getRoleSet,RoleManager,String);
Relation(RolesTableModel;RolesTableModel;getProjectLevelRoles,RoleManager,N);
Relation(RolesTableModel;applyChanges;add,RoleManager,int-String);
Relation(RolesTableModel;applyChanges;getProjectRoleSet,RoleManager,N);
Relation(RolesTableModel;hasChanges;getProjectLevelRoles,RoleManager,N);
end b193
start b194
Class(GanttXSLFileFilter,N,N,public);
Generalisation(GanttXSLFileFilter,FileFilter);
Method(GanttXSLFileFilter,accept,boolean,Y,N,N,public);
Method(GanttXSLFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttXSLFileFilter,accept,f,File,declaration);
Relation(GanttXSLFileFilter;accept;endsWith,String,String);
Relation(GanttXSLFileFilter;accept;getName,File,N);
Relation(GanttXSLFileFilter;accept;isDirectory,File,N);
Relation(GanttXSLFileFilter;accept;toLowerCase,String,N);
Relation(GanttXSLFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttXSLFileFilter;getDescription;getText,GanttLanguage,String);
end b194
start b195
Class(AboutLicensePanel,N,N,public);
Generalisation(AboutLicensePanel,GeneralOptionPanel);
Method(AboutLicensePanel,AboutLicensePanel,N,Y,N,N,public);
Method(AboutLicensePanel,applyChanges,boolean,Y,N,N,public);
Method(AboutLicensePanel,initialize,void,N,N,N,public);
Parameter(AboutLicensePanel,AboutLicensePanel,licensePanelJPanel,local);
Parameter(AboutLicensePanel,AboutLicensePanel,parent,GanttProject,declaration);
Parameter(AboutLicensePanel,AboutLicensePanel,taLicenseJTextArea,local);
Parameter(AboutLicensePanel,AboutLicensePanel,textStringBuffer,local);
Parameter(AboutLicensePanel,applyChanges,askForApply,boolean,declaration);
Relation(AboutLicensePanel;AboutLicensePanel;add,Container,Component);
Relation(AboutLicensePanel;AboutLicensePanel;add,Container,Component-Object);
Relation(AboutLicensePanel;AboutLicensePanel;append,StringBuffer,String);
Relation(AboutLicensePanel;AboutLicensePanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(AboutLicensePanel;AboutLicensePanel;getComponentOrientation,GanttLanguage,N);
Relation(AboutLicensePanel;AboutLicensePanel;getInstance,GanttLanguage,N);
Relation(AboutLicensePanel;AboutLicensePanel;getText,GanttLanguage,String);
Relation(AboutLicensePanel;AboutLicensePanel;setEditable,JTextComponent,boolean);
Relation(AboutLicensePanel;AboutLicensePanel;setLineWrap,JTextArea,boolean);
Relation(AboutLicensePanel;AboutLicensePanel;setPreferredSize,JComponent,Dimension);
Relation(AboutLicensePanel;AboutLicensePanel;setText,JTextComponent,String);
Relation(AboutLicensePanel;AboutLicensePanel;setWrapStyleWord,JTextArea,boolean);
Relation(AboutLicensePanel;AboutLicensePanel;toString,StringBuffer,N);
end b195
start b196
Attribute(GanttXMLOpen,area,GanttGraphicArea,N,package);
Attribute(GanttXMLOpen,bImport,boolean,N,package);
Attribute(GanttXMLOpen,indent,String,N,package);
Attribute(GanttXMLOpen,language,GanttLanguage,N,package);
Attribute(GanttXMLOpen,lod,ArrayList,N,package);
Attribute(GanttXMLOpen,lot,ArrayList,N,package);
Attribute(GanttXMLOpen,marge,String,N,package);
Attribute(GanttXMLOpen,maxID,int,N,package);
Attribute(GanttXMLOpen,myContext,ParsingContext,N,private);
Attribute(GanttXMLOpen,myListeners,ArrayList,N,private);
Attribute(GanttXMLOpen,myTagHandlers,ArrayList,N,private);
Attribute(GanttXMLOpen,myTaskManager,TaskManager,N,private);
Attribute(GanttXMLOpen,peop,GanttResourcePanel,N,package);
Attribute(GanttXMLOpen,prj,GanttProject,N,package);
Attribute(GanttXMLOpen,textBuffer,StringBuffer,N,package);
Attribute(GanttXMLOpen,treePanel,GanttTree,N,package);
Attribute(GanttXMLOpen,typeChar,int,N,package);
Class(GanttXMLOpen,N,N,public);
Generalisation(GanttXMLOpen,DefaultHandler);
Method(GanttXMLOpen,GanttXMLOpen,N,Y,N,N,public);
Method(GanttXMLOpen,addParsingListener,void,Y,N,N,public);
Method(GanttXMLOpen,addTagHandler,void,Y,N,N,public);
Method(GanttXMLOpen,characters,void,Y,N,N,public);
Method(GanttXMLOpen,determineColor,Color,Y,N,N,private);
Method(GanttXMLOpen,endDocument,void,N,N,N,public);
Method(GanttXMLOpen,endElement,void,Y,N,N,public);
Method(GanttXMLOpen,getContext,ParsingContext,N,N,N,public);
Method(GanttXMLOpen,getCorrectString,String,Y,N,N,public);
Method(GanttXMLOpen,getDefaultTagHandler,TagHandler,N,N,N,public);
Method(GanttXMLOpen,load,boolean,Y,N,N,public);
Method(GanttXMLOpen,startElement,void,Y,N,N,public);
Parameter(GanttOptions,loadRoleSets,loaderGanttXMLOpen,local);
Parameter(GanttProject,importcbk,openerGanttXMLOpen,local);
Parameter(GanttProject,openDocument,openerGanttXMLOpen,local);
Parameter(GanttProject,openXMLStream,openerGanttXMLOpen,local);
Parameter(GanttXMLOpen,GanttXMLOpen,appli,GanttProject,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,bImport,boolean,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,gra,GanttGraphicArea,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,resources,GanttResourcePanel,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,taskManager,TaskManager,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,tree,GanttTree,declaration);
Parameter(GanttXMLOpen,addParsingListener,listener,ParsingListener,declaration);
Parameter(GanttXMLOpen,addTagHandler,handler,TagHandler,declaration);
Parameter(GanttXMLOpen,characters,buf,char,declaration);
Parameter(GanttXMLOpen,characters,len,int,declaration);
Parameter(GanttXMLOpen,characters,offset,int,declaration);
Parameter(GanttXMLOpen,characters,sString,local);
Parameter(GanttXMLOpen,characters,taskTask,local);
Parameter(GanttXMLOpen,determineColor,bint,local);
Parameter(GanttXMLOpen,determineColor,gint,local);
Parameter(GanttXMLOpen,determineColor,hexString,String,declaration);
Parameter(GanttXMLOpen,determineColor,rint,local);
Parameter(GanttXMLOpen,endDocument,lParsingListener,local);
Parameter(GanttXMLOpen,endElement,namespaceURI,String,declaration);
Parameter(GanttXMLOpen,endElement,nextTagHandler,local);
Parameter(GanttXMLOpen,endElement,qName,String,declaration);
Parameter(GanttXMLOpen,endElement,sName,String,declaration);
Parameter(GanttXMLOpen,getCorrectString,s,String,declaration);
Parameter(GanttXMLOpen,load,factorySAXParserFactory,local);
Parameter(GanttXMLOpen,load,file,File,declaration);
Parameter(GanttXMLOpen,load,filename,String,declaration);
Parameter(GanttXMLOpen,load,gdiGanttDialogInfo,local);
Parameter(GanttXMLOpen,load,handlerDefaultHandler,local);
Parameter(GanttXMLOpen,load,inStream,InputStream,declaration);
Parameter(GanttXMLOpen,load,saxParserSAXParser,local);
Parameter(GanttXMLOpen,load,tempboolean,local);
Parameter(GanttXMLOpen,startElement,aNameString,local);
Parameter(GanttXMLOpen,startElement,arrayint[],local);
Parameter(GanttXMLOpen,startElement,attrs,Attributes,declaration);
Parameter(GanttXMLOpen,startElement,countint,local);
Parameter(GanttXMLOpen,startElement,eNameString,local);
Parameter(GanttXMLOpen,startElement,indexMoreint,local);
Parameter(GanttXMLOpen,startElement,namespaceURI,String,declaration);
Parameter(GanttXMLOpen,startElement,nextTagHandler,local);
Parameter(GanttXMLOpen,startElement,nodeDefaultMutableTreeNode,local);
Parameter(GanttXMLOpen,startElement,qName,String,declaration);
Parameter(GanttXMLOpen,startElement,sName,String,declaration);
Parameter(GanttXMLOpen,startElement,st1StringTokenizer,local);
Parameter(GanttXMLOpen,startElement,taskGanttTask,local);
Parameter(GanttXMLOpen,startElement,task_idint,local);
Parameter(GanttXMLOpen,startElement,tokenString,local);
Parameter(ImportResources,actionPerformed,loaderGanttXMLOpen,local);
Relation(GanttOptions;loadRoleSets;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttOptions;loadRoleSets;load,GanttXMLOpen,File);
Relation(GanttProject;importcbk;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;importcbk;getContext,GanttXMLOpen,N);
Relation(GanttProject;importcbk;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;importcbk;load,GanttXMLOpen,InputStream);
Relation(GanttProject;openDocument;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttProject;openDocument;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openDocument;getContext,GanttXMLOpen,N);
Relation(GanttProject;openDocument;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;openDocument;load,GanttXMLOpen,InputStream);
Relation(GanttProject;openXMLStream;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttProject;openXMLStream;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openXMLStream;getContext,GanttXMLOpen,N);
Relation(GanttProject;openXMLStream;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;openXMLStream;load,GanttXMLOpen,InputStream);
Relation(GanttXMLOpen;GanttXMLOpen;getMaxID,TaskManagerImpl,N);
Relation(GanttXMLOpen;NgetInstance,GanttLanguage,N);
Relation(GanttXMLOpen;addParsingListener;add,ArrayList,Object);
Relation(GanttXMLOpen;addTagHandler;add,ArrayList,Object);
Relation(GanttXMLOpen;characters;get,ArrayList,int);
Relation(GanttXMLOpen;characters;getCorrectString,GanttXMLParser,String);
Relation(GanttXMLOpen;characters;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXMLOpen;characters;setNotes,MutableTask,String);
Relation(GanttXMLOpen;characters;size,ArrayList,N);
Relation(GanttXMLOpen;characters;trim,String,N);
Relation(GanttXMLOpen;determineColor;intValue,Integer,N);
Relation(GanttXMLOpen;determineColor;matches,Pattern,String-CharSequence);
Relation(GanttXMLOpen;determineColor;substring,String,int-int);
Relation(GanttXMLOpen;determineColor;valueOf,Integer,String-int);
Relation(GanttXMLOpen;endDocument;get,ArrayList,int);
Relation(GanttXMLOpen;endDocument;parsingFinished,ParsingListener,N);
Relation(GanttXMLOpen;endDocument;size,ArrayList,N);
Relation(GanttXMLOpen;endElement;endElement,TagHandler,String-String-String);
Relation(GanttXMLOpen;endElement;equals,String,Object);
Relation(GanttXMLOpen;endElement;hasNext,Iterator,N);
Relation(GanttXMLOpen;endElement;iterator,ArrayList,N);
Relation(GanttXMLOpen;endElement;length,String,N);
Relation(GanttXMLOpen;endElement;next,Iterator,N);
Relation(GanttXMLOpen;endElement;remove,ArrayList,int);
Relation(GanttXMLOpen;endElement;size,ArrayList,N);
Relation(GanttXMLOpen;endElement;substring,String,int-int);
Relation(GanttXMLOpen;getCorrectString;endsWith,String,String);
Relation(GanttXMLOpen;getCorrectString;length,String,N);
Relation(GanttXMLOpen;getCorrectString;replaceAll,String,String-String);
Relation(GanttXMLOpen;getCorrectString;startsWith,String,String);
Relation(GanttXMLOpen;getCorrectString;substring,String,int-int);
Relation(GanttXMLOpen;load;forwardScheduling,GanttTree,N);
Relation(GanttXMLOpen;load;getAbsolutePath,File,N);
Relation(GanttXMLOpen;load;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttXMLOpen;load;getAlgorithmCollection,TaskManager,N);
Relation(GanttXMLOpen;load;getMessage,SAXException,N);
Relation(GanttXMLOpen;load;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(GanttXMLOpen;load;getText,GanttLanguage,String);
Relation(GanttXMLOpen;load;load,GanttXMLOpen,File);
Relation(GanttXMLOpen;load;newInstance,SAXParserFactory,N);
Relation(GanttXMLOpen;load;newSAXParser,SAXParserFactory,N);
Relation(GanttXMLOpen;load;parse,SAXParser,File-DefaultHandler);
Relation(GanttXMLOpen;load;parse,SAXParser,InputStream-DefaultHandler);
Relation(GanttXMLOpen;load;printStackTrace,Throwable,N);
Relation(GanttXMLOpen;load;setEnabled,AlgorithmBase,boolean);
Relation(GanttXMLOpen;load;show,Dialog,N);
Relation(GanttXMLOpen;startElement;add,ArrayList,Object);
Relation(GanttXMLOpen;startElement;addObjectWithExpand,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttXMLOpen;startElement;createTask,TaskManager,N);
Relation(GanttXMLOpen;startElement;determineColor,DefaultTagHandler,String);
Relation(GanttXMLOpen;startElement;equals,String,Object);
Relation(GanttXMLOpen;startElement;get,ArrayList,int);
Relation(GanttXMLOpen;startElement;getColor,TaskImpl,N);
Relation(GanttXMLOpen;startElement;getLength,Attributes,N);
Relation(GanttXMLOpen;startElement;getLocalName,Attributes,int);
Relation(GanttXMLOpen;startElement;getMessage,Throwable,N);
Relation(GanttXMLOpen;startElement;getQName,Attributes,int);
Relation(GanttXMLOpen;startElement;getTaskID,ParsingContext,N);
Relation(GanttXMLOpen;startElement;getValue,Attributes,int);
Relation(GanttXMLOpen;startElement;hasMoreTokens,StringTokenizer,N);
Relation(GanttXMLOpen;startElement;hasNext,Iterator,N);
Relation(GanttXMLOpen;startElement;hashCode,Integer,N);
Relation(GanttXMLOpen;startElement;intValue,Integer,N);
Relation(GanttXMLOpen;startElement;iterator,ArrayList,N);
Relation(GanttXMLOpen;startElement;next,Iterator,N);
Relation(GanttXMLOpen;startElement;nextToken,StringTokenizer,N);
Relation(GanttXMLOpen;startElement;parseInt,Integer,String);
Relation(GanttXMLOpen;startElement;parseXMLDate,GanttCalendar,String);
Relation(GanttXMLOpen;startElement;println,PrintStream,String);
Relation(GanttXMLOpen;startElement;registerTask,TaskManager,Task);
Relation(GanttXMLOpen;startElement;setColor,TaskImpl,Color);
Relation(GanttXMLOpen;startElement;setCompletionPercentage,TaskImpl,int);
Relation(GanttXMLOpen;startElement;setDate,GanttGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setExpand,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setLength,GanttTask,int);
Relation(GanttXMLOpen;startElement;setMilestone,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setName,TaskImpl,String);
Relation(GanttXMLOpen;startElement;setPriority,TaskImpl,int);
Relation(GanttXMLOpen;startElement;setProjectLevelTaskColor,GanttGraphicArea,Color);
Relation(GanttXMLOpen;startElement;setShape,TaskImpl,ShapePaint);
Relation(GanttXMLOpen;startElement;setStart,TaskImpl,GanttCalendar);
Relation(GanttXMLOpen;startElement;setStartFixed,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setTaskID,GanttTask,int);
Relation(GanttXMLOpen;startElement;setTaskID,ParsingContext,int);
Relation(GanttXMLOpen;startElement;setWebLink,TaskImpl,String);
Relation(GanttXMLOpen;startElement;setZoom,GanttGraphicArea,int);
Relation(GanttXMLOpen;startElement;setZoom,ResourceLoadGraphicArea,int);
Relation(GanttXMLOpen;startElement;size,ArrayList,N);
Relation(GanttXMLOpen;startElement;startElement,TagHandler,String-String-String-Attributes);
Relation(ImportResources;actionPerformed;addTagHandler,GanttXMLOpen,TagHandler);
Relation(ImportResources;actionPerformed;getContext,GanttXMLOpen,N);
Relation(ImportResources;actionPerformed;load,GanttXMLOpen,File);
end b196
start b197
Attribute(DeprecatedProjectExportData,myExportOptions,GanttExportSettings,N,package);
Attribute(GanttChartExportData,myExportSettings,GanttExportSettings,N,package);
Attribute(GanttExportSettings,border3d,boolean,N,public);
Attribute(GanttExportSettings,depend,boolean,N,public);
Attribute(GanttExportSettings,name,boolean,N,public);
Attribute(GanttExportSettings,ok,boolean,N,public);
Attribute(GanttExportSettings,percent,boolean,N,public);
Attribute(GanttProject,myStorageOptions,GanttExportSettings,N,public);
Attribute(ProjectExportData,myExportSettings,GanttExportSettings,N,package);
Class(GanttExportSettings,N,N,public);
Method(GanttExportSettings,GanttExportSettings,N,N,N,N,public);
Method(GanttExportSettings,GanttExportSettings,N,Y,N,N,public);
Method(GanttOptions,getExportSettings,GanttExportSettings,N,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myExportOptions,GanttExportSettings,declaration);
Parameter(GanttChartExportData,GanttChartExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(GanttExportSettings,GanttExportSettings,b3dBorders,boolean,declaration);
Parameter(GanttExportSettings,GanttExportSettings,bDepend,boolean,declaration);
Parameter(GanttExportSettings,GanttExportSettings,bName,boolean,declaration);
Parameter(GanttExportSettings,GanttExportSettings,bPercent,boolean,declaration);
Parameter(GanttGraphicArea,export,settings,GanttExportSettings,declaration);
Parameter(GanttGraphicArea,getChart,settings,GanttExportSettings,declaration);
Parameter(GanttGraphicArea,printProject,settings,GanttExportSettings,declaration);
Parameter(GanttHTMLExport,save,bool,GanttExportSettings,declaration);
Parameter(GanttPDFExport,save,bool,GanttExportSettings,declaration);
Parameter(GanttProject,ExportFileInfo,options,GanttExportSettings,declaration);
Parameter(GanttProject,doExport,boolGanttExportSettings,local);
Parameter(GanttProject,printProject,boolGanttExportSettings,local);
Parameter(PDFExportData,PDFExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(ProjectExportData,ProjectExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,export,settings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,getChart,settings,GanttExportSettings,declaration);
Parameter(ResourceLoadGraphicArea,printProject,settings,GanttExportSettings,declaration);
Relation(GanttGraphicArea;export;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttGraphicArea;printProject;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttHTMLExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttHTMLExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttPDFExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttPDFExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttProject;doExport;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttProject;doExport;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;previewPrint;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;previewPrint;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(GanttProject;printProject;printProject,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;printProject;printProject,ResourceLoadGraphicArea,GanttExportSettings);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ResourceLoadGraphicArea;export;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(ResourceLoadGraphicArea;printProject;getChart,ResourceLoadGraphicArea,GanttExportSettings);
end b197
start b198
Attribute(ResourceAction,myManager,ResourceManager,N,private);
Class(ResourceAction,abstract,N,package);
Generalisation(DeleteHumanAction,ResourceAction);
Generalisation(NewHumanAction,ResourceAction);
Generalisation(ResourceAction,AbstractAction);
Method(ResourceAction,ResourceAction,N,Y,N,N,public);
Method(ResourceAction,getLanguage,GanttLanguage,N,N,N,protected);
Method(ResourceAction,getManager,ResourceManager,N,N,N,protected);
Parameter(ResourceAction,ResourceAction,hrManager,ResourceManager,declaration);
Relation(DeleteHumanAction;DeleteHumanAction;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;deleteResources;getManager,ResourceAction,N);
Relation(NewHumanAction;NewHumanAction;getLanguage,ResourceAction,N);
Relation(NewHumanAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(NewHumanAction;actionPerformed;getManager,ResourceAction,N);
Relation(NewHumanAction;languageChanged;getLanguage,ResourceAction,N);
Relation(ResourceAction;getLanguage;getInstance,GanttLanguage,N);
end b198
start b199
Attribute(GanttGraphicArea,notes,Notes,N,private);
Class(Notes,N,N,public);
Relation(GanttGraphicArea;GanttGraphicArea;setDraw,Notes,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;setString,Notes,String);
Relation(GanttGraphicArea;GanttGraphicArea;setX,Notes,int);
Relation(GanttGraphicArea;detectPosition;setDraw,Notes,boolean);
Relation(GanttGraphicArea;paintComponent;paint,Notes,Graphics);
end b199
start b200
Attribute(LanguageSettingsPanel,appli,GanttProject,N,private);
Attribute(LanguageSettingsPanel,cbLanguage,JComboBox,N,private);
Class(LanguageSettingsPanel,N,N,public);
Generalisation(LanguageSettingsPanel,GeneralOptionPanel);
Method(LanguageSettingsPanel,LanguageSettingsPanel,N,Y,N,N,public);
Method(LanguageSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(LanguageSettingsPanel,changeLanguage,void,N,N,N,public);
Method(LanguageSettingsPanel,initialize,void,N,N,N,public);
Method(LanguageSettingsPanel,itemStateChanged,void,Y,N,N,public);
Parameter(LanguageSettingsPanel,LanguageSettingsPanel,languagePanelJPanel,local);
Parameter(LanguageSettingsPanel,LanguageSettingsPanel,parent,GanttProject,declaration);
Parameter(LanguageSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(LanguageSettingsPanel,changeLanguage,langString,local);
Parameter(LanguageSettingsPanel,itemStateChanged,e,ItemEvent,declaration);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;add,Container,Component);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;add,Container,Component-Object);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;addItem,JComboBox,Object);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;addItemListener,JComboBox,ItemListener);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getInstance,GanttLanguage,N);
Relation(LanguageSettingsPanel;LanguageSettingsPanel;getText,GanttLanguage,String);
Relation(LanguageSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(LanguageSettingsPanel;applyChanges;changeLanguage,LanguageSettingsPanel,N);
Relation(LanguageSettingsPanel;changeLanguage;changeLanguage,GanttProject,N);
Relation(LanguageSettingsPanel;changeLanguage;equals,String,Object);
Relation(LanguageSettingsPanel;changeLanguage;getSelectedItem,JComboBox,N);
Relation(LanguageSettingsPanel;changeLanguage;setLocale,GanttLanguage,Locale);
Relation(LanguageSettingsPanel;initialize;getText,GanttLanguage,String);
Relation(LanguageSettingsPanel;initialize;setSelectedItem,JComboBox,Object);
Relation(LanguageSettingsPanel;itemStateChanged;getStateChange,ItemEvent,N);
end b200
start b201
Attribute(ChartHeaderImpl,myChartModel,ChartModelImpl,N,private);
Attribute(ChartHeaderImpl,myPrimitiveContainer,GraphicPrimitiveContainer,N,private);
Attribute(ChartHeaderImpl,myWidth,int,N,package);
Class(ChartHeaderImpl,N,N,public);
Method(ChartHeaderImpl,ChartHeaderImpl,N,Y,N,N,public);
Method(ChartHeaderImpl,createBottomUnitGrid,void,Y,N,N,package);
Method(ChartHeaderImpl,createFrames,void,N,N,N,private);
Method(ChartHeaderImpl,createGreyRectangleWithNiceBorders,void,N,N,N,private);
Method(ChartHeaderImpl,createTopUnitText,void,Y,N,N,package);
Method(ChartHeaderImpl,getHeight,int,N,N,N,private);
Method(ChartHeaderImpl,getWidth,int,N,N,N,package);
Method(ChartHeaderImpl,getWidth,int,N,N,N,private);
Method(ChartHeaderImpl,paint,void,Y,N,N,public);
Method(ChartHeaderImpl,preparePrimitives,void,N,N,N,private);
Parameter(ChartHeaderImpl,ChartHeaderImpl,model,ChartModelImpl,declaration);
Parameter(ChartHeaderImpl,createBottomUnitGrid,posFrameStart,int,declaration);
Parameter(ChartHeaderImpl,createBottomUnitGrid,timeFrame,TimeFrame,declaration);
Parameter(ChartHeaderImpl,createFrames,bottomUnitGridBuilderBottomUnitGridBuilder,local);
Parameter(ChartHeaderImpl,createFrames,bottomUnitWidthint,local);
Parameter(ChartHeaderImpl,createFrames,bottomYint,local);
Parameter(ChartHeaderImpl,createFrames,configChartUIConfiguration,local);
Parameter(ChartHeaderImpl,createFrames,nextFrameTimeFrame,local);
Parameter(ChartHeaderImpl,createFrames,nextLineLine,local);
Parameter(ChartHeaderImpl,createFrames,nextTextText,local);
Parameter(ChartHeaderImpl,createFrames,posXint,local);
Parameter(ChartHeaderImpl,createFrames,posYint,local);
Parameter(ChartHeaderImpl,createFrames,textText,local);
Parameter(ChartHeaderImpl,createFrames,timeFramesTimeFrame[],local);
Parameter(ChartHeaderImpl,createFrames,topUnitHeightint,local);
Parameter(ChartHeaderImpl,createFrames,topUnitTextBuilderTopUnitTextBuilder,local);
Parameter(ChartHeaderImpl,createFrames,totalWidthint,local);
Parameter(ChartHeaderImpl,createFrames,unitTextString,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,bottomGutterLine,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,headerRectangleRectangle,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,middleGutter1Line,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,middleGutter2Line,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,sizexint,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,sizeyint,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,spanningHeaderBorderRectangle,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,spanningHeaderHeightint,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,timeunitHeaderBorderRectangle,local);
Parameter(ChartHeaderImpl,createGreyRectangleWithNiceBorders,topGutterLine,local);
Parameter(ChartHeaderImpl,createTopUnitText,posFrameStart,int,declaration);
Parameter(ChartHeaderImpl,createTopUnitText,timeFrame,TimeFrame,declaration);
Parameter(ChartHeaderImpl,paint,g,Graphics,declaration);
Relation(ChartHeaderImpl;createFrames;createBottomUnitGrid,BottomUnitGridBuilder,int-TimeFrame);
Relation(ChartHeaderImpl;createFrames;createLine,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;createFrames;createText,GraphicPrimitiveContainer,int-int-String);
Relation(ChartHeaderImpl;createFrames;createTopUnitText,TopUnitTextBuilder,int-TimeFrame);
Relation(ChartHeaderImpl;createFrames;getBottomUnit,TimeFrame,N);
Relation(ChartHeaderImpl;createFrames;getBottomUnitFont,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getBottomUnitGridColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getBottomUnitWidth,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getSpanningHeaderFont,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getSpanningHeaderHeight,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getTimeFrames,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getTopUnit,TimeFrame,N);
Relation(ChartHeaderImpl;createFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartHeaderImpl;createFrames;getUnitText,TimeFrame,TimeUnit-int);
Relation(ChartHeaderImpl;createFrames;getWidth,BottomUnitGridBuilder,N);
Relation(ChartHeaderImpl;createFrames;getWidth,ChartHeaderImpl,N);
Relation(ChartHeaderImpl;createFrames;setFont,Text,Font);
Relation(ChartHeaderImpl;createFrames;setForegroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;createLine,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;createRectangle,GraphicPrimitiveContainer,int-int-int-int);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHeaderBorderColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHeight,ChartHeaderImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHorizontalGutterColor1,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHorizontalGutterColor2,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getSpanningHeaderBackgroundColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getSpanningHeaderHeight,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getWidth,ChartHeaderImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setBackgroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setForegroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;getHeight;getBounds,ChartModelImpl,N);
Relation(ChartHeaderImpl;getHeight;getHeight,Dimension,N);
Relation(ChartHeaderImpl;getWidth;getBounds,ChartModelImpl,N);
Relation(ChartHeaderImpl;getWidth;getWidth,Dimension,N);
Relation(ChartHeaderImpl;paint;paint,GraphicPrimitiveContainer,Graphics);
Relation(ChartHeaderImpl;paint;preparePrimitives,ChartHeaderImpl,N);
Relation(ChartHeaderImpl;preparePrimitives;createFrames,ChartHeaderImpl,N);
Relation(ChartHeaderImpl;preparePrimitives;createGreyRectangleWithNiceBorders,ChartHeaderImpl,N);
end b201
start b202
Class(TaskListener,N,N,public);
Method(TaskListener,dependencyAdded,void,Y,N,N,package);
Method(TaskListener,dependencyRemoved,void,Y,N,N,package);
Method(TaskListener,taskAdded,void,Y,N,N,package);
Method(TaskListener,taskMoved,void,Y,N,N,package);
Method(TaskListener,taskRemoved,void,Y,N,N,package);
Method(TaskListener,taskScheduleChanged,void,Y,N,N,package);
Parameter(TaskListener,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskListener,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(TaskListener,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(TaskListener,taskMoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListener,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListener,taskScheduleChanged,e,TaskScheduleEvent,declaration);
Parameter(TaskManager,addTaskListener,listener,TaskListener,declaration);
Parameter(TaskManagerImpl,addTaskListener,listener,TaskListener,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,nextTaskListener,local);
Relation(GanttGraphicArea;GanttGraphicArea;addTaskListener,TaskManager,TaskListener);
Relation(TaskManagerImpl;fireDependencyAdded;dependencyAdded,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyRemoved;dependencyRemoved,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireTaskAdded;taskAdded,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskRemoved;taskRemoved,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskScheduleChanged;taskScheduleChanged,TaskListener,TaskScheduleEvent);
end b202
start b203
Class(AbstractURLDocument,abstract,N,public);
Generalisation(AbstractURLDocument,AbstractDocument);
Generalisation(HttpDocument,AbstractURLDocument);
Method(AbstractURLDocument,getURLPath,String,N,N,N,public);
Relation(AbstractURLDocument;getURLPath;getPath,Document,N);
end b203
start b204
Attribute(ImportResources,myResourceManager,ResourceManager,N,private);
Attribute(ImportResources,myRoleManager,RoleManager,N,private);
Attribute(ImportResources,myTaskManager,TaskManager,N,private);
Attribute(ImportResources,myproject,GanttProject,N,private);
Class(ImportResources,N,N,public);
Generalisation(ImportResources,AbstractAction);
Method(ImportResources,ImportResources,N,Y,N,N,public);
Method(ImportResources,actionPerformed,void,Y,N,N,public);
Method(ImportResources,getResourcesFile,File,N,N,N,private);
Parameter(ImportResources,ImportResources,iconUrlURL,local);
Parameter(ImportResources,ImportResources,languageGanttLanguage,local);
Parameter(ImportResources,ImportResources,project,GanttProject,declaration);
Parameter(ImportResources,ImportResources,resourceManager,ResourceManager,declaration);
Parameter(ImportResources,ImportResources,roleManager,RoleManager,declaration);
Parameter(ImportResources,ImportResources,taskManager,TaskManager,declaration);
Parameter(ImportResources,actionPerformed,dependencyHandlerDependencyTagHandler,local);
Parameter(ImportResources,actionPerformed,event,ActionEvent,declaration);
Parameter(ImportResources,actionPerformed,fileFile,local);
Parameter(ImportResources,actionPerformed,loaderGanttXMLOpen,local);
Parameter(ImportResources,actionPerformed,rolesHandlerRoleTagHandler,local);
Parameter(ImportResources,actionPerformed,tagHandlerResourceTagHandler,local);
Parameter(ImportResources,getResourcesFile,openDialogOpenFileDialog,local);
Parameter(ImportResources,getResourcesFile,resultFile,local);
Relation(ImportResources;ImportResources;getClass,Object,N);
Relation(ImportResources;ImportResources;getClassLoader,Class<>,N);
Relation(ImportResources;ImportResources;getInstance,GanttLanguage,N);
Relation(ImportResources;ImportResources;getResource,ClassLoader,String);
Relation(ImportResources;ImportResources;getText,GanttLanguage,String);
Relation(ImportResources;ImportResources;putValue,AbstractAction,String-Object);
Relation(ImportResources;actionPerformed;addTagHandler,GanttXMLOpen,TagHandler);
Relation(ImportResources;actionPerformed;getContext,GanttXMLOpen,N);
Relation(ImportResources;actionPerformed;getInstance,Access,N);
Relation(ImportResources;actionPerformed;getResourcesFile,ImportResources,N);
Relation(ImportResources;actionPerformed;load,GanttXMLOpen,File);
Relation(ImportResources;getResourcesFile;show,OpenFileDialog,N);
end b204
start b205
Class(GanttTreeCellEditor,N,N,package);
end b205
start b206
Class(ResourceAssignmentImpl,N,N,private);
Relation(ResourceAssignmentCollectionImpl;delete;getResource,ResourceAssignmentImpl,N);
end b206
start b207
Attribute(DependencyTableModel,columnNames,String[],N,package);
Attribute(DependencyTableModel,myDependencies,List,N,private);
Attribute(DependencyTableModel,myMutator,TaskDependencyCollectionMutator,N,private);
Attribute(DependencyTableModel,myTask,Task,N,package);
Attribute(DependencyTableModel,myTask,Task,N,private);
Attribute(DependencyTableModel,myText,String,N,package);
Attribute(TaskDependenciesPanel,myTableModel,DependencyTableModel,N,private);
Class(DependencyTableModel,N,N,public);
Generalisation(DependencyTableModel,AbstractTableModel);
Method(DependencyTableModel,DependencyTableModel,N,Y,N,N,public);
Method(DependencyTableModel,TaskComboItem,N,Y,N,N,package);
Method(DependencyTableModel,commit,void,N,N,N,public);
Method(DependencyTableModel,createDependency,void,Y,N,N,private);
Method(DependencyTableModel,getColumnCount,int,N,N,N,public);
Method(DependencyTableModel,getColumnName,String,Y,N,N,public);
Method(DependencyTableModel,getRowCount,int,N,N,N,public);
Method(DependencyTableModel,getValueAt,Object,Y,N,N,public);
Method(DependencyTableModel,isCellEditable,boolean,Y,N,N,public);
Method(DependencyTableModel,setValueAt,void,Y,N,N,public);
Method(DependencyTableModel,toString,String,N,N,N,public);
Method(DependencyTableModel,updateDependency,void,Y,N,N,private);
Method(TaskDependenciesPanel,getTableModel,DependencyTableModel,N,N,N,public);
Parameter(DependencyTableModel,DependencyTableModel,task,Task,declaration);
Parameter(DependencyTableModel,TaskComboItem,task,Task,declaration);
Parameter(DependencyTableModel,createDependency,depTaskDependency,local);
Parameter(DependencyTableModel,createDependency,selectedTaskTask,local);
Parameter(DependencyTableModel,createDependency,value,Object,declaration);
Parameter(DependencyTableModel,getColumnName,col,int,declaration);
Parameter(DependencyTableModel,getValueAt,col,int,declaration);
Parameter(DependencyTableModel,getValueAt,depTaskDependency,local);
Parameter(DependencyTableModel,getValueAt,resultObject,local);
Parameter(DependencyTableModel,getValueAt,row,int,declaration);
Parameter(DependencyTableModel,isCellEditable,col,int,declaration);
Parameter(DependencyTableModel,isCellEditable,resultboolean,local);
Parameter(DependencyTableModel,isCellEditable,row,int,declaration);
Parameter(DependencyTableModel,setValueAt,col,int,declaration);
Parameter(DependencyTableModel,setValueAt,row,int,declaration);
Parameter(DependencyTableModel,setValueAt,value,Object,declaration);
Parameter(DependencyTableModel,updateDependency,col,int,declaration);
Parameter(DependencyTableModel,updateDependency,depTaskDependency,local);
Parameter(DependencyTableModel,updateDependency,newDependencyTaskDependency,local);
Parameter(DependencyTableModel,updateDependency,row,int,declaration);
Parameter(DependencyTableModel,updateDependency,selectedTaskTask,local);
Parameter(DependencyTableModel,updateDependency,value,Object,declaration);
Relation(DependencyTableModel;DependencyTableModel;asList,Arrays,TaskDependency[]);
Relation(DependencyTableModel;DependencyTableModel;createMutator,TaskDependencyCollection,N);
Relation(DependencyTableModel;DependencyTableModel;getDependenciesAsDependant,Task,N);
Relation(DependencyTableModel;DependencyTableModel;getDependencyCollection,TaskManager,N);
Relation(DependencyTableModel;DependencyTableModel;getManager,Task,N);
Relation(DependencyTableModel;DependencyTableModel;toArray,TaskDependencySlice,N);
Relation(DependencyTableModel;NgetInstance,GanttLanguage,N);
Relation(DependencyTableModel;NgetText,GanttLanguage,String);
Relation(DependencyTableModel;TaskComboItem;getTaskID,Task,N);
Relation(DependencyTableModel;TaskComboItem;toString,Object,N);
Relation(DependencyTableModel;commit;commit,TaskDependencyCollectionMutator,N);
Relation(DependencyTableModel;createDependency;add,List,Object);
Relation(DependencyTableModel;createDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;createDependency;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(DependencyTableModel;createDependency;size,List,N);
Relation(DependencyTableModel;getRowCount;size,List,N);
Relation(DependencyTableModel;getValueAt;get,List,int);
Relation(DependencyTableModel;getValueAt;getConstraint,TaskDependency,N);
Relation(DependencyTableModel;getValueAt;getDependee,TaskDependency,N);
Relation(DependencyTableModel;getValueAt;getName,TaskDependencyConstraint,N);
Relation(DependencyTableModel;getValueAt;getRowCount,DependencyTableModel,N);
Relation(DependencyTableModel;getValueAt;getTaskID,Task,N);
Relation(DependencyTableModel;getValueAt;size,List,N);
Relation(DependencyTableModel;isCellEditable;size,List,N);
Relation(DependencyTableModel;setValueAt;createDependency,DependencyTableModel,Object);
Relation(DependencyTableModel;setValueAt;fireTableCellUpdated,AbstractTableModel,int-int);
Relation(DependencyTableModel;setValueAt;printStackTrace,Throwable,N);
Relation(DependencyTableModel;setValueAt;size,List,N);
Relation(DependencyTableModel;setValueAt;updateDependency,DependencyTableModel,Object-int-int);
Relation(DependencyTableModel;updateDependency;add,List,Object);
Relation(DependencyTableModel;updateDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;updateDependency;delete,TaskDependency,N);
Relation(DependencyTableModel;updateDependency;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(DependencyTableModel;updateDependency;get,List,int);
Relation(DependencyTableModel;updateDependency;remove,List,int);
Relation(DependencyTableModel;updateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(GanttTaskPropertiesBean;getReturnTask;commit,DependencyTableModel,N);
end b207
start b208
Class(ColorValueParser,N,N,package);
Method(ColorValueParser,parseString,Color,Y,N,static,public);
Parameter(ColorValueParser,parseString,bint,local);
Parameter(ColorValueParser,parseString,gint,local);
Parameter(ColorValueParser,parseString,rint,local);
Parameter(ColorValueParser,parseString,value,String,declaration);
Relation(ColorValueParser;parseString;intValue,Integer,N);
Relation(ColorValueParser;parseString;matches,Pattern,String-CharSequence);
Relation(ColorValueParser;parseString;substring,String,int-int);
Relation(ColorValueParser;parseString;valueOf,Integer,String-int);
Relation(TaskTagHandler;loadTask;parseString,ColorValueParser,String);
end b208
start b209
Attribute(ChartModelImpl,myChartUIConfiguration,ChartUIConfiguration,N,private);
Attribute(ChartUIConfiguration,myBottomUnitFont,Font,N,private);
Attribute(ChartUIConfiguration,myBottomUnitGridColor,Color,N,private);
Attribute(ChartUIConfiguration,myHeaderBorderColor,Color,N,private);
Attribute(ChartUIConfiguration,myHorizontalGutterColor1,Color,N,private);
Attribute(ChartUIConfiguration,myHorizontalGutterColor2,Color,N,private);
Attribute(ChartUIConfiguration,mySpanningHeaderBackgroundColor,Color,N,private);
Attribute(ChartUIConfiguration,mySpanningRowTextFont,Font,N,private);
Class(ChartUIConfiguration,N,N,package);
Method(ChartModelImpl,getChartUIConfiguration,ChartUIConfiguration,N,N,N,package);
Method(ChartUIConfiguration,ChartUIConfiguration,N,N,N,N,package);
Method(ChartUIConfiguration,getBottomUnitFont,Font,N,N,N,package);
Method(ChartUIConfiguration,getBottomUnitGridColor,Color,N,N,N,public);
Method(ChartUIConfiguration,getHeaderBorderColor,Color,N,N,N,public);
Method(ChartUIConfiguration,getHorizontalGutterColor1,Color,N,N,N,public);
Method(ChartUIConfiguration,getHorizontalGutterColor2,Color,N,N,N,public);
Method(ChartUIConfiguration,getSpanningHeaderBackgroundColor,Color,N,N,N,public);
Method(ChartUIConfiguration,getSpanningHeaderFont,Font,N,N,N,package);
Method(ChartUIConfiguration,getSpanningHeaderHeight,int,N,N,N,public);
Parameter(ChartHeaderImpl,createFrames,configChartUIConfiguration,local);
Relation(ChartHeaderImpl;createFrames;getBottomUnitFont,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getBottomUnitGridColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getSpanningHeaderFont,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createFrames;getSpanningHeaderHeight,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHeaderBorderColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHorizontalGutterColor1,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getHorizontalGutterColor2,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getSpanningHeaderBackgroundColor,ChartUIConfiguration,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getSpanningHeaderHeight,ChartUIConfiguration,N);
end b209
start b210
Attribute(TimeUnitManagerImpl,myTimeGraph,TimeUnitGraph,N,private);
Attribute(TimeUnitManagerImpl,myUnits,TimeUnit[],N,private);
Class(TimeUnitManagerImpl,N,N,public);
Method(TimeUnitManagerImpl,TimeUnitManagerImpl,N,N,N,N,public);
Method(TimeUnitManagerImpl,getTimeUnit,TimeUnit,Y,N,N,public);
Parameter(TimeUnitManagerImpl,getTimeUnit,unitID,int,declaration);
Relation(TimeUnitManagerImpl;TimeUnitManagerImpl;createAtomTimeUnit,TimeUnitGraph,String);
end b210
start b211
Attribute(CommonPanel,durationField3,JTextField,N,private);
Attribute(CommonPanel,durationLabel3,JLabel,N,private);
Attribute(CommonPanel,firstRowPanel3,JPanel,N,private);
Attribute(CommonPanel,flowL,FlowLayout,N,private);
Attribute(CommonPanel,gbc,GridBagConstraints,N,private);
Attribute(CommonPanel,language,GanttLanguage,N,private);
Attribute(CommonPanel,myTask,Task,N,private);
Attribute(CommonPanel,nameField3,JTextField,N,private);
Attribute(CommonPanel,nameLabel3,JLabel,N,private);
Class(CommonPanel,abstract,N,package);
Generalisation(TaskAllocationsPanel,CommonPanel);
Generalisation(TaskDependenciesPanel,CommonPanel);
Method(CommonPanel,CommonPanel,N,Y,N,N,public);
Method(CommonPanel,addUsingGBL,void,Y,N,N,protected);
Method(CommonPanel,durationChanged,void,Y,N,N,public);
Method(CommonPanel,getLanguage,GanttLanguage,N,N,N,protected);
Method(CommonPanel,getTask,Task,N,N,N,protected);
Method(CommonPanel,nameChanged,void,Y,N,N,public);
Method(CommonPanel,setFirstRow,void,Y,N,N,protected);
Method(CommonPanel,setupCommonFields,JPanel,N,N,N,protected);
Parameter(CommonPanel,CommonPanel,task,Task,declaration);
Parameter(CommonPanel,addUsingGBL,component,Component,declaration);
Parameter(CommonPanel,addUsingGBL,container,Container,declaration);
Parameter(CommonPanel,addUsingGBL,gbc,GridBagConstraints,declaration);
Parameter(CommonPanel,addUsingGBL,h,int,declaration);
Parameter(CommonPanel,addUsingGBL,w,int,declaration);
Parameter(CommonPanel,addUsingGBL,x,int,declaration);
Parameter(CommonPanel,addUsingGBL,y,int,declaration);
Parameter(CommonPanel,durationChanged,newDuration,int,declaration);
Parameter(CommonPanel,nameChanged,newName,String,declaration);
Parameter(CommonPanel,setFirstRow,container,Container,declaration);
Parameter(CommonPanel,setFirstRow,durationField,JTextField,declaration);
Parameter(CommonPanel,setFirstRow,durationLabel,JLabel,declaration);
Parameter(CommonPanel,setFirstRow,gbc,GridBagConstraints,declaration);
Parameter(CommonPanel,setFirstRow,nameField,JTextField,declaration);
Parameter(CommonPanel,setFirstRow,nameLabel,JLabel,declaration);
Relation(CommonPanel;CommonPanel;getInstance,GanttLanguage,N);
Relation(CommonPanel;addUsingGBL;add,Container,Component-Object);
Relation(CommonPanel;addUsingGBL;applyComponentOrientation,Container,ComponentOrientation);
Relation(CommonPanel;addUsingGBL;getDefault,Locale,N);
Relation(CommonPanel;addUsingGBL;getOrientation,ComponentOrientation,Locale);
Relation(CommonPanel;durationChanged;setText,JTextComponent,String);
Relation(CommonPanel;nameChanged;setText,JTextComponent,String);
Relation(CommonPanel;setFirstRow;addUsingGBL,CommonPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(CommonPanel;setFirstRow;setLayout,Container,LayoutManager);
Relation(CommonPanel;setupCommonFields;getDuration,Task,N);
Relation(CommonPanel;setupCommonFields;getLanguage,CommonPanel,N);
Relation(CommonPanel;setupCommonFields;getLength,TaskLength,N);
Relation(CommonPanel;setupCommonFields;getName,Task,N);
Relation(CommonPanel;setupCommonFields;getTask,CommonPanel,N);
Relation(CommonPanel;setupCommonFields;getText,GanttLanguage,String);
Relation(CommonPanel;setupCommonFields;setEditable,JTextComponent,boolean);
Relation(CommonPanel;setupCommonFields;setFirstRow,CommonPanel,Container-GridBagConstraints-JLabel-JTextField-JLabel-JTextField);
Relation(CommonPanel;setupCommonFields;setText,JTextComponent,String);
Relation(GanttTaskPropertiesBean;changeLength;durationChanged,CommonPanel,int);
Relation(GanttTaskPropertiesBean;changeNameOfTask;nameChanged,CommonPanel,String);
Relation(GanttTaskPropertiesBean;setEnd;durationChanged,CommonPanel,int);
Relation(GanttTaskPropertiesBean;setStart;durationChanged,CommonPanel,int);
Relation(TaskAllocationsPanel;constructResourcesPanel;addUsingGBL,CommonPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(TaskAllocationsPanel;constructResourcesPanel;getLanguage,CommonPanel,N);
Relation(TaskAllocationsPanel;constructResourcesPanel;setupCommonFields,CommonPanel,N);
Relation(TaskAllocationsPanel;getComponent;getTask,CommonPanel,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;addUsingGBL,CommonPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getTask,CommonPanel,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setupCommonFields,CommonPanel,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getTask,CommonPanel,N);
end b211
start b212
Attribute(DeprecatedProjectExportData,myTree,GanttTree,N,package);
Attribute(GanttCSVExport,tree,GanttTree,N,private);
Attribute(GanttDialogProperties,tree,GanttTree,N,private);
Attribute(GanttDialogProperties,ttree,GanttTree,N,private);
Attribute(GanttGraphicArea,tree,GanttTree,N,public);
Attribute(GanttProject,tree,GanttTree,N,private);
Attribute(GanttResourcePanel,tree,GanttTree,N,package);
Attribute(GanttTXTOpen,treePanel,GanttTree,N,package);
Attribute(GanttTaskPropertiesBean,tree,GanttTree,N,private);
Attribute(GanttTree,AUTOSCROLL_MARGIN,int,static,private);
Attribute(GanttTree,TREEPATH_FLAVOR,DataFlavor,static,public);
Attribute(GanttTree,_flavors,DataFlavor[],N,private);
Attribute(GanttTree,_path,TreePath,N,private);
Attribute(GanttTree,appli,GanttProject,N,private);
Attribute(GanttTree,area,GanttGraphicArea,N,private);
Attribute(GanttTree,cpNode,DefaultMutableTreeNode,N,private);
Attribute(GanttTree,cueLineColor,Color,N,private);
Attribute(GanttTree,cueLineRect,Rectangle2D,N,private);
Attribute(GanttTree,dragPath,TreePath,N,private);
Attribute(GanttTree,ghostImage,BufferedImage,N,private);
Attribute(GanttTree,ghostImageRect,Rectangle2D,N,private);
Attribute(GanttTree,hoverTimer,Timer,N,private);
Attribute(GanttTree,language,GanttLanguage,N,package);
Attribute(GanttTree,lastEventPoint,Point,N,private);
Attribute(GanttTree,lastPath,TreePath,N,private);
Attribute(GanttTree,myFocusListener,FocusListener,N,private);
Attribute(GanttTree,myTaskManager,TaskManager,N,private);
Attribute(GanttTree,nbTasks,int,N,package);
Attribute(GanttTree,offsetPoint,Point,N,private);
Attribute(GanttTree,rootNode,DefaultMutableTreeNode,N,private);
Attribute(GanttTree,textField,JTextField,N,private);
Attribute(GanttTree,tree,JTree,N,private);
Attribute(GanttTree,treeModel,DefaultTreeModel,N,private);
Attribute(GanttTree,vbar,JScrollBar,N,package);
Attribute(GanttXFIGSaver,tree,GanttTree,N,private);
Attribute(GanttXMLOpen,treePanel,GanttTree,N,package);
Attribute(GanttXMLSaver,tree,GanttTree,N,private);
Attribute(ProjectExportData,myGanttTree,GanttTree,N,package);
Attribute(ResourceLoadGraphicArea,tree,GanttTree,N,public);
Class(GanttTree,N,N,public);
Generalisation(GanttTree,DefaultCellEditor);
Generalisation(GanttTree,DefaultTreeCellRenderer);
Generalisation(GanttTree,JPanel);
Generalisation(GanttTree,JTree);
Method(GanttGraphicArea,getTree,GanttTree,N,N,N,private);
Method(GanttProject,getTree,GanttTree,N,N,N,private);
Method(GanttTree,AutoscrollingTree,N,Y,N,N,public);
Method(GanttTree,GanttTransferableTreePath,N,Y,N,N,public);
Method(GanttTree,GanttTree,N,Y,N,N,public);
Method(GanttTree,GanttTreeCellEditor,N,Y,N,N,public);
Method(GanttTree,GanttTreeCellRenderer,N,N,N,N,public);
Method(GanttTree,GanttTreeDropListener,N,N,N,N,public);
Method(GanttTree,actionPerformed,void,Y,N,N,public);
Method(GanttTree,addObject,DefaultMutableTreeNode,Y,N,N,public);
Method(GanttTree,addObjectWithExpand,DefaultMutableTreeNode,Y,N,N,public);
Method(GanttTree,adjustmentValueChanged,void,Y,N,N,public);
Method(GanttTree,autoscroll,void,Y,N,N,public);
Method(GanttTree,checkDepend,boolean,Y,N,N,public);
Method(GanttTree,clearTree,void,N,N,N,public);
Method(GanttTree,computePercentComplete,void,Y,N,N,public);
Method(GanttTree,copySelectedNode,void,N,N,N,public);
Method(GanttTree,createPopupMenu,void,Y,N,N,public);
Method(GanttTree,cutSelectedNode,void,N,N,N,public);
Method(GanttTree,dedentCurrentNodes,void,N,N,N,public);
Method(GanttTree,downCurrentNodes,void,N,N,N,public);
Method(GanttTree,dragDropEnd,void,Y,N,N,public);
Method(GanttTree,dragEnter,void,Y,N,N,public);
Method(GanttTree,dragExit,void,Y,N,N,public);
Method(GanttTree,dragGestureRecognized,void,Y,N,N,public);
Method(GanttTree,dragOver,void,Y,N,N,public);
Method(GanttTree,drop,void,Y,N,N,public);
Method(GanttTree,dropActionChanged,void,Y,N,N,public);
Method(GanttTree,expandRefresh,void,Y,N,N,public);
Method(GanttTree,focusGained,void,Y,N,N,public);
Method(GanttTree,forwardScheduling,void,N,N,N,public);
Method(GanttTree,getAllChildTask,ArrayList,Y,N,N,public);
Method(GanttTree,getAllGanttTasks,ArrayList,N,N,N,public);
Method(GanttTree,getAllTaskArray,Object[],N,N,N,public);
Method(GanttTree,getAllTaskString,String[],Y,N,N,public);
Method(GanttTree,getAllTasks,ArrayList,N,N,N,public);
Method(GanttTree,getArryListTaskString,ArrayList,Y,N,N,public);
Method(GanttTree,getAutoscrollInsets,Insets,N,N,N,public);
Method(GanttTree,getCellEditorValue,Object,N,N,N,public);
Method(GanttTree,getFatherNode,DefaultMutableTreeNode,Y,N,N,public);
Method(GanttTree,getJTree,JTree,N,N,N,public);
Method(GanttTree,getLastNode,DefaultMutableTreeNode,N,N,N,public);
Method(GanttTree,getNode,DefaultMutableTreeNode,Y,N,N,public);
Method(GanttTree,getRoot,DefaultMutableTreeNode,N,N,N,public);
Method(GanttTree,getSelectedNode,DefaultMutableTreeNode,N,N,N,public);
Method(GanttTree,getSelectedNodes,DefaultMutableTreeNode[],N,N,N,public);
Method(GanttTree,getSelectedTask,GanttTask,N,N,N,public);
Method(GanttTree,getTask,Task,Y,N,N,public);
Method(GanttTree,getTaskManager,TaskManager,N,N,N,private);
Method(GanttTree,getToolTip,String,Y,N,N,public);
Method(GanttTree,getTransferData,Object,Y,N,N,public);
Method(GanttTree,getTransferDataFlavors,DataFlavor[],N,N,N,public);
Method(GanttTree,getTreeCellRendererComponent,Component,Y,N,N,public);
Method(GanttTree,hasTasks,boolean,N,N,N,public);
Method(GanttTree,indentCurrentNodes,void,N,N,N,public);
Method(GanttTree,initRootNode,void,N,N,N,private);
Method(GanttTree,insertClonedNode,void,Y,N,N,private);
Method(GanttTree,isDataFlavorSupported,boolean,Y,N,N,public);
Method(GanttTree,isDragAcceptable,boolean,Y,N,N,public);
Method(GanttTree,isDropAcceptable,boolean,Y,N,N,public);
Method(GanttTree,mouseClicked,void,Y,N,N,public);
Method(GanttTree,pasteNode,void,N,N,N,public);
Method(GanttTree,refreshAllChild,void,Y,N,N,public);
Method(GanttTree,refreshAllFather,void,Y,N,N,public);
Method(GanttTree,removeCurrentNode,void,N,N,N,public);
Method(GanttTree,selectTreeRow,void,Y,N,N,public);
Method(GanttTree,setAllTasksUnchecked,void,N,N,N,private);
Method(GanttTree,setGraphicArea,void,Y,N,N,public);
Method(GanttTree,treeCollapsed,void,Y,N,N,public);
Method(GanttTree,treeExpanded,void,Y,N,N,public);
Method(GanttTree,treeNodesChanged,void,Y,N,N,public);
Method(GanttTree,treeNodesInserted,void,Y,N,N,public);
Method(GanttTree,treeNodesRemoved,void,Y,N,N,public);
Method(GanttTree,treeStructureChanged,void,Y,N,N,public);
Method(GanttTree,upCurrentNodes,void,N,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myTree,GanttTree,declaration);
Parameter(GanttCSVExport,GanttCSVExport,tree,GanttTree,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,tree,GanttTree,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,ttree,GanttTree,declaration);
Parameter(GanttHTMLExport,save,tree,GanttTree,declaration);
Parameter(GanttHTMLExport,writeTasks,tree,GanttTree,declaration);
Parameter(GanttPDFExport,save,tree,GanttTree,declaration);
Parameter(GanttPDFExport,writeTasks,tree,GanttTree,declaration);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,setTree,tree,GanttTree,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,tree,GanttTree,declaration);
Parameter(GanttTaskPropertiesBean,GanttTaskPropertiesBean,tree,GanttTree,declaration);
Parameter(GanttTaskPropertiesBean,setTree,tree,GanttTree,declaration);
Parameter(GanttTree,AutoscrollingTree,treeModel,DefaultTreeModel,declaration);
Parameter(GanttTree,GanttTransferableTreePath,path,TreePath,declaration);
Parameter(GanttTree,GanttTree,app,GanttProject,declaration);
Parameter(GanttTree,GanttTree,containsboolean,local);
Parameter(GanttTree,GanttTree,currentSelectionTreePath[],local);
Parameter(GanttTree,GanttTree,dragSourceDragSource,local);
Parameter(GanttTree,GanttTree,dropTargetDropTarget,local);
Parameter(GanttTree,GanttTree,mlMouseListener,local);
Parameter(GanttTree,GanttTree,scrollpaneJScrollPane,local);
Parameter(GanttTree,GanttTree,selPathTreePath,local);
Parameter(GanttTree,GanttTree,selRowint,local);
Parameter(GanttTree,GanttTree,taskManager,TaskManager,declaration);
Parameter(GanttTree,GanttTreeCellEditor,textField,JTextField,declaration);
Parameter(GanttTree,GanttTreeCellEditor,tree,JTree,declaration);
Parameter(GanttTree,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttTree,addObject,child,Object,declaration);
Parameter(GanttTree,addObject,childNodeDefaultMutableTreeNode,local);
Parameter(GanttTree,addObject,parent,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,addObjectWithExpand,child,Object,declaration);
Parameter(GanttTree,addObjectWithExpand,childNodeDefaultMutableTreeNode,local);
Parameter(GanttTree,addObjectWithExpand,parent,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,addObjectWithExpand,resboolean,local);
Parameter(GanttTree,addObjectWithExpand,taskFatherTask,local);
Parameter(GanttTree,addObjectWithExpand,taskTask,local);
Parameter(GanttTree,adjustmentValueChanged,e,AdjustmentEvent,declaration);
Parameter(GanttTree,autoscroll,nRowint,local);
Parameter(GanttTree,autoscroll,pt,Point,declaration);
Parameter(GanttTree,autoscroll,raOuterRectangle,local);
Parameter(GanttTree,checkDepend,successorsVector,local);
Parameter(GanttTree,checkDepend,task1,Task,declaration);
Parameter(GanttTree,checkDepend,task2,GanttTask,declaration);
Parameter(GanttTree,checkDepend,tempTaskGanttTask,local);
Parameter(GanttTree,checkDepend,tempTaskIDint,local);
Parameter(GanttTree,computePercentComplete,eEnumeration,local);
Parameter(GanttTree,computePercentComplete,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,computePercentComplete,parent,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,computePercentComplete,taskTask,local);
Parameter(GanttTree,computePercentComplete,taskcompletefloat,local);
Parameter(GanttTree,computePercentComplete,tasklengthfloat,local);
Parameter(GanttTree,computePercentComplete,taskpctfloat,local);
Parameter(GanttTree,computePercentComplete,temptaskGanttTask,local);
Parameter(GanttTree,computePercentComplete,totalcompletefloat,local);
Parameter(GanttTree,computePercentComplete,totallengthfloat,local);
Parameter(GanttTree,copySelectedNode,currentSelectionTreePath,local);
Parameter(GanttTree,createPopupMenu,all,boolean,declaration);
Parameter(GanttTree,createPopupMenu,bOneboolean,local);
Parameter(GanttTree,createPopupMenu,menuJPopupMenu,local);
Parameter(GanttTree,createPopupMenu,x,int,declaration);
Parameter(GanttTree,createPopupMenu,y,int,declaration);
Parameter(GanttTree,cutSelectedNode,algAdjustTaskBoundsAlgorithm,local);
Parameter(GanttTree,cutSelectedNode,currentSelectionTreePath,local);
Parameter(GanttTree,cutSelectedNode,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,cutSelectedNode,taskFatherGanttTask,local);
Parameter(GanttTree,dedentCurrentNodes,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttTree,dedentCurrentNodes,currentTask,local);
Parameter(GanttTree,dedentCurrentNodes,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,dedentCurrentNodes,newFatherDefaultMutableTreeNode,local);
Parameter(GanttTree,dedentCurrentNodes,oldIndexint,local);
Parameter(GanttTree,dedentCurrentNodes,pathTreePath,local);
Parameter(GanttTree,dedentCurrentNodes,selectedPathsTreePath[],local);
Parameter(GanttTree,dedentCurrentNodes,treepathTreeNode[],local);
Parameter(GanttTree,downCurrentNodes,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttTree,downCurrentNodes,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,downCurrentNodes,indexint,local);
Parameter(GanttTree,downCurrentNodes,pathTreePath,local);
Parameter(GanttTree,downCurrentNodes,selectedPathsTreePath[],local);
Parameter(GanttTree,downCurrentNodes,treepathTreeNode[],local);
Parameter(GanttTree,dragDropEnd,dsde,DragSourceDropEvent,declaration);
Parameter(GanttTree,dragEnter,dsde,DragSourceDragEvent,declaration);
Parameter(GanttTree,dragEnter,dtde,DropTargetDragEvent,declaration);
Parameter(GanttTree,dragExit,dse,DragSourceEvent,declaration);
Parameter(GanttTree,dragExit,dte,DropTargetEvent,declaration);
Parameter(GanttTree,dragGestureRecognized,dge,DragGestureEvent,declaration);
Parameter(GanttTree,dragGestureRecognized,g2Graphics2D,local);
Parameter(GanttTree,dragGestureRecognized,iconIcon,local);
Parameter(GanttTree,dragGestureRecognized,lblJLabel,local);
Parameter(GanttTree,dragGestureRecognized,nStartOfTextint,local);
Parameter(GanttTree,dragGestureRecognized,pathTreePath,local);
Parameter(GanttTree,dragGestureRecognized,ptDragOriginPoint,local);
Parameter(GanttTree,dragGestureRecognized,raPathRectangle,local);
Parameter(GanttTree,dragGestureRecognized,transferableTransferable,local);
Parameter(GanttTree,dragOver,dsde,DragSourceDragEvent,declaration);
Parameter(GanttTree,dragOver,dtde,DropTargetDragEvent,declaration);
Parameter(GanttTree,dragOver,g2Graphics2D,local);
Parameter(GanttTree,dragOver,pathTreePath,local);
Parameter(GanttTree,dragOver,ptPoint,local);
Parameter(GanttTree,dragOver,raPathRectangle,local);
Parameter(GanttTree,drop,dtde,DropTargetDropEvent,declaration);
Parameter(GanttTree,drop,flavorDataFlavor,local);
Parameter(GanttTree,drop,flavorsDataFlavor[],local);
Parameter(GanttTree,drop,indexint,local);
Parameter(GanttTree,drop,pathNewChildTreePath,local);
Parameter(GanttTree,drop,pathSourceTreePath,local);
Parameter(GanttTree,drop,ptPoint,local);
Parameter(GanttTree,drop,sourceDefaultMutableTreeNode,local);
Parameter(GanttTree,drop,sourceFatherTreeNode,local);
Parameter(GanttTree,drop,targetDefaultMutableTreeNode,local);
Parameter(GanttTree,drop,transferableTransferable,local);
Parameter(GanttTree,dropActionChanged,dsde,DragSourceDragEvent,declaration);
Parameter(GanttTree,dropActionChanged,dtde,DropTargetDragEvent,declaration);
Parameter(GanttTree,expandRefresh,childrenEnumeration,local);
Parameter(GanttTree,expandRefresh,moved,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,expandRefresh,movedTaskTask,local);
Parameter(GanttTree,focusGained,e,FocusEvent,declaration);
Parameter(GanttTree,forwardScheduling,algRecalculateTaskScheduleAlgorithm,local);
Parameter(GanttTree,getAllChildTask,base,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,getAllChildTask,baseDefaultMutableTreeNode,local);
Parameter(GanttTree,getAllChildTask,eEnumeration,local);
Parameter(GanttTree,getAllChildTask,resArrayList,local);
Parameter(GanttTree,getAllChildTask,task,Task,declaration);
Parameter(GanttTree,getAllGanttTasks,eEnumeration,local);
Parameter(GanttTree,getAllGanttTasks,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,getAllGanttTasks,resArrayList,local);
Parameter(GanttTree,getAllTaskArray,alArrayList,local);
Parameter(GanttTree,getAllTaskString,except,String,declaration);
Parameter(GanttTree,getAllTaskString,iint,local);
Parameter(GanttTree,getAllTaskString,jint,local);
Parameter(GanttTree,getAllTaskString,lArrayList,local);
Parameter(GanttTree,getAllTaskString,resString[],local);
Parameter(GanttTree,getAllTasks,eEnumeration,local);
Parameter(GanttTree,getAllTasks,resArrayList,local);
Parameter(GanttTree,getArryListTaskString,except,String,declaration);
Parameter(GanttTree,getArryListTaskString,lArrayList,local);
Parameter(GanttTree,getArryListTaskString,resArrayList,local);
Parameter(GanttTree,getAutoscrollInsets,raInnerRectangle,local);
Parameter(GanttTree,getAutoscrollInsets,raOuterRectangle,local);
Parameter(GanttTree,getCellEditorValue,ganttTaskTask,local);
Parameter(GanttTree,getCellEditorValue,tmpMutableTreeNodeDefaultMutableTreeNode,local);
Parameter(GanttTree,getCellEditorValue,userObjectObject,local);
Parameter(GanttTree,getFatherNode,node,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,getFatherNode,node,Task,declaration);
Parameter(GanttTree,getFatherNode,tmpDefaultMutableTreeNode,local);
Parameter(GanttTree,getNode,baseDefaultMutableTreeNode,local);
Parameter(GanttTree,getNode,eEnumeration,local);
Parameter(GanttTree,getNode,id,int,declaration);
Parameter(GanttTree,getNode,resDefaultMutableTreeNode,local);
Parameter(GanttTree,getSelectedNode,currentSelectionTreePath,local);
Parameter(GanttTree,getSelectedNode,dmtnselectedDefaultMutableTreeNode,local);
Parameter(GanttTree,getSelectedNodes,currentSelectionTreePath[],local);
Parameter(GanttTree,getSelectedNodes,dmtnselectedDefaultMutableTreeNode[],local);
Parameter(GanttTree,getSelectedTask,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,getTask,baseDefaultMutableTreeNode,local);
Parameter(GanttTree,getTask,eEnumeration,local);
Parameter(GanttTree,getTask,name,String,declaration);
Parameter(GanttTree,getToolTip,assignmentsResourceAssignment[],local);
Parameter(GanttTree,getToolTip,iint,local);
Parameter(GanttTree,getToolTip,maxLengthint,local);
Parameter(GanttTree,getToolTip,notesString,local);
Parameter(GanttTree,getToolTip,resString,local);
Parameter(GanttTree,getToolTip,task,Task,declaration);
Parameter(GanttTree,getToolTip,type,int,declaration);
Parameter(GanttTree,getTransferData,flavor,DataFlavor,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,expanded,boolean,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,hasFocus,boolean,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,leaf,boolean,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,row,int,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,selected,boolean,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,taskTask,local);
Parameter(GanttTree,getTreeCellRendererComponent,tree,JTree,declaration);
Parameter(GanttTree,getTreeCellRendererComponent,typeint,local);
Parameter(GanttTree,getTreeCellRendererComponent,value,Object,declaration);
Parameter(GanttTree,hasTasks,eEnumeration,local);
Parameter(GanttTree,indentCurrentNodes,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttTree,indentCurrentNodes,currentTask,local);
Parameter(GanttTree,indentCurrentNodes,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,indentCurrentNodes,newFatherDefaultMutableTreeNode,local);
Parameter(GanttTree,indentCurrentNodes,oldIndexint,local);
Parameter(GanttTree,indentCurrentNodes,pathTreePath,local);
Parameter(GanttTree,indentCurrentNodes,selectedPathsTreePath[],local);
Parameter(GanttTree,indentCurrentNodes,treepathTreeNode[],local);
Parameter(GanttTree,insertClonedNode,_cGanttTask,local);
Parameter(GanttTree,insertClonedNode,_tGanttTask,local);
Parameter(GanttTree,insertClonedNode,child,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,insertClonedNode,cloneChildNodeDefaultMutableTreeNode,local);
Parameter(GanttTree,insertClonedNode,first,boolean,declaration);
Parameter(GanttTree,insertClonedNode,location,int,declaration);
Parameter(GanttTree,insertClonedNode,newTaskGanttTask,local);
Parameter(GanttTree,insertClonedNode,originalTaskGanttTask,local);
Parameter(GanttTree,insertClonedNode,parent,DefaultMutableTreeNode,declaration);
Parameter(GanttTree,insertClonedNode,tmiTaskManagerImpl,local);
Parameter(GanttTree,isDataFlavorSupported,flavor,DataFlavor,declaration);
Parameter(GanttTree,isDragAcceptable,e,DropTargetDragEvent,declaration);
Parameter(GanttTree,isDragAcceptable,pathTreePath,local);
Parameter(GanttTree,isDragAcceptable,ptPoint,local);
Parameter(GanttTree,isDragAcceptable,taskTask,local);
Parameter(GanttTree,isDropAcceptable,e,DropTargetDropEvent,declaration);
Parameter(GanttTree,isDropAcceptable,pathTreePath,local);
Parameter(GanttTree,isDropAcceptable,ptPoint,local);
Parameter(GanttTree,mouseClicked,e,MouseEvent,declaration);
Parameter(GanttTree,pasteNode,currentDefaultMutableTreeNode,local);
Parameter(GanttTree,refreshAllChild,taskToMove,String,declaration);
Parameter(GanttTree,refreshAllFather,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,refreshAllFather,taskFatherTask,local);
Parameter(GanttTree,refreshAllFather,taskToMove,String,declaration);
Parameter(GanttTree,refreshAllFather,tmpTaskTask,local);
Parameter(GanttTree,removeCurrentNode,currentNodeDefaultMutableTreeNode,local);
Parameter(GanttTree,removeCurrentNode,currentSelectionTreePath,local);
Parameter(GanttTree,removeCurrentNode,parentDefaultMutableTreeNode,local);
Parameter(GanttTree,selectTreeRow,row,int,declaration);
Parameter(GanttTree,setAllTasksUnchecked,taskGanttTask,local);
Parameter(GanttTree,setAllTasksUnchecked,tasksArrayList,local);
Parameter(GanttTree,setGraphicArea,area,GanttGraphicArea,declaration);
Parameter(GanttTree,treeCollapsed,e,TreeExpansionEvent,declaration);
Parameter(GanttTree,treeCollapsed,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,treeCollapsed,taskTask,local);
Parameter(GanttTree,treeExpanded,e,TreeExpansionEvent,declaration);
Parameter(GanttTree,treeExpanded,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,treeExpanded,taskTask,local);
Parameter(GanttTree,treeNodesChanged,e,TreeModelEvent,declaration);
Parameter(GanttTree,treeNodesInserted,e,TreeModelEvent,declaration);
Parameter(GanttTree,treeNodesInserted,nodeDefaultMutableTreeNode,local);
Parameter(GanttTree,treeNodesInserted,taskTask,local);
Parameter(GanttTree,treeNodesRemoved,e,TreeModelEvent,declaration);
Parameter(GanttTree,treeStructureChanged,e,TreeModelEvent,declaration);
Parameter(GanttTree,upCurrentNodes,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttTree,upCurrentNodes,fatherDefaultMutableTreeNode,local);
Parameter(GanttTree,upCurrentNodes,indexint,local);
Parameter(GanttTree,upCurrentNodes,pathTreePath,local);
Parameter(GanttTree,upCurrentNodes,selectedPathsTreePath[],local);
Parameter(GanttTree,upCurrentNodes,treepathTreeNode[],local);
Parameter(GanttXFIGSaver,GanttXFIGSaver,tree,GanttTree,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,tree,GanttTree,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,tree,GanttTree,declaration);
Parameter(PDFExportData,PDFExportData,ganttTree,GanttTree,declaration);
Parameter(ProjectExportData,ProjectExportData,ganttTree,GanttTree,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,tree,GanttTree,declaration);
Relation(GanttCSVExport;beginToSave;getAllTasks,GanttTree,N);
Relation(GanttDialogProperties;actionPerformed;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttDialogProperties;actionPerformed;getJTree,GanttTree,N);
Relation(GanttDialogProperties;actionPerformed;getNode,GanttTree,int);
Relation(GanttGraphicArea;GanttGraphicArea;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttGraphicArea;GanttGraphicArea;createPopupMenu,GanttTree,int-int-boolean);
Relation(GanttGraphicArea;GanttGraphicArea;forwardScheduling,GanttTree,N);
Relation(GanttGraphicArea;GanttGraphicArea;selectTreeRow,GanttTree,int);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;fitWholeProject;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;getChart;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;isVisible;getFatherNode,GanttTree,Task);
Relation(GanttGraphicArea;paintComponent;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;paintTasks;computePercentComplete,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;paintTasks;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;printTask;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;printTasks;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;printTasks;getRoot,GanttTree,N);
Relation(GanttHTMLExport;save;writeTasks,GanttHTMLExport,GanttTree);
Relation(GanttHTMLExport;writeTasks;getAllTasks,GanttTree,N);
Relation(GanttHTMLExport;writeTasks;getRoot,GanttTree,N);
Relation(GanttPDFExport;save;writeTasks,GanttPDFExport,GanttTree);
Relation(GanttPDFExport;writeTasks;getAllTasks,GanttTree,N);
Relation(GanttProject;GanttProject;getJTree,GanttTree,N);
Relation(GanttProject;GanttProject;setGraphicArea,GanttTree,GanttGraphicArea);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;getAllTasks,GanttTree,N);
Relation(GanttProject;actionPerformed;copySelectedNode,GanttTree,N);
Relation(GanttProject;actionPerformed;cutSelectedNode,GanttTree,N);
Relation(GanttProject;actionPerformed;dedentCurrentNodes,GanttTree,N);
Relation(GanttProject;actionPerformed;getSelectedTask,GanttTree,N);
Relation(GanttProject;actionPerformed;indentCurrentNodes,GanttTree,N);
Relation(GanttProject;actionPerformed;pasteNode,GanttTree,N);
Relation(GanttProject;addButtons;dedentCurrentNodes,GanttTree,N);
Relation(GanttProject;addButtons;indentCurrentNodes,GanttTree,N);
Relation(GanttProject;changeLookAndFeel;getJTree,GanttTree,N);
Relation(GanttProject;closeProject;clearTree,GanttTree,N);
Relation(GanttProject;deleteTasks;getFatherNode,GanttTree,Task);
Relation(GanttProject;deleteTasks;getSelectedNodes,GanttTree,N);
Relation(GanttProject;deleteTasks;removeCurrentNode,GanttTree,N);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;downDatas;downCurrentNodes,GanttTree,N);
Relation(GanttProject;linkRelationships;getSelectedNodes,GanttTree,N);
Relation(GanttProject;newTask;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttProject;newTask;getSelectedNode,GanttTree,N);
Relation(GanttProject;newTask;getSelectedTask,GanttTree,N);
Relation(GanttProject;newTask;hasTasks,GanttTree,N);
Relation(GanttProject;newTask;refreshAllChild,GanttTree,String);
Relation(GanttProject;openXMLStream;clearTree,GanttTree,N);
Relation(GanttProject;propertiesTask;getSelectedNode,GanttTree,N);
Relation(GanttProject;unlinkRelationships;getSelectedNodes,GanttTree,N);
Relation(GanttProject;upDatas;upCurrentNodes,GanttTree,N);
Relation(GanttTXTOpen;load;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttTaskPropertiesBean;GanttTaskPropertiesBean;setTree,GanttTaskPropertiesBean,GanttTree);
Relation(GanttTree;GanttTree;add,Container,Component-Object);
Relation(GanttTree;GanttTree;addAdjustmentListener,JScrollBar,AdjustmentListener);
Relation(GanttTree;GanttTree;addDragSourceListener,DragSource,DragSourceListener);
Relation(GanttTree;GanttTree;addMouseListener,Component,MouseListener);
Relation(GanttTree;GanttTree;addTreeExpansionListener,JTree,TreeExpansionListener);
Relation(GanttTree;GanttTree;addTreeModelListener,DefaultTreeModel,TreeModelListener);
Relation(GanttTree;GanttTree;consume,InputEvent,N);
Relation(GanttTree;GanttTree;createDefaultDragGestureRecognizer,DragSource,Component-int-DragGestureListener);
Relation(GanttTree;GanttTree;createPopupMenu,GanttTree,int-int-boolean);
Relation(GanttTree;GanttTree;getButton,MouseEvent,N);
Relation(GanttTree;GanttTree;getClickCount,MouseEvent,N);
Relation(GanttTree;GanttTree;getDefaultDragSource,DragSource,N);
Relation(GanttTree;GanttTree;getPathForLocation,JTree,int-int);
Relation(GanttTree;GanttTree;getRowForLocation,JTree,int-int);
Relation(GanttTree;GanttTree;getSelectionModel,JTree,N);
Relation(GanttTree;GanttTree;getSelectionPaths,JTree,N);
Relation(GanttTree;GanttTree;getVerticalScrollBar,JScrollPane,N);
Relation(GanttTree;GanttTree;getX,MouseEvent,N);
Relation(GanttTree;GanttTree;getY,MouseEvent,N);
Relation(GanttTree;GanttTree;initRootNode,GanttTree,N);
Relation(GanttTree;GanttTree;propertiesTask,GanttProject,N);
Relation(GanttTree;GanttTree;registerComponent,ToolTipManager,JComponent);
Relation(GanttTree;GanttTree;setBackground,JComponent,Color);
Relation(GanttTree;GanttTree;setCellEditor,JTree,TreeCellEditor);
Relation(GanttTree;GanttTree;setCellRenderer,JTree,TreeCellRenderer);
Relation(GanttTree;GanttTree;setDefaultActions,DropTarget,int);
Relation(GanttTree;GanttTree;setEditable,JTree,boolean);
Relation(GanttTree;GanttTree;setLayout,Container,LayoutManager);
Relation(GanttTree;GanttTree;setRootVisible,JTree,boolean);
Relation(GanttTree;GanttTree;setRowHeight,JTree,int);
Relation(GanttTree;GanttTree;setSelectionMode,TreeSelectionModel,int);
Relation(GanttTree;GanttTree;setSelectionPath,JTree,TreePath);
Relation(GanttTree;GanttTree;setShowsRootHandles,JTree,boolean);
Relation(GanttTree;GanttTree;sharedInstance,ToolTipManager,N);
Relation(GanttTree;GanttTreeCellEditor;addFocusListener,Component,FocusListener);
Relation(GanttTree;GanttTreeCellRenderer;setOpaque,JComponent,boolean);
Relation(GanttTree;GanttTreeDropListener;expandPath,JTree,TreePath);
Relation(GanttTree;GanttTreeDropListener;getBlue,Color,N);
Relation(GanttTree;GanttTreeDropListener;getGreen,Color,N);
Relation(GanttTree;GanttTreeDropListener;getRed,Color,N);
Relation(GanttTree;GanttTreeDropListener;isExpanded,JTree,TreePath);
Relation(GanttTree;GanttTreeDropListener;setRepeats,Timer,boolean);
Relation(GanttTree;NgetInstance,GanttLanguage,N);
Relation(GanttTree;addObject;forwardScheduling,GanttTree,N);
Relation(GanttTree;addObject;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttTree;addObject;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;addObject;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;addObject;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;addObject;scrollPathToVisible,JTree,TreePath);
Relation(GanttTree;addObjectWithExpand;forwardScheduling,GanttTree,N);
Relation(GanttTree;addObjectWithExpand;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttTree;addObjectWithExpand;getExpand,Task,N);
Relation(GanttTree;addObjectWithExpand;getParent,DefaultMutableTreeNode,N);
Relation(GanttTree;addObjectWithExpand;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;addObjectWithExpand;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;addObjectWithExpand;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;addObjectWithExpand;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;addObjectWithExpand;scrollPathToVisible,JTree,TreePath);
Relation(GanttTree;addObjectWithExpand;setExpand,MutableTask,boolean);
Relation(GanttTree;adjustmentValueChanged;getValue,AdjustmentEvent,N);
Relation(GanttTree;adjustmentValueChanged;repaint,Component,N);
Relation(GanttTree;adjustmentValueChanged;setScrollBar,GanttGraphicArea,int);
Relation(GanttTree;autoscroll;getBounds,Component,N);
Relation(GanttTree;autoscroll;getClosestRowForLocation,JTree,int-int);
Relation(GanttTree;autoscroll;getRowCount,JTree,N);
Relation(GanttTree;autoscroll;scrollRowToVisible,JTree,int);
Relation(GanttTree;checkDepend;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttTree;checkDepend;get,Vector,int);
Relation(GanttTree;checkDepend;getAllChildTask,GanttTree,Task);
Relation(GanttTree;checkDepend;getSuccessorTaskID,GanttTaskRelationship,N);
Relation(GanttTree;checkDepend;getSuccessorsOld,GanttTask,N);
Relation(GanttTree;checkDepend;getTask,TaskManager,int);
Relation(GanttTree;checkDepend;getTaskID,Task,N);
Relation(GanttTree;checkDepend;getTaskID,TaskImpl,N);
Relation(GanttTree;checkDepend;getTaskManager,GanttTree,N);
Relation(GanttTree;checkDepend;size,ArrayList,N);
Relation(GanttTree;checkDepend;size,Vector,N);
Relation(GanttTree;clearTree;initRootNode,GanttTree,N);
Relation(GanttTree;clearTree;reload,DefaultTreeModel,N);
Relation(GanttTree;clearTree;removeAllChildren,DefaultMutableTreeNode,N);
Relation(GanttTree;clearTree;setRoot,DefaultTreeModel,TreeNode);
Relation(GanttTree;computePercentComplete;getCompletionPercentage,TaskImpl,N);
Relation(GanttTree;computePercentComplete;getLength,GanttTask,N);
Relation(GanttTree;computePercentComplete;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;computePercentComplete;hasMoreElements,Enumeration,N);
Relation(GanttTree;computePercentComplete;nextElement,Enumeration,N);
Relation(GanttTree;computePercentComplete;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;computePercentComplete;setCompletionPercentage,MutableTask,int);
Relation(GanttTree;copySelectedNode;getLastPathComponent,TreePath,N);
Relation(GanttTree;copySelectedNode;getSelectionPath,JTree,N);
Relation(GanttTree;createPopupMenu;add,JPopupMenu,Action);
Relation(GanttTree;createPopupMenu;add,JPopupMenu,JMenuItem);
Relation(GanttTree;createPopupMenu;addSeparator,JPopupMenu,N);
Relation(GanttTree;createPopupMenu;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttTree;createPopupMenu;correctLabel,GanttProject,String);
Relation(GanttTree;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(GanttTree;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(GanttTree;createPopupMenu;getScrollBar,GanttGraphicArea,N);
Relation(GanttTree;createPopupMenu;getSelectionCount,JTree,N);
Relation(GanttTree;createPopupMenu;getText,GanttLanguage,String);
Relation(GanttTree;createPopupMenu;show,JPopupMenu,Component-int-int);
Relation(GanttTree;cutSelectedNode;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttTree;cutSelectedNode;getAlgorithmCollection,TaskManager,N);
Relation(GanttTree;cutSelectedNode;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;cutSelectedNode;getLastPathComponent,TreePath,N);
Relation(GanttTree;cutSelectedNode;getSelectedNode,GanttTree,N);
Relation(GanttTree;cutSelectedNode;getSelectionPath,JTree,N);
Relation(GanttTree;cutSelectedNode;getTaskManager,GanttTree,N);
Relation(GanttTree;cutSelectedNode;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;cutSelectedNode;removeCurrentNode,GanttTree,N);
Relation(GanttTree;cutSelectedNode;repaint,Component,N);
Relation(GanttTree;cutSelectedNode;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttTree;cutSelectedNode;setUserObject,DefaultMutableTreeNode,Object);
Relation(GanttTree;dedentCurrentNodes;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;dedentCurrentNodes;forwardScheduling,GanttTree,N);
Relation(GanttTree;dedentCurrentNodes;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;dedentCurrentNodes;getIndex,DefaultMutableTreeNode,TreeNode);
Relation(GanttTree;dedentCurrentNodes;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;dedentCurrentNodes;getSelectedNodes,GanttTree,N);
Relation(GanttTree;dedentCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;dedentCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;dedentCurrentNodes;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;dedentCurrentNodes;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;dedentCurrentNodes;nodesWereRemoved,DefaultTreeModel,TreeNode-int[]-Object[]);
Relation(GanttTree;dedentCurrentNodes;refreshAllFather,GanttTree,String);
Relation(GanttTree;dedentCurrentNodes;removeFromParent,DefaultMutableTreeNode,N);
Relation(GanttTree;dedentCurrentNodes;repaint,Component,N);
Relation(GanttTree;dedentCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;dedentCurrentNodes;setSelectionPaths,JTree,TreePath[]);
Relation(GanttTree;dedentCurrentNodes;toString,Object,N);
Relation(GanttTree;downCurrentNodes;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;downCurrentNodes;forwardScheduling,GanttTree,N);
Relation(GanttTree;downCurrentNodes;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttTree;downCurrentNodes;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;downCurrentNodes;getIndex,DefaultMutableTreeNode,TreeNode);
Relation(GanttTree;downCurrentNodes;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;downCurrentNodes;getSelectedNodes,GanttTree,N);
Relation(GanttTree;downCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;downCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;downCurrentNodes;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;downCurrentNodes;nodesWereRemoved,DefaultTreeModel,TreeNode-int[]-Object[]);
Relation(GanttTree;downCurrentNodes;removeFromParent,DefaultMutableTreeNode,N);
Relation(GanttTree;downCurrentNodes;repaint,Component,N);
Relation(GanttTree;downCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;downCurrentNodes;setSelectionPaths,JTree,TreePath[]);
Relation(GanttTree;dragEnter;acceptDrag,DropTargetDragEvent,int);
Relation(GanttTree;dragEnter;getDropAction,DropTargetDragEvent,N);
Relation(GanttTree;dragEnter;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
Relation(GanttTree;dragEnter;rejectDrag,DropTargetDragEvent,N);
Relation(GanttTree;dragExit;getBounds,RectangularShape,N);
Relation(GanttTree;dragExit;isDragImageSupported,DragSource,N);
Relation(GanttTree;dragExit;repaint,Component,N);
Relation(GanttTree;dragExit;repaint,JComponent,Rectangle);
Relation(GanttTree;dragGestureRecognized;createGraphics,BufferedImage,N);
Relation(GanttTree;dragGestureRecognized;dispose,Graphics,N);
Relation(GanttTree;dragGestureRecognized;fillRect,Graphics,int-int-int-int);
Relation(GanttTree;dragGestureRecognized;getCellRenderer,JTree,N);
Relation(GanttTree;dragGestureRecognized;getDragOrigin,DragGestureEvent,N);
Relation(GanttTree;dragGestureRecognized;getHeight,BufferedImage,N);
Relation(GanttTree;dragGestureRecognized;getHeight,Rectangle,N);
Relation(GanttTree;dragGestureRecognized;getIcon,JLabel,N);
Relation(GanttTree;dragGestureRecognized;getIconTextGap,JLabel,N);
Relation(GanttTree;dragGestureRecognized;getIconWidth,Icon,N);
Relation(GanttTree;dragGestureRecognized;getInstance,AlphaComposite,int-float);
Relation(GanttTree;dragGestureRecognized;getLastPathComponent,TreePath,N);
Relation(GanttTree;dragGestureRecognized;getModel,JTree,N);
Relation(GanttTree;dragGestureRecognized;getPathBounds,JTree,TreePath);
Relation(GanttTree;dragGestureRecognized;getPathForLocation,JTree,int-int);
Relation(GanttTree;dragGestureRecognized;getTreeCellRendererComponent,TreeCellRenderer,JTree-Object-boolean-boolean-boolean-int-boolean);
Relation(GanttTree;dragGestureRecognized;getWidth,JComponent,N);
Relation(GanttTree;dragGestureRecognized;getWidth,Rectangle,N);
Relation(GanttTree;dragGestureRecognized;isExpanded,JTree,TreePath);
Relation(GanttTree;dragGestureRecognized;isLeaf,TreeModel,Object);
Relation(GanttTree;dragGestureRecognized;paint,JComponent,Graphics);
Relation(GanttTree;dragGestureRecognized;setComposite,Graphics2D,Composite);
Relation(GanttTree;dragGestureRecognized;setLocation,Point,int-int);
Relation(GanttTree;dragGestureRecognized;setPaint,Graphics2D,Paint);
Relation(GanttTree;dragGestureRecognized;setSelectionPath,JTree,TreePath);
Relation(GanttTree;dragGestureRecognized;setSize,Component,int-int);
Relation(GanttTree;dragGestureRecognized;startDrag,DragGestureEvent,Cursor-Image-Point-Transferable-DragSourceListener);
Relation(GanttTree;dragOver;acceptDrag,DropTargetDragEvent,int);
Relation(GanttTree;dragOver;createUnion,Rectangle2D,Rectangle2D);
Relation(GanttTree;dragOver;drawImage,Graphics2D,Image-AffineTransform-ImageObserver);
Relation(GanttTree;dragOver;equals,Point,Object);
Relation(GanttTree;dragOver;fill,Graphics2D,Shape);
Relation(GanttTree;dragOver;getBounds,RectangularShape,N);
Relation(GanttTree;dragOver;getClosestPathForLocation,JTree,int-int);
Relation(GanttTree;dragOver;getDropAction,DropTargetDragEvent,N);
Relation(GanttTree;dragOver;getGraphics,JComponent,N);
Relation(GanttTree;dragOver;getHeight,BufferedImage,N);
Relation(GanttTree;dragOver;getHeight,Rectangle,N);
Relation(GanttTree;dragOver;getLocation,DropTargetDragEvent,N);
Relation(GanttTree;dragOver;getPathBounds,JTree,TreePath);
Relation(GanttTree;dragOver;getTranslateInstance,AffineTransform,double-double);
Relation(GanttTree;dragOver;getWidth,BufferedImage,N);
Relation(GanttTree;dragOver;getWidth,JComponent,N);
Relation(GanttTree;dragOver;getX,RectangularShape,N);
Relation(GanttTree;dragOver;getY,RectangularShape,N);
Relation(GanttTree;dragOver;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
Relation(GanttTree;dragOver;isDragImageSupported,DragSource,N);
Relation(GanttTree;dragOver;paintImmediately,JComponent,Rectangle);
Relation(GanttTree;dragOver;rejectDrag,DropTargetDragEvent,N);
Relation(GanttTree;dragOver;restart,Timer,N);
Relation(GanttTree;dragOver;setColor,Graphics,Color);
Relation(GanttTree;dragOver;setRect,Rectangle2D,double-double-double-double);
Relation(GanttTree;drop;acceptDrop,DropTargetDropEvent,int);
Relation(GanttTree;drop;dropComplete,DropTargetDropEvent,boolean);
Relation(GanttTree;drop;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;drop;forwardScheduling,GanttTree,N);
Relation(GanttTree;drop;getClosestPathForLocation,JTree,int-int);
Relation(GanttTree;drop;getDropAction,DropTargetDropEvent,N);
Relation(GanttTree;drop;getIndex,TreeNode,TreeNode);
Relation(GanttTree;drop;getLastPathComponent,TreePath,N);
Relation(GanttTree;drop;getLocation,DropTargetDropEvent,N);
Relation(GanttTree;drop;getParent,DefaultMutableTreeNode,N);
Relation(GanttTree;drop;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;drop;getTransferData,Transferable,DataFlavor);
Relation(GanttTree;drop;getTransferDataFlavors,Transferable,N);
Relation(GanttTree;drop;getTransferable,DropTargetDropEvent,N);
Relation(GanttTree;drop;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;drop;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;drop;isDropAcceptable,GanttTreeDropListener,DropTargetDropEvent);
Relation(GanttTree;drop;isMimeTypeEqual,DataFlavor,String);
Relation(GanttTree;drop;nodesWereRemoved,DefaultTreeModel,TreeNode-int[]-Object[]);
Relation(GanttTree;drop;println,PrintStream,Object);
Relation(GanttTree;drop;refreshAllFather,GanttTree,String);
Relation(GanttTree;drop;rejectDrop,DropTargetDropEvent,N);
Relation(GanttTree;drop;removeFromParent,DefaultMutableTreeNode,N);
Relation(GanttTree;drop;repaint,Component,N);
Relation(GanttTree;drop;setAskForSave,GanttProject,boolean);
Relation(GanttTree;drop;setSelectionPath,JTree,TreePath);
Relation(GanttTree;drop;stop,Timer,N);
Relation(GanttTree;drop;toString,Object,N);
Relation(GanttTree;dropActionChanged;acceptDrag,DropTargetDragEvent,int);
Relation(GanttTree;dropActionChanged;getDropAction,DropTargetDragEvent,N);
Relation(GanttTree;dropActionChanged;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
Relation(GanttTree;dropActionChanged;rejectDrag,DropTargetDragEvent,N);
Relation(GanttTree;expandRefresh;children,DefaultMutableTreeNode,N);
Relation(GanttTree;expandRefresh;expandPath,JTree,TreePath);
Relation(GanttTree;expandRefresh;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;expandRefresh;getExpand,Task,N);
Relation(GanttTree;expandRefresh;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;expandRefresh;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;expandRefresh;hasMoreElements,Enumeration,N);
Relation(GanttTree;expandRefresh;nextElement,Enumeration,N);
Relation(GanttTree;focusGained;getText,JTextComponent,N);
Relation(GanttTree;focusGained;length,String,N);
Relation(GanttTree;focusGained;select,JTextComponent,int-int);
Relation(GanttTree;forwardScheduling;getAlgorithmCollection,TaskManager,N);
Relation(GanttTree;forwardScheduling;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(GanttTree;forwardScheduling;getTaskManager,GanttTree,N);
Relation(GanttTree;forwardScheduling;printStackTrace,Throwable,N);
Relation(GanttTree;forwardScheduling;run,RecalculateTaskScheduleAlgorithm,N);
Relation(GanttTree;getAllChildTask;add,ArrayList,Object);
Relation(GanttTree;getAllChildTask;children,DefaultMutableTreeNode,N);
Relation(GanttTree;getAllChildTask;getNode,GanttTree,int);
Relation(GanttTree;getAllChildTask;getTaskID,Task,N);
Relation(GanttTree;getAllChildTask;hasMoreElements,Enumeration,N);
Relation(GanttTree;getAllChildTask;nextElement,Enumeration,N);
Relation(GanttTree;getAllGanttTasks;add,ArrayList,Object);
Relation(GanttTree;getAllGanttTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getAllGanttTasks;hasMoreElements,Enumeration,N);
Relation(GanttTree;getAllGanttTasks;nextElement,Enumeration,N);
Relation(GanttTree;getAllGanttTasks;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;getAllTaskArray;getAllTasks,GanttTree,N);
Relation(GanttTree;getAllTaskArray;toArray,ArrayList,N);
Relation(GanttTree;getAllTaskString;get,ArrayList,int);
Relation(GanttTree;getAllTaskString;getAllTasks,GanttTree,N);
Relation(GanttTree;getAllTaskString;set,Array,Object-int-Object);
Relation(GanttTree;getAllTaskString;size,ArrayList,N);
Relation(GanttTree;getAllTaskString;toString,Object,N);
Relation(GanttTree;getAllTasks;add,ArrayList,Object);
Relation(GanttTree;getAllTasks;hasMoreElements,Enumeration,N);
Relation(GanttTree;getAllTasks;nextElement,Enumeration,N);
Relation(GanttTree;getAllTasks;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;getArryListTaskString;add,ArrayList,Object);
Relation(GanttTree;getArryListTaskString;get,ArrayList,int);
Relation(GanttTree;getArryListTaskString;getAllTasks,GanttTree,N);
Relation(GanttTree;getArryListTaskString;size,ArrayList,N);
Relation(GanttTree;getArryListTaskString;toString,Object,N);
Relation(GanttTree;getAutoscrollInsets;getBounds,Component,N);
Relation(GanttTree;getAutoscrollInsets;getParent,Component,N);
Relation(GanttTree;getCellEditorValue;getLastSelectedPathComponent,JTree,N);
Relation(GanttTree;getCellEditorValue;getText,JTextComponent,N);
Relation(GanttTree;getCellEditorValue;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getCellEditorValue;setAskForSave,GanttProject,boolean);
Relation(GanttTree;getCellEditorValue;setName,MutableTask,String);
Relation(GanttTree;getFatherNode;getNode,GanttTree,int);
Relation(GanttTree;getFatherNode;getParent,DefaultMutableTreeNode,N);
Relation(GanttTree;getFatherNode;getTaskID,Task,N);
Relation(GanttTree;getLastNode;getLastLeaf,DefaultMutableTreeNode,N);
Relation(GanttTree;getNode;getModel,JTree,N);
Relation(GanttTree;getNode;getRoot,TreeModel,N);
Relation(GanttTree;getNode;getTaskID,Task,N);
Relation(GanttTree;getNode;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getNode;hasMoreElements,Enumeration,N);
Relation(GanttTree;getNode;nextElement,Enumeration,N);
Relation(GanttTree;getNode;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;getSelectedNode;getLastPathComponent,TreePath,N);
Relation(GanttTree;getSelectedNode;getSelectionPath,JTree,N);
Relation(GanttTree;getSelectedNodes;getLastPathComponent,TreePath,N);
Relation(GanttTree;getSelectedNodes;getSelectionPaths,JTree,N);
Relation(GanttTree;getSelectedTask;getSelectedNode,GanttTree,N);
Relation(GanttTree;getSelectedTask;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getTask;equals,String,Object);
Relation(GanttTree;getTask;getModel,JTree,N);
Relation(GanttTree;getTask;getRoot,TreeModel,N);
Relation(GanttTree;getTask;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getTask;hasMoreElements,Enumeration,N);
Relation(GanttTree;getTask;nextElement,Enumeration,N);
Relation(GanttTree;getTask;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;getTask;toString,DefaultMutableTreeNode,N);
Relation(GanttTree;getToolTip;charAt,String,int);
Relation(GanttTree;getToolTip;equals,String,Object);
Relation(GanttTree;getToolTip;getAssignments,Task,N);
Relation(GanttTree;getToolTip;getEnd,Task,N);
Relation(GanttTree;getToolTip;getName,ProjectResource,N);
Relation(GanttTree;getToolTip;getNotes,Task,N);
Relation(GanttTree;getToolTip;getPriority,Task,N);
Relation(GanttTree;getToolTip;getResource,ResourceAssignment,N);
Relation(GanttTree;getToolTip;getStart,Task,N);
Relation(GanttTree;getToolTip;getText,GanttLanguage,String);
Relation(GanttTree;getToolTip;length,String,N);
Relation(GanttTree;getToolTip;replaceAll,String,String-String);
Relation(GanttTree;getToolTip;substring,String,int-int);
Relation(GanttTree;getToolTip;toString,Object,N);
Relation(GanttTree;getTransferData;getMimeType,DataFlavor,N);
Relation(GanttTree;getTransferData;isMimeTypeEqual,DataFlavor,String);
Relation(GanttTree;getTreeCellRendererComponent;getClass,Object,N);
Relation(GanttTree;getTreeCellRendererComponent;getPriority,Task,N);
Relation(GanttTree;getTreeCellRendererComponent;getResource,Class<>,String);
Relation(GanttTree;getTreeCellRendererComponent;getToolTip,GanttTreeCellRenderer,Task-int);
Relation(GanttTree;getTreeCellRendererComponent;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;getTreeCellRendererComponent;isMilestone,Task,N);
Relation(GanttTree;getTreeCellRendererComponent;setBackground,DefaultTreeCellRenderer,Color);
Relation(GanttTree;getTreeCellRendererComponent;setFont,DefaultTreeCellRenderer,Font);
Relation(GanttTree;getTreeCellRendererComponent;setForeground,JComponent,Color);
Relation(GanttTree;getTreeCellRendererComponent;setIcon,JLabel,Icon);
Relation(GanttTree;getTreeCellRendererComponent;setText,JLabel,String);
Relation(GanttTree;getTreeCellRendererComponent;setToolTipText,JComponent,String);
Relation(GanttTree;getTreeCellRendererComponent;toString,Object,N);
Relation(GanttTree;hasTasks;hasMoreElements,Enumeration,N);
Relation(GanttTree;hasTasks;nextElement,Enumeration,N);
Relation(GanttTree;hasTasks;preorderEnumeration,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;indentCurrentNodes;forwardScheduling,GanttTree,N);
Relation(GanttTree;indentCurrentNodes;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;indentCurrentNodes;getIndex,DefaultMutableTreeNode,TreeNode);
Relation(GanttTree;indentCurrentNodes;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;getPreviousSibling,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;getSelectedNodes,GanttTree,N);
Relation(GanttTree;indentCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;indentCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;indentCurrentNodes;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;indentCurrentNodes;nodesWereRemoved,DefaultTreeModel,TreeNode-int[]-Object[]);
Relation(GanttTree;indentCurrentNodes;refreshAllFather,GanttTree,String);
Relation(GanttTree;indentCurrentNodes;removeFromParent,DefaultMutableTreeNode,N);
Relation(GanttTree;indentCurrentNodes;repaint,Component,N);
Relation(GanttTree;indentCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;indentCurrentNodes;setMilestone,MutableTask,boolean);
Relation(GanttTree;indentCurrentNodes;setSelectionPaths,JTree,TreePath[]);
Relation(GanttTree;indentCurrentNodes;toString,Object,N);
Relation(GanttTree;initRootNode;getRootTask,TaskManager,N);
Relation(GanttTree;initRootNode;getTaskManager,GanttTree,N);
Relation(GanttTree;insertClonedNode;Clone,GanttTask,N);
Relation(GanttTree;insertClonedNode;getChildAt,DefaultMutableTreeNode,int);
Relation(GanttTree;insertClonedNode;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttTree;insertClonedNode;getLength,GanttTask,N);
Relation(GanttTree;insertClonedNode;getMaxID,TaskManagerImpl,N);
Relation(GanttTree;insertClonedNode;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;insertClonedNode;getStart,TaskImpl,N);
Relation(GanttTree;insertClonedNode;getTaskManager,GanttTree,N);
Relation(GanttTree;insertClonedNode;getText,GanttLanguage,String);
Relation(GanttTree;insertClonedNode;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;insertClonedNode;insertClonedNode,GanttTree,DefaultMutableTreeNode-DefaultMutableTreeNode-int-boolean);
Relation(GanttTree;insertClonedNode;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;insertClonedNode;isMilestone,TaskImpl,N);
Relation(GanttTree;insertClonedNode;registerTask,TaskManager,Task);
Relation(GanttTree;insertClonedNode;scrollPathToVisible,JTree,TreePath);
Relation(GanttTree;insertClonedNode;setExpand,TaskImpl,boolean);
Relation(GanttTree;insertClonedNode;setLength,GanttTask,int);
Relation(GanttTree;insertClonedNode;setMilestone,TaskImpl,boolean);
Relation(GanttTree;insertClonedNode;setName,TaskImpl,String);
Relation(GanttTree;insertClonedNode;setStart,TaskImpl,GanttCalendar);
Relation(GanttTree;insertClonedNode;setTaskID,GanttTask,int);
Relation(GanttTree;insertClonedNode;toString,GanttTask,N);
Relation(GanttTree;isDataFlavorSupported;asList,Arrays,DataFlavor[]);
Relation(GanttTree;isDataFlavorSupported;contains,List<DataFlavor>,Object);
Relation(GanttTree;isDragAcceptable;equals,TreePath,Object);
Relation(GanttTree;isDragAcceptable;getClosestPathForLocation,JTree,int-int);
Relation(GanttTree;isDragAcceptable;getDropAction,DropTargetDragEvent,N);
Relation(GanttTree;isDragAcceptable;getLastPathComponent,TreePath,N);
Relation(GanttTree;isDragAcceptable;getLocation,DropTargetDragEvent,N);
Relation(GanttTree;isDragAcceptable;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;isDragAcceptable;isDataFlavorSupported,DropTargetDragEvent,DataFlavor);
Relation(GanttTree;isDragAcceptable;isDescendant,TreePath,TreePath);
Relation(GanttTree;isDragAcceptable;isMilestone,Task,N);
Relation(GanttTree;isDropAcceptable;equals,TreePath,Object);
Relation(GanttTree;isDropAcceptable;getClosestPathForLocation,JTree,int-int);
Relation(GanttTree;isDropAcceptable;getDropAction,DropTargetDropEvent,N);
Relation(GanttTree;isDropAcceptable;getLocation,DropTargetDropEvent,N);
Relation(GanttTree;isDropAcceptable;isDataFlavorSupported,DropTargetDropEvent,DataFlavor);
Relation(GanttTree;pasteNode;getLastSelectedPathComponent,JTree,N);
Relation(GanttTree;pasteNode;insertClonedNode,GanttTree,DefaultMutableTreeNode-DefaultMutableTreeNode-int-boolean);
Relation(GanttTree;refreshAllChild;forwardScheduling,GanttTree,N);
Relation(GanttTree;refreshAllFather;getFatherNode,GanttTree,Task);
Relation(GanttTree;refreshAllFather;getTaskManager,GanttTree,N);
Relation(GanttTree;removeCurrentNode;forwardScheduling,GanttTree,N);
Relation(GanttTree;removeCurrentNode;getLastPathComponent,TreePath,N);
Relation(GanttTree;removeCurrentNode;getParent,DefaultMutableTreeNode,N);
Relation(GanttTree;removeCurrentNode;getSelectionPath,JTree,N);
Relation(GanttTree;removeCurrentNode;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;removeCurrentNode;removeNodeFromParent,DefaultTreeModel,MutableTreeNode);
Relation(GanttTree;selectTreeRow;setSelectionRow,JTree,int);
Relation(GanttTree;setAllTasksUnchecked;getAllGanttTasks,GanttTree,N);
Relation(GanttTree;setAllTasksUnchecked;hasNext,Iterator,N);
Relation(GanttTree;setAllTasksUnchecked;iterator,ArrayList,N);
Relation(GanttTree;setAllTasksUnchecked;next,Iterator,N);
Relation(GanttTree;setAllTasksUnchecked;setChecked,GanttTask,boolean);
Relation(GanttTree;treeCollapsed;getLastPathComponent,TreePath,N);
Relation(GanttTree;treeCollapsed;getPath,TreeExpansionEvent,N);
Relation(GanttTree;treeCollapsed;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;treeCollapsed;repaint,Component,N);
Relation(GanttTree;treeCollapsed;setAskForSave,GanttProject,boolean);
Relation(GanttTree;treeCollapsed;setExpand,MutableTask,boolean);
Relation(GanttTree;treeExpanded;getLastPathComponent,TreePath,N);
Relation(GanttTree;treeExpanded;getPath,TreeExpansionEvent,N);
Relation(GanttTree;treeExpanded;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;treeExpanded;repaint,Component,N);
Relation(GanttTree;treeExpanded;setAskForSave,GanttProject,boolean);
Relation(GanttTree;treeExpanded;setExpand,MutableTask,boolean);
Relation(GanttTree;treeNodesChanged;repaint,Component,N);
Relation(GanttTree;treeNodesInserted;getLastPathComponent,TreePath,N);
Relation(GanttTree;treeNodesInserted;getTreePath,TreeModelEvent,N);
Relation(GanttTree;treeNodesInserted;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttTree;treeNodesInserted;repaint,Component,N);
Relation(GanttTree;treeNodesRemoved;repaint,Component,N);
Relation(GanttTree;treeStructureChanged;repaint,Component,N);
Relation(GanttTree;upCurrentNodes;expandRefresh,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;upCurrentNodes;forwardScheduling,GanttTree,N);
Relation(GanttTree;upCurrentNodes;getFatherNode,GanttTree,DefaultMutableTreeNode);
Relation(GanttTree;upCurrentNodes;getIndex,DefaultMutableTreeNode,TreeNode);
Relation(GanttTree;upCurrentNodes;getPath,DefaultMutableTreeNode,N);
Relation(GanttTree;upCurrentNodes;getSelectedNodes,GanttTree,N);
Relation(GanttTree;upCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;upCurrentNodes;getText,GanttLanguage,String);
Relation(GanttTree;upCurrentNodes;insertNodeInto,DefaultTreeModel,MutableTreeNode-MutableTreeNode-int);
Relation(GanttTree;upCurrentNodes;nodesWereRemoved,DefaultTreeModel,TreeNode-int[]-Object[]);
Relation(GanttTree;upCurrentNodes;removeFromParent,DefaultMutableTreeNode,N);
Relation(GanttTree;upCurrentNodes;repaint,Component,N);
Relation(GanttTree;upCurrentNodes;setFirstText,GanttStatusBar,String-int);
Relation(GanttTree;upCurrentNodes;setSelectionPaths,JTree,TreePath[]);
Relation(GanttXFIGSaver;beginToSave;getAllTasks,GanttTree,N);
Relation(GanttXFIGSaver;beginToSave;getArryListTaskString,GanttTree,String);
Relation(GanttXFIGSaver;getTaskTextWidth;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttXMLOpen;load;forwardScheduling,GanttTree,N);
Relation(GanttXMLOpen;startElement;addObjectWithExpand,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttXMLSaver;_save;getAllTasks,GanttTree,N);
Relation(GanttXMLSaver;_save;getArryListTaskString,GanttTree,String);
Relation(GanttXMLSaver;_save;getJTree,GanttTree,N);
Relation(GanttXMLSaver;writeTask;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ResourceLoadGraphicArea;paintLoads;getAllTasks,GanttTree,N);
end b212
start b213
Class(GanttPDFFileFilter,N,N,public);
Generalisation(GanttPDFFileFilter,FileFilter);
Method(GanttPDFFileFilter,accept,boolean,Y,N,N,public);
Method(GanttPDFFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttPDFFileFilter,accept,f,File,declaration);
Relation(GanttPDFFileFilter;accept;endsWith,String,String);
Relation(GanttPDFFileFilter;accept;getName,File,N);
Relation(GanttPDFFileFilter;accept;isDirectory,File,N);
Relation(GanttPDFFileFilter;accept;toLowerCase,String,N);
Relation(GanttPDFFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttPDFFileFilter;getDescription;getText,GanttLanguage,String);
end b213
start b214
Attribute(GanttDialogPerson,cancelButton,JButton,N,private);
Attribute(GanttDialogPerson,change,boolean,N,private);
Attribute(GanttDialogPerson,efficency,JLabel,N,private);
Attribute(GanttDialogPerson,email,JLabel,N,private);
Attribute(GanttDialogPerson,emailField,JTextField,N,private);
Attribute(GanttDialogPerson,emailInput1,JTextField,N,private);
Attribute(GanttDialogPerson,function,JLabel,N,private);
Attribute(GanttDialogPerson,functionList,JComboBox,N,private);
Attribute(GanttDialogPerson,jPanel1,JPanel,N,private);
Attribute(GanttDialogPerson,jPanel2,JPanel,N,private);
Attribute(GanttDialogPerson,jPanel3,JPanel,N,private);
Attribute(GanttDialogPerson,jPanel4,JPanel,N,private);
Attribute(GanttDialogPerson,language,GanttLanguage,N,private);
Attribute(GanttDialogPerson,name,JLabel,N,private);
Attribute(GanttDialogPerson,nameField,JTextField,N,private);
Attribute(GanttDialogPerson,okButton,JButton,N,private);
Attribute(GanttDialogPerson,persTitle,JLabel,N,private);
Attribute(GanttDialogPerson,person,HumanResource,N,private);
Attribute(GanttDialogPerson,phone,JLabel,N,private);
Attribute(GanttDialogPerson,phoneField,JTextField,N,private);
Attribute(GanttDialogPerson,phoneField1,JTextField,N,private);
Attribute(GanttDialogPerson,resourceData,JLabel,N,private);
Attribute(GanttDialogPerson,unitsPerDay,JLabel,N,private);
Class(GanttDialogPerson,N,N,public);
Generalisation(GanttDialogPerson,JDialog);
Method(GanttDialogPerson,GanttDialogPerson,N,Y,N,N,public);
Method(GanttDialogPerson,actionPerformed,void,Y,N,N,public);
Method(GanttDialogPerson,cancelButtonActionPerformed,void,Y,N,N,private);
Method(GanttDialogPerson,closeDialog,void,Y,N,N,private);
Method(GanttDialogPerson,emailFieldActionPerformed,void,Y,N,N,private);
Method(GanttDialogPerson,initComponents,void,N,N,N,private);
Method(GanttDialogPerson,nameFieldActionPerformed,void,Y,N,N,private);
Method(GanttDialogPerson,okButtonActionPerformed,void,Y,N,N,private);
Method(GanttDialogPerson,result,boolean,N,N,N,public);
Method(GanttDialogPerson,windowClosing,void,Y,N,N,public);
Parameter(GanttDialogPerson,GanttDialogPerson,language,GanttLanguage,declaration);
Parameter(GanttDialogPerson,GanttDialogPerson,parent,Frame,declaration);
Parameter(GanttDialogPerson,GanttDialogPerson,person,HumanResource,declaration);
Parameter(GanttDialogPerson,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogPerson,cancelButtonActionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogPerson,closeDialog,evt,WindowEvent,declaration);
Parameter(GanttDialogPerson,emailFieldActionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogPerson,initComponents,gridBagConstraintsGridBagConstraints,local);
Parameter(GanttDialogPerson,initComponents,rolesRole[],local);
Parameter(GanttDialogPerson,nameFieldActionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogPerson,okButtonActionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogPerson,windowClosing,evt,WindowEvent,declaration);
Parameter(GanttResourcePanel,propertiesHuman,dpGanttDialogPerson,local);
Parameter(NewHumanAction,actionPerformed,dpGanttDialogPerson,local);
Relation(GanttDialogPerson;GanttDialogPerson;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogPerson;GanttDialogPerson;center,DialogAligner,JDialog-Container);
Relation(GanttDialogPerson;GanttDialogPerson;correctLabel,GanttProject,String);
Relation(GanttDialogPerson;GanttDialogPerson;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogPerson;GanttDialogPerson;getText,GanttLanguage,String);
Relation(GanttDialogPerson;GanttDialogPerson;initComponents,GanttDialogPerson,N);
Relation(GanttDialogPerson;NgetInstance,GanttLanguage,N);
Relation(GanttDialogPerson;cancelButtonActionPerformed;closeDialog,GanttDialogPerson,WindowEvent);
Relation(GanttDialogPerson;closeDialog;dispose,Window,N);
Relation(GanttDialogPerson;closeDialog;setVisible,Dialog,boolean);
Relation(GanttDialogPerson;initComponents;add,Container,Component-Object);
Relation(GanttDialogPerson;initComponents;addActionListener,AbstractButton,ActionListener);
Relation(GanttDialogPerson;initComponents;addActionListener,JTextField,ActionListener);
Relation(GanttDialogPerson;initComponents;addWindowListener,Window,WindowListener);
Relation(GanttDialogPerson;initComponents;asList,Arrays,Role[]);
Relation(GanttDialogPerson;initComponents;cancelButtonActionPerformed,GanttDialogPerson,ActionEvent);
Relation(GanttDialogPerson;initComponents;closeDialog,GanttDialogPerson,WindowEvent);
Relation(GanttDialogPerson;initComponents;emailFieldActionPerformed,GanttDialogPerson,ActionEvent);
Relation(GanttDialogPerson;initComponents;getContentPane,JDialog,N);
Relation(GanttDialogPerson;initComponents;getEnabledRoles,RoleManager,N);
Relation(GanttDialogPerson;initComponents;getInstance,Access,N);
Relation(GanttDialogPerson;initComponents;getMail,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getName,ProjectResource,N);
Relation(GanttDialogPerson;initComponents;getPhone,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getRole,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getRootPane,JDialog,N);
Relation(GanttDialogPerson;initComponents;getText,GanttLanguage,String);
Relation(GanttDialogPerson;initComponents;nameFieldActionPerformed,GanttDialogPerson,ActionEvent);
Relation(GanttDialogPerson;initComponents;okButtonActionPerformed,GanttDialogPerson,ActionEvent);
Relation(GanttDialogPerson;initComponents;pack,Window,N);
Relation(GanttDialogPerson;initComponents;println,PrintStream,String);
Relation(GanttDialogPerson;initComponents;setBorder,JComponent,Border);
Relation(GanttDialogPerson;initComponents;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogPerson;initComponents;setHorizontalAlignment,AbstractButton,int);
Relation(GanttDialogPerson;initComponents;setHorizontalAlignment,JLabel,int);
Relation(GanttDialogPerson;initComponents;setHorizontalTextPosition,AbstractButton,int);
Relation(GanttDialogPerson;initComponents;setLayout,Container,LayoutManager);
Relation(GanttDialogPerson;initComponents;setPreferredSize,JComponent,Dimension);
Relation(GanttDialogPerson;initComponents;setRenderer,JComboBox,ListCellRenderer);
Relation(GanttDialogPerson;initComponents;setResizable,Dialog,boolean);
Relation(GanttDialogPerson;initComponents;setSelectedItem,JComboBox,Object);
Relation(GanttDialogPerson;initComponents;setText,AbstractButton,String);
Relation(GanttDialogPerson;initComponents;setText,JLabel,String);
Relation(GanttDialogPerson;initComponents;setText,JTextComponent,String);
Relation(GanttDialogPerson;okButtonActionPerformed;closeDialog,GanttDialogPerson,WindowEvent);
Relation(GanttDialogPerson;okButtonActionPerformed;getSelectedItem,JComboBox,N);
Relation(GanttDialogPerson;okButtonActionPerformed;getText,JTextComponent,N);
Relation(GanttDialogPerson;okButtonActionPerformed;setMail,HumanResource,String);
Relation(GanttDialogPerson;okButtonActionPerformed;setName,ProjectResource,String);
Relation(GanttDialogPerson;okButtonActionPerformed;setPhone,HumanResource,String);
Relation(GanttDialogPerson;okButtonActionPerformed;setRole,HumanResource,Role);
Relation(GanttResourcePanel;propertiesHuman;result,GanttDialogPerson,N);
Relation(NewHumanAction;actionPerformed;result,GanttDialogPerson,N);
end b214
start b215
Attribute(GregorianTimeUnitStack,ourGraph,TimeUnitGraph,static,private);
Attribute(TimeUnitGraph,myAtom,TimeUnit,N,package);
Attribute(TimeUnitGraph,myAtomCount,int,N,package);
Attribute(TimeUnitGraph,myUnit2compositions,Map,N,private);
Attribute(TimeUnitImpl,myGraph,TimeUnitGraph,N,private);
Attribute(TimeUnitManagerImpl,myTimeGraph,TimeUnitGraph,N,private);
Class(TimeUnitGraph,N,N,public);
Method(TimeUnitGraph,Composition,N,Y,N,N,package);
Method(TimeUnitGraph,createAtomTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitGraph,createDateFrameableTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitGraph,createTimeUnit,TimeUnit,Y,N,N,package);
Method(TimeUnitGraph,createTimeUnitFunctionOfDate,TimeUnitFunctionOfDate,Y,N,N,public);
Method(TimeUnitGraph,getAtomCount,int,N,N,N,package);
Method(TimeUnitGraph,getComposition,Composition,Y,N,N,public);
Method(TimeUnitGraph,registerTimeUnit,void,Y,N,N,private);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,timeUnitGraph,TimeUnitGraph,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,graph,TimeUnitGraph,declaration);
Parameter(TimeUnitGraph,Composition,atomCount,int,declaration);
Parameter(TimeUnitGraph,Composition,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,Composition,transitiveComposition,Composition,declaration);
Parameter(TimeUnitGraph,createAtomTimeUnit,compositionsList,local);
Parameter(TimeUnitGraph,createAtomTimeUnit,name,String,declaration);
Parameter(TimeUnitGraph,createAtomTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,atomCount,int,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,framer,DateFrameable,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,name,String,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createTimeUnit,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createTimeUnit,count,int,declaration);
Parameter(TimeUnitGraph,createTimeUnit,name,String,declaration);
Parameter(TimeUnitGraph,createTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,framer,DateFrameable,declaration);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,name,String,declaration);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,resultTimeUnitFunctionOfDate,local);
Parameter(TimeUnitGraph,getComposition,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,getComposition,compositionsList,local);
Parameter(TimeUnitGraph,getComposition,nextComposition,local);
Parameter(TimeUnitGraph,getComposition,resultComposition,local);
Parameter(TimeUnitGraph,getComposition,timeUnit,TimeUnitImpl,declaration);
Parameter(TimeUnitGraph,registerTimeUnit,atomCount,int,declaration);
Parameter(TimeUnitGraph,registerTimeUnit,atomUnitTimeUnit,local);
Parameter(TimeUnitGraph,registerTimeUnit,compositionsList,local);
Parameter(TimeUnitGraph,registerTimeUnit,nextTransitiveComposition,local);
Parameter(TimeUnitGraph,registerTimeUnit,transitiveCompositionsList,local);
Parameter(TimeUnitGraph,registerTimeUnit,unit,TimeUnit,declaration);
Parameter(TimeUnitImpl,TimeUnitImpl,graph,TimeUnitGraph,declaration);
Relation(GregorianTimeUnitStack;NcreateAtomTimeUnit,TimeUnitGraph,String);
Relation(GregorianTimeUnitStack;NcreateDateFrameableTimeUnit,TimeUnitGraph,String-TimeUnit-int-DateFrameable);
Relation(GregorianTimeUnitStack;NcreateTimeUnitFunctionOfDate,TimeUnitGraph,String-TimeUnit-DateFrameable);
Relation(TimeUnitGraph;createAtomTimeUnit;add,List,Object);
Relation(TimeUnitGraph;createAtomTimeUnit;put,Map,Object-Object);
Relation(TimeUnitGraph;createDateFrameableTimeUnit;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;createTimeUnit;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;createTimeUnitFunctionOfDate;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;getComposition;equals,Object,Object);
Relation(TimeUnitGraph;getComposition;get,List,int);
Relation(TimeUnitGraph;getComposition;get,Map,Object);
Relation(TimeUnitGraph;getComposition;size,List,N);
Relation(TimeUnitGraph;registerTimeUnit;add,List,Object);
Relation(TimeUnitGraph;registerTimeUnit;get,List,int);
Relation(TimeUnitGraph;registerTimeUnit;get,Map,Object);
Relation(TimeUnitGraph;registerTimeUnit;getDirectAtomUnit,TimeUnit,N);
Relation(TimeUnitGraph;registerTimeUnit;put,Map,Object-Object);
Relation(TimeUnitGraph;registerTimeUnit;size,List,N);
Relation(TimeUnitImpl;getAtomCount;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
Relation(TimeUnitImpl;isConstructedFrom;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
Relation(TimeUnitManagerImpl;TimeUnitManagerImpl;createAtomTimeUnit,TimeUnitGraph,String);
end b215
start b216
Class(Listener,N,N,public);
Parameter(GanttLanguage,addListener,listener,Listener,declaration);
Parameter(GanttLanguage,fireLanguageChanged,nextListener,local);
Parameter(GanttLanguage,removeListener,listener,Listener,declaration);
Relation(GanttLanguage;fireLanguageChanged;languageChanged,Listener,Event);
Relation(NewTaskAction;NewTaskAction;addListener,GanttLanguage,Listener);
end b216
start b217
Attribute(Shape,COMBO,boolean,static,public);
Attribute(Shape,LIST,boolean,static,public);
Attribute(Shape,backgroundCombo,JPaintCombo,N,protected);
Attribute(Shape,backgroundList,JPaintList,N,protected);
Attribute(Shape,compactDisplay,boolean,N,protected);
Attribute(Shape,foregroundCombo,JPaintCombo,N,protected);
Attribute(Shape,foregroundList,JPaintList,N,protected);
Attribute(Shape,listeners,ArrayList,N,protected);
Attribute(Shape,patternCombo,JPaintCombo,N,protected);
Attribute(Shape,patternList,JPaintList,N,protected);
Attribute(Shape,preview,PreviewPanel,N,protected);
Class(Shape,N,N,public);
Generalisation(Shape,JPanel);
Method(Shape,Shape,N,Y,N,N,public);
Method(Shape,actionPerformed,void,Y,N,N,public);
Method(Shape,addActionListener,void,Y,N,N,public);
Method(Shape,fireActionEvent,void,N,N,N,public);
Method(Shape,getPattern,ShapePaint,N,N,N,public);
Method(Shape,removeActionListener,void,Y,N,N,public);
Method(Shape,setPattern,void,Y,N,N,public);
Method(Shape,valueChanged,void,Y,N,N,public);
Parameter(Shape,Shape,choicePanelJPanel,local);
Parameter(Shape,Shape,compactDisplay,boolean,declaration);
Parameter(Shape,Shape,labelsJPanel,local);
Parameter(Shape,Shape,listsJPanel,local);
Parameter(Shape,Shape,menusJPanel,local);
Parameter(Shape,Shape,promptsJPanel,local);
Parameter(Shape,actionPerformed,event,ActionEvent,declaration);
Parameter(Shape,actionPerformed,sourceObject,local);
Parameter(Shape,addActionListener,listener,ActionListener,declaration);
Parameter(Shape,fireActionEvent,eventActionEvent,local);
Parameter(Shape,fireActionEvent,listArrayList,local);
Parameter(Shape,fireActionEvent,listenerActionListener,local);
Parameter(Shape,removeActionListener,listener,ActionListener,declaration);
Parameter(Shape,setPattern,pattern,ShapePaint,declaration);
Parameter(Shape,valueChanged,event,ListSelectionEvent,declaration);
Parameter(Shape,valueChanged,sourceObject,local);
Relation(GanttTree;dragOver;fill,Graphics2D,Shape);
Relation(PaintCellRenderer;paintComponent;fill,Graphics2D,Shape);
Relation(PreviewPanel;paintComponent;fill,Graphics2D,Shape);
Relation(Shape;Shape;add,Container,Component);
Relation(Shape;Shape;add,Container,String-Component);
Relation(Shape;Shape;addActionListener,JComboBox,ActionListener);
Relation(Shape;Shape;addListSelectionListener,JList,ListSelectionListener);
Relation(Shape;Shape;createEmptyBorder,BorderFactory,int-int-int-int);
Relation(Shape;Shape;getSelectedPaint,JPaintCombo,N);
Relation(Shape;Shape;getSelectedPaint,JPaintList,N);
Relation(Shape;Shape;setBorder,JComponent,Border);
Relation(Shape;Shape;setLayout,Container,LayoutManager);
Relation(Shape;Shape;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;actionPerformed;fireActionEvent,Shape,N);
Relation(Shape;actionPerformed;getSelectedPaint,JPaintCombo,N);
Relation(Shape;actionPerformed;getSource,EventObject,N);
Relation(Shape;actionPerformed;repaint,Component,N);
Relation(Shape;actionPerformed;setBackground,JComponent,Color);
Relation(Shape;actionPerformed;setForeground,JComponent,Color);
Relation(Shape;actionPerformed;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;addActionListener;add,ArrayList,Object);
Relation(Shape;fireActionEvent;actionPerformed,ActionListener,ActionEvent);
Relation(Shape;fireActionEvent;clone,ArrayList,N);
Relation(Shape;fireActionEvent;get,ArrayList,int);
Relation(Shape;fireActionEvent;size,ArrayList,N);
Relation(Shape;getPattern;getPattern,PreviewPanel,N);
Relation(Shape;removeActionListener;remove,ArrayList,Object);
Relation(Shape;setPattern;fireActionEvent,Shape,N);
Relation(Shape;setPattern;setPattern,PreviewPanel,ShapePaint);
Relation(Shape;setPattern;setSelectedItem,JComboBox,Object);
Relation(Shape;setPattern;setSelectedValue,JList,Object-boolean);
Relation(Shape;valueChanged;fireActionEvent,Shape,N);
Relation(Shape;valueChanged;getSelectedPaint,JPaintList,N);
Relation(Shape;valueChanged;getSource,EventObject,N);
Relation(Shape;valueChanged;getValueIsAdjusting,ListSelectionEvent,N);
Relation(Shape;valueChanged;repaint,Component,N);
Relation(Shape;valueChanged;setBackground,JComponent,Color);
Relation(Shape;valueChanged;setForeground,JComponent,Color);
Relation(Shape;valueChanged;setPattern,PreviewPanel,ShapePaint);
end b217
start b218
Attribute(TaskHierarchyEvent,myNewContainer,Task,N,private);
Attribute(TaskHierarchyEvent,myOldContainer,Task,N,private);
Attribute(TaskHierarchyEvent,myTask,Task,N,private);
Class(TaskHierarchyEvent,N,N,public);
Generalisation(TaskHierarchyEvent,EventObject);
Method(TaskHierarchyEvent,TaskHierarchyEvent,N,Y,N,N,public);
Method(TaskHierarchyEvent,getNewContainer,Task,N,N,N,public);
Method(TaskHierarchyEvent,getOldContainer,Task,N,N,N,public);
Method(TaskHierarchyEvent,getTask,Task,N,N,N,public);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myNewContainer,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myOldContainer,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,myTask,Task,declaration);
Parameter(TaskHierarchyEvent,TaskHierarchyEvent,source,Object,declaration);
Parameter(TaskListener,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(TaskListener,taskMoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListener,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskMoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskManagerImpl,fireTaskAdded,eTaskHierarchyEvent,local);
Parameter(TaskManagerImpl,fireTaskRemoved,eTaskHierarchyEvent,local);
Relation(TaskManagerImpl;fireTaskAdded;taskAdded,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskRemoved;taskRemoved,TaskListener,TaskHierarchyEvent);
end b218
start b219
Attribute(RoleSetPage,myListModel,RoleSetListModel,N,private);
Class(RoleSetListModel,N,static,private);
Relation(RoleSetPage;getComponent;getCellRenderer,RoleSetListModel,N);
Relation(RoleSetPage;getComponent;toggle,RoleSetListModel,int);
Relation(RoleSetPage;getListCellRendererComponent;createTooltipText,RoleSetListModel,RoleSet);
Relation(RoleSetPage;getListCellRendererComponent;isTheOnlyEnabled,RoleSetListModel,RoleSet);
end b219
start b220
Class(GanttSplash,N,N,package);
Generalisation(GanttSplash,JFrame);
Method(GanttSplash,GanttSplash,N,N,N,N,public);
Method(GanttSplash,close,void,N,N,N,public);
Method(GanttSplash,paint,void,Y,N,N,public);
Parameter(GanttProject,main,splashGanttSplash,local);
Parameter(GanttSplash,GanttSplash,boundsRectangle2D,local);
Parameter(GanttSplash,GanttSplash,fontFont,local);
Parameter(GanttSplash,GanttSplash,frcFontRenderContext,local);
Parameter(GanttSplash,GanttSplash,g2Graphics2D,local);
Parameter(GanttSplash,GanttSplash,iconImageIcon,local);
Parameter(GanttSplash,GanttSplash,lJLabel,local);
Parameter(GanttSplash,GanttSplash,labelSizeDimension,local);
Parameter(GanttSplash,GanttSplash,layoutTextLayout,local);
Parameter(GanttSplash,GanttSplash,screenSizeDimension,local);
Parameter(GanttSplash,GanttSplash,splashImageImageIcon,local);
Parameter(GanttSplash,paint,g,Graphics,declaration);
Relation(GanttProject;main;close,GanttSplash,N);
Relation(GanttSplash;GanttSplash;add,Container,Component-Object);
Relation(GanttSplash;GanttSplash;drawString,Graphics2D,String-int-int);
Relation(GanttSplash;GanttSplash;getBounds,TextLayout,N);
Relation(GanttSplash;GanttSplash;getClass,Object,N);
Relation(GanttSplash;GanttSplash;getContentPane,JFrame,N);
Relation(GanttSplash;GanttSplash;getDefaultToolkit,Toolkit,N);
Relation(GanttSplash;GanttSplash;getFontRenderContext,Graphics2D,N);
Relation(GanttSplash;GanttSplash;getImage,ImageIcon,N);
Relation(GanttSplash;GanttSplash;getPreferredSize,JComponent,N);
Relation(GanttSplash;GanttSplash;getResource,Class<>,String);
Relation(GanttSplash;GanttSplash;getRootPane,JFrame,N);
Relation(GanttSplash;GanttSplash;getScreenSize,Toolkit,N);
Relation(GanttSplash;GanttSplash;getSize,Component,N);
Relation(GanttSplash;GanttSplash;getWidth,Dimension,N);
Relation(GanttSplash;GanttSplash;getWidth,RectangularShape,N);
Relation(GanttSplash;GanttSplash;pack,Window,N);
Relation(GanttSplash;GanttSplash;setColor,Graphics,Color);
Relation(GanttSplash;GanttSplash;setDefaultLookAndFeelDecorated,JFrame,boolean);
Relation(GanttSplash;GanttSplash;setFont,Graphics,Font);
Relation(GanttSplash;GanttSplash;setIconImage,JFrame,Image);
Relation(GanttSplash;GanttSplash;setLocation,Component,int-int);
Relation(GanttSplash;GanttSplash;setRenderingHint,Graphics2D,Key-Object);
Relation(GanttSplash;GanttSplash;setUndecorated,Frame,boolean);
Relation(GanttSplash;GanttSplash;setWindowDecorationStyle,JRootPane,int);
Relation(GanttSplash;close;dispose,Window,N);
Relation(GanttSplash;close;setVisible,Window,boolean);
end b220
start b221
Attribute(ResourceAssignmentCollectionImpl,myTask,TaskImpl,N,private);
Attribute(TaskImpl,bExpand,boolean,N,private);
Attribute(TaskImpl,isMilestone,boolean,N,private);
Attribute(TaskImpl,isStartFixed,boolean,N,private);
Attribute(TaskImpl,myAssignments,ResourceAssignmentCollectionImpl,N,private);
Attribute(TaskImpl,myColor,Color,N,private);
Attribute(TaskImpl,myCommands,List,N,private);
Attribute(TaskImpl,myCompletionPercentage,int,N,private);
Attribute(TaskImpl,myDependencySlice,TaskDependencySlice,N,private);
Attribute(TaskImpl,myDependencySliceAsDependant,TaskDependencySlice,N,private);
Attribute(TaskImpl,myDependencySliceAsDependee,TaskDependencySlice,N,private);
Attribute(TaskImpl,myEnd,GanttCalendar,N,private);
Attribute(TaskImpl,myEventsEnabled,boolean,N,private);
Attribute(TaskImpl,myID,int,N,private);
Attribute(TaskImpl,myLength,TaskLength,N,private);
Attribute(TaskImpl,myManager,TaskManagerImpl,N,private);
Attribute(TaskImpl,myName,String,N,private);
Attribute(TaskImpl,myNotes,String,N,private);
Attribute(TaskImpl,myPriority,int,N,private);
Attribute(TaskImpl,myShape,ShapePaint,N,private);
Attribute(TaskImpl,myStart,GanttCalendar,N,private);
Attribute(TaskImpl,myTaskHierarchyItem,TaskHierarchyItem,N,private);
Attribute(TaskImpl,myTimeUnitManager,TimeUnitManager,N,private);
Attribute(TaskImpl,myWebLink,String,N,private);
Class(TaskImpl,N,N,public);
Generalisation(GanttTask,TaskImpl);
Method(TaskImpl,TaskImpl,N,Y,N,N,protected);
Method(TaskImpl,addNotes,void,Y,N,N,public);
Method(TaskImpl,areEventsEnabled,boolean,N,N,N,protected);
Method(TaskImpl,colorDefined,boolean,N,N,N,public);
Method(TaskImpl,commit,void,N,N,N,public);
Method(TaskImpl,createMutator,TaskMutator,N,N,N,public);
Method(TaskImpl,enableEvents,void,Y,N,N,protected);
Method(TaskImpl,getAssignmentCollection,ResourceAssignmentCollection,N,N,N,public);
Method(TaskImpl,getAssignments,ResourceAssignment[],N,N,N,public);
Method(TaskImpl,getColor,Color,N,N,N,public);
Method(TaskImpl,getCompletionPercentage,int,N,N,N,public);
Method(TaskImpl,getDependencies,TaskDependencySlice,N,N,N,public);
Method(TaskImpl,getDependenciesAsDependant,TaskDependencySlice,N,N,N,public);
Method(TaskImpl,getDependenciesAsDependee,TaskDependencySlice,N,N,N,public);
Method(TaskImpl,getDuration,TaskLength,N,N,N,public);
Method(TaskImpl,getEnd,GanttCalendar,N,N,N,public);
Method(TaskImpl,getExpand,boolean,N,N,N,public);
Method(TaskImpl,getManager,TaskManager,N,N,N,public);
Method(TaskImpl,getName,String,N,N,N,public);
Method(TaskImpl,getNestedTasks,Task[],N,N,N,public);
Method(TaskImpl,getNotes,String,N,N,N,public);
Method(TaskImpl,getPredecessors,GanttTaskRelationship[],N,N,N,public);
Method(TaskImpl,getPriority,int,N,N,N,public);
Method(TaskImpl,getShape,ShapePaint,N,N,N,public);
Method(TaskImpl,getStart,GanttCalendar,N,N,N,public);
Method(TaskImpl,getSuccessors,GanttTaskRelationship[],N,N,N,public);
Method(TaskImpl,getSupertask,Task,N,N,N,public);
Method(TaskImpl,getTaskID,int,N,N,N,public);
Method(TaskImpl,getTimeUnitManager,TimeUnitManager,N,N,N,protected);
Method(TaskImpl,getWebLink,String,N,N,N,public);
Method(TaskImpl,isMilestone,boolean,N,N,N,public);
Method(TaskImpl,isStartFixed,boolean,N,N,N,public);
Method(TaskImpl,move,void,Y,N,N,public);
Method(TaskImpl,run,void,N,N,N,public);
Method(TaskImpl,setColor,void,Y,N,N,public);
Method(TaskImpl,setCompletionPercentage,void,Y,N,N,public);
Method(TaskImpl,setDuration,void,Y,N,N,public);
Method(TaskImpl,setEnd,void,Y,N,N,public);
Method(TaskImpl,setExpand,void,Y,N,N,public);
Method(TaskImpl,setMilestone,void,Y,N,N,public);
Method(TaskImpl,setName,void,Y,N,N,public);
Method(TaskImpl,setNotes,void,Y,N,N,public);
Method(TaskImpl,setPriority,void,Y,N,N,public);
Method(TaskImpl,setShape,void,Y,N,N,public);
Method(TaskImpl,setStart,void,Y,N,N,public);
Method(TaskImpl,setStartFixed,void,Y,N,N,public);
Method(TaskImpl,setTaskIDHack,void,Y,N,N,protected);
Method(TaskImpl,setWebLink,void,Y,N,N,public);
Method(TaskImpl,shapeDefined,boolean,N,N,N,public);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,task,TaskImpl,declaration);
Parameter(TaskImpl,TaskImpl,copy,TaskImpl,declaration);
Parameter(TaskImpl,TaskImpl,taskManager,TaskManager,declaration);
Parameter(TaskImpl,addNotes,notes,String,declaration);
Parameter(TaskImpl,commit,nextRunnable,local);
Parameter(TaskImpl,enableEvents,enabled,boolean,declaration);
Parameter(TaskImpl,getNestedTasks,nestedItemsTaskHierarchyItem[],local);
Parameter(TaskImpl,getNestedTasks,resultTask[],local);
Parameter(TaskImpl,getSupertask,containerTaskHierarchyItem,local);
Parameter(TaskImpl,move,supertaskImplTaskImpl,local);
Parameter(TaskImpl,move,targetItemTaskHierarchyItem,local);
Parameter(TaskImpl,move,targetSupertask,Task,declaration);
Parameter(TaskImpl,setColor,color,Color,declaration);
Parameter(TaskImpl,setCompletionPercentage,percentage,int,declaration);
Parameter(TaskImpl,setDuration,length,TaskLength,declaration);
Parameter(TaskImpl,setDuration,oldFinishGanttCalendar,local);
Parameter(TaskImpl,setEnd,end,GanttCalendar,declaration);
Parameter(TaskImpl,setEnd,lengthint,local);
Parameter(TaskImpl,setEnd,oldFinishGanttCalendar,local);
Parameter(TaskImpl,setExpand,expand,boolean,declaration);
Parameter(TaskImpl,setMilestone,milestone,boolean,declaration);
Parameter(TaskImpl,setName,name,String,declaration);
Parameter(TaskImpl,setNotes,notes,String,declaration);
Parameter(TaskImpl,setPriority,priority,int,declaration);
Parameter(TaskImpl,setShape,shape,ShapePaint,declaration);
Parameter(TaskImpl,setStart,oldStartGanttCalendar,local);
Parameter(TaskImpl,setStart,start,GanttCalendar,declaration);
Parameter(TaskImpl,setStartFixed,isFixed,boolean,declaration);
Parameter(TaskImpl,setTaskIDHack,taskID,int,declaration);
Parameter(TaskImpl,setWebLink,webLink,String,declaration);
Relation(GanttCSVExport;getAssignments;getAssignments,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getCompletionPercentage,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getEnd,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getNotes,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getStart,TaskImpl,N);
Relation(GanttCSVExport;getMaxSize;getTaskID,TaskImpl,N);
Relation(GanttCSVExport;getName;getName,TaskImpl,N);
Relation(GanttCSVExport;getWebLink;getWebLink,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getCompletionPercentage,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getEnd,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getNotes,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getStart,TaskImpl,N);
Relation(GanttCSVExport;writeTasks;getTaskID,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDuration,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getEnd,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getStart,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;isMilestone,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;setCompletionPercentage,TaskImpl,int);
Relation(GanttGraphicArea;GanttGraphicArea;setDuration,TaskImpl,TaskLength);
Relation(GanttGraphicArea;GanttGraphicArea;setStart,TaskImpl,GanttCalendar);
Relation(GanttGraphicArea;detectPosition;getCompletionPercentage,TaskImpl,N);
Relation(GanttGraphicArea;detectPosition;getEnd,TaskImpl,N);
Relation(GanttGraphicArea;detectPosition;getStart,TaskImpl,N);
Relation(GanttGraphicArea;paintATaskChild;colorDefined,TaskImpl,N);
Relation(GanttGraphicArea;paintDepend;getTaskID,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getColor,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getCompletionPercentage,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getName,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getShape,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getStart,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getTaskID,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;isMilestone,TaskImpl,N);
Relation(GanttProject;newTask;colorDefined,TaskImpl,N);
Relation(GanttProject;newTask;getColor,TaskImpl,N);
Relation(GanttProject;newTask;getShape,TaskImpl,N);
Relation(GanttProject;newTask;getStart,TaskImpl,N);
Relation(GanttProject;newTask;getTaskID,TaskImpl,N);
Relation(GanttProject;newTask;setColor,TaskImpl,Color);
Relation(GanttProject;newTask;setMilestone,TaskImpl,boolean);
Relation(GanttProject;newTask;setName,TaskImpl,String);
Relation(GanttProject;newTask;setShape,TaskImpl,ShapePaint);
Relation(GanttProject;newTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttProject;newTask;shapeDefined,TaskImpl,N);
Relation(GanttTXTOpen;load;setColor,TaskImpl,Color);
Relation(GanttTXTOpen;load;setName,TaskImpl,String);
Relation(GanttTask;GanttTask;createMutator,TaskImpl,N);
Relation(GanttTask;GanttTask;enableEvents,TaskImpl,boolean);
Relation(GanttTask;GanttTask;getTimeUnitManager,TaskImpl,N);
Relation(GanttTask;getLength;getDuration,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;getDependenciesAsDependant,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;getManager,TaskImpl,N);
Relation(GanttTask;getPredecessorsOld;getTaskID,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;getDependenciesAsDependee,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;getManager,TaskImpl,N);
Relation(GanttTask;getSuccessorsOld;getTaskID,TaskImpl,N);
Relation(GanttTask;setLength;createMutator,TaskImpl,N);
Relation(GanttTask;setLength;getDuration,TaskImpl,N);
Relation(GanttTask;setLength;getManager,TaskImpl,N);
Relation(GanttTask;setTaskID;setTaskIDHack,TaskImpl,int);
Relation(GanttTask;toString;getName,TaskImpl,N);
Relation(GanttTask;unlink;getDependencies,TaskImpl,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getColor,TaskImpl,N);
Relation(GanttTaskPropertiesBean;getReturnTask;setColor,TaskImpl,Color);
Relation(GanttTaskPropertiesBean;getReturnTask;setCompletionPercentage,TaskImpl,int);
Relation(GanttTaskPropertiesBean;getReturnTask;setEnd,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getReturnTask;setMilestone,TaskImpl,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setName,TaskImpl,String);
Relation(GanttTaskPropertiesBean;getReturnTask;setNotes,TaskImpl,String);
Relation(GanttTaskPropertiesBean;getReturnTask;setPriority,TaskImpl,int);
Relation(GanttTaskPropertiesBean;getReturnTask;setShape,TaskImpl,ShapePaint);
Relation(GanttTaskPropertiesBean;getReturnTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttTaskPropertiesBean;getReturnTask;setStartFixed,TaskImpl,boolean);
Relation(GanttTaskPropertiesBean;getReturnTask;setWebLink,TaskImpl,String);
Relation(GanttTaskPropertiesBean;setSelectedTask;getCompletionPercentage,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getEnd,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getName,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getNotes,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getPriority,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getShape,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getStart,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;getWebLink,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;isMilestone,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;isStartFixed,TaskImpl,N);
Relation(GanttTaskPropertiesBean;setSelectedTask;shapeDefined,TaskImpl,N);
Relation(GanttTree;checkDepend;getTaskID,TaskImpl,N);
Relation(GanttTree;computePercentComplete;getCompletionPercentage,TaskImpl,N);
Relation(GanttTree;insertClonedNode;getStart,TaskImpl,N);
Relation(GanttTree;insertClonedNode;isMilestone,TaskImpl,N);
Relation(GanttTree;insertClonedNode;setExpand,TaskImpl,boolean);
Relation(GanttTree;insertClonedNode;setMilestone,TaskImpl,boolean);
Relation(GanttTree;insertClonedNode;setName,TaskImpl,String);
Relation(GanttTree;insertClonedNode;setStart,TaskImpl,GanttCalendar);
Relation(GanttXFIGSaver;searchUserColor;getColor,TaskImpl,N);
Relation(GanttXFIGSaver;task2box;getCompletionPercentage,TaskImpl,N);
Relation(GanttXFIGSaver;task2box;getStart,TaskImpl,N);
Relation(GanttXFIGSaver;task2text;getName,TaskImpl,N);
Relation(GanttXMLOpen;startElement;getColor,TaskImpl,N);
Relation(GanttXMLOpen;startElement;setColor,TaskImpl,Color);
Relation(GanttXMLOpen;startElement;setCompletionPercentage,TaskImpl,int);
Relation(GanttXMLOpen;startElement;setExpand,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setMilestone,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setName,TaskImpl,String);
Relation(GanttXMLOpen;startElement;setPriority,TaskImpl,int);
Relation(GanttXMLOpen;startElement;setShape,TaskImpl,ShapePaint);
Relation(GanttXMLOpen;startElement;setStart,TaskImpl,GanttCalendar);
Relation(GanttXMLOpen;startElement;setStartFixed,TaskImpl,boolean);
Relation(GanttXMLOpen;startElement;setWebLink,TaskImpl,String);
Relation(GanttXMLSaver;writeTask;colorDefined,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getColor,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getCompletionPercentage,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getExpand,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getName,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getNotes,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getPriority,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getShape,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getStart,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getTaskID,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getWebLink,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;isMilestone,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;isStartFixed,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;shapeDefined,TaskImpl,N);
Relation(TaskImpl;TaskImpl;copy,ResourceAssignmentCollectionImpl,N);
Relation(TaskImpl;TaskImpl;createItem,TaskHierarchyManagerImpl,Task);
Relation(TaskImpl;TaskImpl;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getHierarchyManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;increaseMaxID,TaskManagerImpl,N);
Relation(TaskImpl;addNotes;add,List,Object);
Relation(TaskImpl;addNotes;addNotes,TaskImpl,String);
Relation(TaskImpl;commit;clear,List,N);
Relation(TaskImpl;commit;get,List,int);
Relation(TaskImpl;commit;run,Runnable,N);
Relation(TaskImpl;commit;size,List,N);
Relation(TaskImpl;getAssignments;getAssignments,ResourceAssignmentCollectionImpl,N);
Relation(TaskImpl;getColor;getConfig,TaskManagerImpl,N);
Relation(TaskImpl;getColor;getDefaultColor,TaskManagerConfig,N);
Relation(TaskImpl;getEnd;Clone,GanttCalendar,N);
Relation(TaskImpl;getEnd;add,GanttCalendar,int);
Relation(TaskImpl;getEnd;getDuration,TaskImpl,N);
Relation(TaskImpl;getEnd;getLength,TaskLength,N);
Relation(TaskImpl;getEnd;getStart,TaskImpl,N);
Relation(TaskImpl;getNestedTasks;getNestedItems,TaskHierarchyItem,N);
Relation(TaskImpl;getNestedTasks;getTask,TaskHierarchyItem,N);
Relation(TaskImpl;getShape;getColor,TaskImpl,N);
Relation(TaskImpl;getSupertask;getContainerItem,TaskHierarchyItem,N);
Relation(TaskImpl;getSupertask;getTask,TaskHierarchyItem,N);
Relation(TaskImpl;move;addNestedItem,TaskHierarchyItem,TaskHierarchyItem);
Relation(TaskImpl;move;delete,TaskHierarchyItem,N);
Relation(TaskImpl;setColor;add,List,Object);
Relation(TaskImpl;setColor;setColor,TaskImpl,Color);
Relation(TaskImpl;setCompletionPercentage;add,List,Object);
Relation(TaskImpl;setCompletionPercentage;setCompletionPercentage,TaskImpl,int);
Relation(TaskImpl;setDuration;Clone,GanttCalendar,N);
Relation(TaskImpl;setDuration;add,List,Object);
Relation(TaskImpl;setDuration;areEventsEnabled,TaskImpl,N);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setDuration;getLength,TaskLength,N);
Relation(TaskImpl;setDuration;newAdd,GanttCalendar,int);
Relation(TaskImpl;setDuration;setDuration,TaskImpl,TaskLength);
Relation(TaskImpl;setEnd;Clone,GanttCalendar,N);
Relation(TaskImpl;setEnd;add,List,Object);
Relation(TaskImpl;setEnd;areEventsEnabled,TaskImpl,N);
Relation(TaskImpl;setEnd;createLength,TaskManager,TimeUnit-long);
Relation(TaskImpl;setEnd;diff,GanttCalendar,GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;getManager,TaskImpl,N);
Relation(TaskImpl;setEnd;getTimeUnit,TaskLength,N);
Relation(TaskImpl;setEnd;setEnd,TaskImpl,GanttCalendar);
Relation(TaskImpl;setExpand;add,List,Object);
Relation(TaskImpl;setExpand;setExpand,TaskImpl,boolean);
Relation(TaskImpl;setMilestone;add,List,Object);
Relation(TaskImpl;setMilestone;setMilestone,TaskImpl,boolean);
Relation(TaskImpl;setName;add,List,Object);
Relation(TaskImpl;setName;setName,TaskImpl,String);
Relation(TaskImpl;setNotes;add,List,Object);
Relation(TaskImpl;setNotes;setNotes,TaskImpl,String);
Relation(TaskImpl;setPriority;add,List,Object);
Relation(TaskImpl;setPriority;setPriority,TaskImpl,int);
Relation(TaskImpl;setShape;add,List,Object);
Relation(TaskImpl;setShape;setShape,TaskImpl,ShapePaint);
Relation(TaskImpl;setStart;Clone,GanttCalendar,N);
Relation(TaskImpl;setStart;add,List,Object);
Relation(TaskImpl;setStart;areEventsEnabled,TaskImpl,N);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;getEnd,TaskImpl,N);
Relation(TaskImpl;setStart;setStart,TaskImpl,GanttCalendar);
Relation(TaskImpl;setStartFixed;add,List,Object);
Relation(TaskImpl;setStartFixed;setStartFixed,TaskImpl,boolean);
Relation(TaskManagerImpl;createTask;getTaskID,TaskImpl,N);
Relation(TaskManagerImpl;createTask;move,TaskImpl,Task);
Relation(TaskTagHandler;loadTask;getTaskID,TaskImpl,N);
Relation(TaskTagHandler;loadTask;setColor,TaskImpl,Color);
Relation(TaskTagHandler;loadTask;setCompletionPercentage,TaskImpl,int);
Relation(TaskTagHandler;loadTask;setExpand,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setMilestone,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setName,TaskImpl,String);
Relation(TaskTagHandler;loadTask;setPriority,TaskImpl,int);
Relation(TaskTagHandler;loadTask;setStart,TaskImpl,GanttCalendar);
Relation(TaskTagHandler;loadTask;setStartFixed,TaskImpl,boolean);
Relation(TaskTagHandler;loadTask;setWebLink,TaskImpl,String);
end b221
start b222
Attribute(TipsDialog,appli,GanttProject,N,package);
Attribute(TipsDialog,btBut0,JButton,N,package);
Attribute(TipsDialog,btBut1,JButton,N,package);
Attribute(TipsDialog,btBut2,JButton,N,package);
Attribute(TipsDialog,cbBox0,JCheckBox,N,package);
Attribute(TipsDialog,index,int,N,package);
Attribute(TipsDialog,lbImg,JLabel,N,package);
Attribute(TipsDialog,pnPanel0,JPanel,N,package);
Attribute(TipsDialog,taArea0,JTextPane,N,package);
Attribute(TipsDialog,tipsText,String[],N,package);
Class(TipsDialog,N,N,public);
Generalisation(TipsDialog,JDialog);
Method(TipsDialog,TipsDialog,N,Y,N,N,public);
Method(TipsDialog,actionPerformed,void,Y,N,N,public);
Method(TipsDialog,changeText,void,Y,N,N,public);
Parameter(GanttProject,GanttProject,tipsTipsDialog,local);
Parameter(GanttProject,actionPerformed,tipsTipsDialog,local);
Parameter(TipsDialog,TipsDialog,gbPanel0GridBagLayout,local);
Parameter(TipsDialog,TipsDialog,gbcPanel0GridBagConstraints,local);
Parameter(TipsDialog,TipsDialog,langGanttLanguage,local);
Parameter(TipsDialog,TipsDialog,mainPanelJPanel,local);
Parameter(TipsDialog,TipsDialog,parent,JFrame,declaration);
Parameter(TipsDialog,TipsDialog,scrollPaneJScrollPane,local);
Parameter(TipsDialog,TipsDialog,tips,boolean,declaration);
Parameter(TipsDialog,actionPerformed,e,ActionEvent,declaration);
Parameter(TipsDialog,changeText,defStyle,local);
Parameter(TipsDialog,changeText,docDocument,local);
Parameter(TipsDialog,changeText,initStringString[],local);
Parameter(TipsDialog,changeText,initStylesString[],local);
Parameter(TipsDialog,changeText,regularStyle,local);
Parameter(TipsDialog,changeText,sStyle,local);
Parameter(TipsDialog,changeText,text,String,declaration);
Relation(TipsDialog;TipsDialog;add,Container,Component);
Relation(TipsDialog;TipsDialog;addActionListener,AbstractButton,ActionListener);
Relation(TipsDialog;TipsDialog;applyComponentOrientation,Container,ComponentOrientation);
Relation(TipsDialog;TipsDialog;center,DialogAligner,JDialog-Container);
Relation(TipsDialog;TipsDialog;changeText,TipsDialog,String);
Relation(TipsDialog;TipsDialog;correctLabel,GanttProject,String);
Relation(TipsDialog;TipsDialog;dispose,Window,N);
Relation(TipsDialog;TipsDialog;getClass,Object,N);
Relation(TipsDialog;TipsDialog;getComponentOrientation,GanttLanguage,N);
Relation(TipsDialog;TipsDialog;getInstance,GanttLanguage,N);
Relation(TipsDialog;TipsDialog;getOptions,GanttProject,N);
Relation(TipsDialog;TipsDialog;getParent,Component,N);
Relation(TipsDialog;TipsDialog;getResource,Class<>,String);
Relation(TipsDialog;TipsDialog;getText,GanttLanguage,String);
Relation(TipsDialog;TipsDialog;isSelected,AbstractButton,N);
Relation(TipsDialog;TipsDialog;pack,Window,N);
Relation(TipsDialog;TipsDialog;random,Math,N);
Relation(TipsDialog;TipsDialog;setConstraints,GridBagLayout,Component-GridBagConstraints);
Relation(TipsDialog;TipsDialog;setContentPane,JDialog,Container);
Relation(TipsDialog;TipsDialog;setDefaultCloseOperation,JDialog,int);
Relation(TipsDialog;TipsDialog;setEditable,JTextComponent,boolean);
Relation(TipsDialog;TipsDialog;setLayout,Container,LayoutManager);
Relation(TipsDialog;TipsDialog;setOpenTips,GanttOptions,boolean);
Relation(TipsDialog;TipsDialog;setPreferredSize,JComponent,Dimension);
Relation(TipsDialog;TipsDialog;setResizable,Dialog,boolean);
Relation(TipsDialog;TipsDialog;setVisible,Dialog,boolean);
Relation(TipsDialog;changeText;addStyle,JTextPane,String-Style);
Relation(TipsDialog;changeText;cut,JTextComponent,N);
Relation(TipsDialog;changeText;getDefaultStyleContext,StyleContext,N);
Relation(TipsDialog;changeText;getInstance,GanttLanguage,N);
Relation(TipsDialog;changeText;getLength,Document,N);
Relation(TipsDialog;changeText;getStyle,JTextPane,String);
Relation(TipsDialog;changeText;getStyle,StyleContext,String);
Relation(TipsDialog;changeText;getText,GanttLanguage,String);
Relation(TipsDialog;changeText;insertString,Document,int-String-AttributeSet);
Relation(TipsDialog;changeText;println,PrintStream,String);
Relation(TipsDialog;changeText;setDocument,JTextPane,Document);
Relation(TipsDialog;changeText;setFontFamily,StyleConstants,MutableAttributeSet-String);
Relation(TipsDialog;changeText;setFontSize,StyleConstants,MutableAttributeSet-int);
Relation(TipsDialog;changeText;setItalic,StyleConstants,MutableAttributeSet-boolean);
end b222
start b223
Attribute(TimeUnitFunctionOfDateImpl,myAtomCount,int,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myBaseDate,Date,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myDirectFrameable,DateFrameable,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myLeftDate,Date,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myRightDate,Date,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myTextFormatter,TextFormatter,N,private);
Class(TimeUnitFunctionOfDateImpl,N,N,public);
Generalisation(TimeUnitFunctionOfDateImpl,TimeUnitDateFrameableImpl);
Method(TimeUnitFunctionOfDateImpl,ParameterizedTimeUnitImpl,N,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,N,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,adjustLeft,Date,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,adjustRight,Date,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,createTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,format,String,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,getAtomCount,int,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,getDirectAtomCount,int,N,N,N,private);
Method(TimeUnitFunctionOfDateImpl,getDirectAtomUnit,TimeUnit,N,N,N,public);
Method(TimeUnitFunctionOfDateImpl,getName,String,N,N,N,public);
Method(TimeUnitFunctionOfDateImpl,isConstructedFrom,boolean,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,jumpLeft,Date,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,setTextFormatter,void,Y,N,N,public);
Parameter(TimeUnitFunctionOfDateImpl,ParameterizedTimeUnitImpl,myBaseDate,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,directAtomUnit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,framer,DateFrameable,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,graph,TimeUnitGraph,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,name,String,declaration);
Parameter(TimeUnitFunctionOfDateImpl,adjustLeft,baseDate,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,adjustRight,baseDate,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,createTimeUnit,date,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,format,baseDate,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,format,formatterTextFormatter,local);
Parameter(TimeUnitFunctionOfDateImpl,getAtomCount,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,getAtomCount,directAtomCountint,local);
Parameter(TimeUnitFunctionOfDateImpl,isConstructedFrom,unit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,jumpLeft,baseDate,Date,declaration);
Parameter(TimeUnitFunctionOfDateImpl,setTextFormatter,formatter,TextFormatter,declaration);
Relation(TimeUnitFunctionOfDateImpl;ParameterizedTimeUnitImpl;adjustLeft,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;ParameterizedTimeUnitImpl;adjustRight,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;adjustLeft;adjustLeft,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;adjustRight;adjustRight,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;format;format,TextFormatter,TimeUnit-Date);
Relation(TimeUnitFunctionOfDateImpl;format;getTextFormatter,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getAtomCount,TimeUnit,TimeUnit);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getDirectAtomCount,ParameterizedTimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getDirectAtomUnit,ParameterizedTimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getDirectAtomCount;compareTo,Date,Date);
Relation(TimeUnitFunctionOfDateImpl;getDirectAtomCount;jumpLeft,DateFrameable,Date);
Relation(TimeUnitFunctionOfDateImpl;getDirectAtomUnit;getDirectAtomUnit,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;getName;getName,TimeUnitImpl,N);
Relation(TimeUnitFunctionOfDateImpl;isConstructedFrom;isConstructedFrom,TimeUnitImpl,TimeUnit);
Relation(TimeUnitFunctionOfDateImpl;jumpLeft;jumpLeft,TimeUnitDateFrameableImpl,Date);
Relation(TimeUnitFunctionOfDateImpl;setTextFormatter;setTextFormatter,TimeUnitImpl,TextFormatter);
end b223
start b224
Attribute(GanttDialogPerson,person,HumanResource,N,private);
Attribute(HumanResource,email,String,N,private);
Attribute(HumanResource,function,int,N,private);
Attribute(HumanResource,myRole,Role,N,private);
Attribute(HumanResource,phone,String,N,private);
Class(HumanResource,N,N,public);
Generalisation(HumanResource,ProjectResource);
Method(GanttResourcePanel,getUserByNumber,HumanResource,Y,N,N,public);
Method(HumanResource,HumanResource,N,N,N,N,package);
Method(HumanResource,HumanResource,N,Y,N,N,package);
Method(HumanResource,getMail,String,N,N,N,public);
Method(HumanResource,getPhone,String,N,N,N,public);
Method(HumanResource,getRole,Role,N,N,N,public);
Method(HumanResource,setMail,void,Y,N,N,public);
Method(HumanResource,setPhone,void,Y,N,N,public);
Method(HumanResource,setRole,void,Y,N,N,public);
Method(HumanResourceManager,newHumanResource,HumanResource,N,N,N,public);
Parameter(AllocationTagHandler,loadAllocation,humanHumanResource,local);
Parameter(GanttCSVExport,getMaxSize,pHumanResource,local);
Parameter(GanttCSVExport,writeResources,pHumanResource,local);
Parameter(GanttDialogPerson,GanttDialogPerson,person,HumanResource,declaration);
Parameter(GanttHTMLExport,writeResources,pHumanResource,local);
Parameter(GanttPDFExport,writeResources,pHumanResource,local);
Parameter(GanttResourcePanel,addRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,deleteHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,downResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,getNameByNumber,peopleHumanResource,local);
Parameter(GanttResourcePanel,getValueAt,peopleHumanResource,local);
Parameter(GanttResourcePanel,newHuman,people,HumanResource,declaration);
Parameter(GanttResourcePanel,propertiesHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,sendMail,peopleHumanResource,local);
Parameter(GanttResourcePanel,upResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,updateRow,people,HumanResource,declaration);
Parameter(GanttXMLSaver,writeResources,pHumanResource,local);
Parameter(HumanResource,HumanResource,id,int,declaration);
Parameter(HumanResource,HumanResource,name,String,declaration);
Parameter(HumanResource,setMail,email,String,declaration);
Parameter(HumanResource,setPhone,phone,String,declaration);
Parameter(HumanResource,setRole,role,Role,declaration);
Parameter(HumanResourceManager,create,hrHumanResource,local);
Parameter(HumanResourceManager,down,humanHumanResource,local);
Parameter(HumanResourceManager,newHumanResource,resultHumanResource,local);
Parameter(HumanResourceManager,up,humanHumanResource,local);
Parameter(NewHumanAction,actionPerformed,peopleHumanResource,local);
Parameter(ResourceTagHandler,loadResource,hrHumanResource,local);
Relation(GanttCSVExport;getMaxSize;getMail,HumanResource,N);
Relation(GanttCSVExport;getMaxSize;getPhone,HumanResource,N);
Relation(GanttCSVExport;getMaxSize;getRole,HumanResource,N);
Relation(GanttCSVExport;writeResources;getMail,HumanResource,N);
Relation(GanttCSVExport;writeResources;getPhone,HumanResource,N);
Relation(GanttCSVExport;writeResources;getRole,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getMail,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getPhone,HumanResource,N);
Relation(GanttDialogPerson;initComponents;getRole,HumanResource,N);
Relation(GanttDialogPerson;okButtonActionPerformed;setMail,HumanResource,String);
Relation(GanttDialogPerson;okButtonActionPerformed;setPhone,HumanResource,String);
Relation(GanttDialogPerson;okButtonActionPerformed;setRole,HumanResource,Role);
Relation(GanttHTMLExport;writeResources;getMail,HumanResource,N);
Relation(GanttHTMLExport;writeResources;getPhone,HumanResource,N);
Relation(GanttHTMLExport;writeResources;getRole,HumanResource,N);
Relation(GanttPDFExport;writeResources;getMail,HumanResource,N);
Relation(GanttPDFExport;writeResources;getPhone,HumanResource,N);
Relation(GanttPDFExport;writeResources;getRole,HumanResource,N);
Relation(GanttResourcePanel;addHumans;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;getValueAt;getMail,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getPhone,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getRole,HumanResource,N);
Relation(GanttResourcePanel;newHuman;addRow,GanttTableModel,HumanResource);
Relation(GanttResourcePanel;propertiesHuman;updateRow,GanttTableModel,int-HumanResource);
Relation(GanttResourcePanel;resourceAdded;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;sendMail;getMail,HumanResource,N);
Relation(GanttXMLSaver;writeResources;getMail,HumanResource,N);
Relation(GanttXMLSaver;writeResources;getPhone,HumanResource,N);
Relation(GanttXMLSaver;writeResources;getRole,HumanResource,N);
Relation(HumanResourceManager;create;setRole,HumanResource,Role);
Relation(HumanResourceManager;newHumanResource;setRole,HumanResource,Role);
Relation(NewHumanAction;actionPerformed;setRole,HumanResource,Role);
Relation(ResourceTagHandler;loadResource;setMail,HumanResource,String);
Relation(ResourceTagHandler;loadResource;setPhone,HumanResource,String);
Relation(ResourceTagHandler;parsingFinished;setRole,HumanResource,Role);
end b224
start b225
Attribute(GanttProject,myNewArtefactAction,NewArtefactAction,N,private);
Attribute(NewArtefactAction,myIconOnMouseOver,Icon,N,private);
Attribute(NewArtefactAction,myProvider,ActiveActionProvider,N,private);
Class(NewArtefactAction,N,N,public);
Generalisation(NewArtefactAction,AbstractAction);
Method(NewArtefactAction,NewArtefactAction,N,Y,N,N,public);
Method(NewArtefactAction,actionPerformed,void,Y,N,N,public);
Method(NewArtefactAction,getActiveAction,AbstractAction,N,N,N,public);
Method(NewArtefactAction,getIconOnMouseOver,Icon,N,N,N,public);
Parameter(NewArtefactAction,NewArtefactAction,iconIcon,local);
Parameter(NewArtefactAction,NewArtefactAction,iconSize,String,declaration);
Parameter(NewArtefactAction,NewArtefactAction,provider,ActiveActionProvider,declaration);
Parameter(NewArtefactAction,actionPerformed,activeActionAbstractAction,local);
Parameter(NewArtefactAction,actionPerformed,e,ActionEvent,declaration);
Relation(NewArtefactAction;NewArtefactAction;getClass,Object,N);
Relation(NewArtefactAction;NewArtefactAction;getResource,Class<>,String);
Relation(NewArtefactAction;NewArtefactAction;putValue,AbstractAction,String-Object);
Relation(NewArtefactAction;actionPerformed;actionPerformed,ActionListener,ActionEvent);
Relation(NewArtefactAction;actionPerformed;getActiveAction,ActiveActionProvider,N);
end b225
start b226
Attribute(ProjectResource,costsPerUnit,double,N,private);
Attribute(ProjectResource,description,String,N,private);
Attribute(ProjectResource,id,int,N,protected);
Attribute(ProjectResource,maximumUnitsPerDay,int,N,private);
Attribute(ProjectResource,name,String,N,protected);
Attribute(ProjectResource,unitMeasure,String,N,private);
Attribute(ResourceAssignmentCollectionImpl,myResource,ProjectResource,N,private);
Attribute(ResourceEvent,myResource,ProjectResource,N,private);
Class(ProjectResource,abstract,N,public);
Generalisation(HumanResource,ProjectResource);
Method(HumanResourceManager,create,ProjectResource,Y,N,N,public);
Method(HumanResourceManager,getById,ProjectResource,Y,N,N,public);
Method(ProjectResource,getCostsPerUnit,double,N,N,N,public);
Method(ProjectResource,getDescription,String,N,N,N,public);
Method(ProjectResource,getId,int,N,N,N,public);
Method(ProjectResource,getMaximumUnitsPerDay,int,N,N,N,public);
Method(ProjectResource,getName,String,N,N,N,public);
Method(ProjectResource,getUnitMeasure,String,N,N,N,public);
Method(ProjectResource,setCostsPerUnit,void,Y,N,N,public);
Method(ProjectResource,setDescription,void,Y,N,N,public);
Method(ProjectResource,setId,void,Y,N,N,public);
Method(ProjectResource,setMaximumUnitsPerDay,void,Y,N,N,public);
Method(ProjectResource,setName,void,Y,N,N,public);
Method(ProjectResource,setUnitMeasure,void,Y,N,N,public);
Method(ProjectResource,toString,String,N,N,N,public);
Method(ResourceAssignment,getResource,ProjectResource,N,N,N,package);
Method(ResourceAssignmentCollectionImpl,getResource,ProjectResource,N,N,N,public);
Method(ResourceEvent,getResource,ProjectResource,N,N,N,public);
Method(ResourceManager,create,ProjectResource,Y,N,N,public);
Method(ResourceManager,getById,ProjectResource,Y,N,N,public);
Parameter(GanttGraphicArea,paintResources,nextProjectResource,local);
Parameter(HumanResourceManager,add,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,fireResourceAdded,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,getById,prProjectResource,local);
Parameter(HumanResourceManager,remove,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,removeById,prProjectResource,local);
Parameter(MutableResourceAssignmentCollection,addAssignment,resource,ProjectResource,declaration);
Parameter(MutableResourceAssignmentCollection,deleteAssignment,resource,ProjectResource,declaration);
Parameter(ProjectResource,setCostsPerUnit,costsPerUnit,double,declaration);
Parameter(ProjectResource,setDescription,description,String,declaration);
Parameter(ProjectResource,setId,id,int,declaration);
Parameter(ProjectResource,setMaximumUnitsPerDay,maximumUnitsPerDay,int,declaration);
Parameter(ProjectResource,setName,name,String,declaration);
Parameter(ProjectResource,setUnitMeasure,unitMeasure,String,declaration);
Parameter(ResourceAssignmentCollection,getAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentImpl,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,deleteAssignment,resource,ProjectResource,declaration);
Parameter(ResourceAssignmentCollectionImpl,getAssignment,resource,ProjectResource,declaration);
Parameter(ResourceEvent,ResourceEvent,resource,ProjectResource,declaration);
Parameter(ResourceManager,add,resource,ProjectResource,declaration);
Parameter(ResourceManager,remove,resource,ProjectResource,declaration);
Relation(AllocationTagHandler;loadAllocation;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(DeleteHumanAction;deleteResources;remove,ResourceManager,ProjectResource);
Relation(DeleteHumanAction;getDisplayName;toString,ProjectResource,N);
Relation(GanttCSVExport;getMaxSize;getId,ProjectResource,N);
Relation(GanttCSVExport;getMaxSize;getName,ProjectResource,N);
Relation(GanttCSVExport;writeResources;getId,ProjectResource,N);
Relation(GanttCSVExport;writeResources;getName,ProjectResource,N);
Relation(GanttDialogPerson;initComponents;getName,ProjectResource,N);
Relation(GanttDialogPerson;okButtonActionPerformed;setName,ProjectResource,String);
Relation(GanttGraphicArea;paintResources;getName,ProjectResource,N);
Relation(GanttHTMLExport;writeResources;toString,ProjectResource,N);
Relation(GanttHTMLExport;writeTasks;getName,ProjectResource,N);
Relation(GanttPDFExport;writeResources;toString,ProjectResource,N);
Relation(GanttPDFExport;writeTasks;getName,ProjectResource,N);
Relation(GanttProject;addButtons;remove,ResourceManager,ProjectResource);
Relation(GanttProject;getDisplayName;toString,ProjectResource,N);
Relation(GanttResourcePanel;deleteHuman;toString,ProjectResource,N);
Relation(GanttResourcePanel;getNameByNumber;getName,ProjectResource,N);
Relation(GanttResourcePanel;getValueAt;getName,ProjectResource,N);
Relation(GanttTree;getToolTip;getName,ProjectResource,N);
Relation(GanttXMLSaver;writeAllocations;getId,ProjectResource,N);
Relation(GanttXMLSaver;writeResources;getId,ProjectResource,N);
Relation(GanttXMLSaver;writeResources;getName,ProjectResource,N);
Relation(HumanResourceManager;add;fireResourceAdded,HumanResourceManager,ProjectResource);
Relation(HumanResourceManager;add;getId,ProjectResource,N);
Relation(HumanResourceManager;add;setId,ProjectResource,int);
Relation(HumanResourceManager;create;add,HumanResourceManager,ProjectResource);
Relation(HumanResourceManager;getById;getId,ProjectResource,N);
Relation(HumanResourceManager;removeById;remove,HumanResourceManager,ProjectResource);
Relation(NewHumanAction;actionPerformed;add,ResourceManager,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;addAssignment;auxAddAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;commit;auxAddAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceAssignmentCollectionImpl;delete;deleteAssignment,ResourceAssignmentCollectionImpl,ProjectResource);
Relation(ResourceLoadGraphicArea;calculateLoad;getName,ProjectResource,N);
Relation(ResourceLoadGraphicArea;getChart;toString,ProjectResource,N);
Relation(ResourceLoadGraphicArea;paintLoads;toString,ProjectResource,N);
Relation(ResourceLoadGraphicArea;printResources;toString,ProjectResource,N);
Relation(ResourceTagHandler;loadResource;setId,ProjectResource,int);
Relation(ResourcesTableModel;createAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(ResourcesTableModel;getValueAt;getId,ProjectResource,N);
Relation(ResourcesTableModel;updateAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
end b226
start b227
Attribute(RolePersistentID,ROLESET_DELIMITER,String,static,private);
Attribute(RolePersistentID,myRoleID,int,N,private);
Attribute(RolePersistentID,myRoleSetID,String,N,private);
Class(RolePersistentID,N,N,public);
Method(RolePersistentID,RolePersistentID,N,Y,N,N,public);
Method(RolePersistentID,asString,String,N,N,N,public);
Method(RolePersistentID,getRoleID,int,N,N,N,public);
Method(RolePersistentID,getRoleSetID,String,N,N,N,public);
Parameter(ResourceTagHandler,findRole,persistentIDRolePersistentID,local);
Parameter(RolePersistentID,RolePersistentID,persistentID,String,declaration);
Parameter(RolePersistentID,RolePersistentID,posDelimiterint,local);
Parameter(RolePersistentID,RolePersistentID,roleIDasStringString,local);
Parameter(RolePersistentID,RolePersistentID,roleIDint,local);
Parameter(RolePersistentID,RolePersistentID,rolesetNameString,local);
Parameter(RoleTagHandler,loadRoles,persistentIDRolePersistentID,local);
Relation(ResourceTagHandler;findRole;getRoleID,RolePersistentID,N);
Relation(ResourceTagHandler;findRole;getRoleSetID,RolePersistentID,N);
Relation(RolePersistentID;RolePersistentID;lastIndexOf,String,String);
Relation(RolePersistentID;RolePersistentID;parseInt,Integer,String);
Relation(RolePersistentID;RolePersistentID;substring,String,int);
Relation(RolePersistentID;RolePersistentID;substring,String,int-int);
Relation(RoleTagHandler;loadRoles;getRoleID,RolePersistentID,N);
end b227
start b228
Attribute(GanttCalendarDays,dayList,ArrayList,N,private);
Class(GanttCalendarDays,N,N,public);
Method(GanttCalendarDays,GanttCalendarDays,N,N,N,N,public);
Method(GanttCalendarDays,GanttCalendarDays,N,Y,N,N,public);
Method(GanttCalendarDays,insert,void,Y,N,N,public);
Method(GanttCalendarDays,remove,void,Y,N,N,public);
Parameter(GanttCalendarDays,GanttCalendarDays,dayList,ArrayList,declaration);
Parameter(GanttCalendarDays,insert,day,GanttCalendar,declaration);
Parameter(GanttCalendarDays,remove,day,GanttCalendar,declaration);
Parameter(GanttCalendarDays,remove,indexint,local);
Relation(GanttCalendarDays;insert;add,ArrayList,Object);
Relation(GanttCalendarDays;insert;contains,ArrayList,Object);
Relation(GanttCalendarDays;remove;indexOf,ArrayList,Object);
Relation(GanttCalendarDays;remove;remove,ArrayList,int);
end b228
start b229
Attribute(RolesSettingsPanel,myRolesModel,RolesTableModel,N,package);
Attribute(RolesTableModel,columnNames,String[],N,package);
Attribute(RolesTableModel,data,Object[][],N,package);
Attribute(RolesTableModel,myRoleManager,RoleManager,N,private);
Class(RolesTableModel,N,N,public);
Generalisation(RolesTableModel,AbstractTableModel);
Method(RolesTableModel,RolesTableModel,N,N,N,N,public);
Method(RolesTableModel,applyChanges,void,N,N,N,public);
Method(RolesTableModel,getColumnCount,int,N,N,N,public);
Method(RolesTableModel,getColumnName,String,Y,N,N,public);
Method(RolesTableModel,getRoleManager,RoleManager,N,N,N,public);
Method(RolesTableModel,getRowCount,int,N,N,N,public);
Method(RolesTableModel,getValueAt,Object,Y,N,N,public);
Method(RolesTableModel,hasChanges,boolean,N,N,N,public);
Method(RolesTableModel,isCellEditable,boolean,Y,N,N,public);
Method(RolesTableModel,setValueAt,void,Y,N,N,public);
Parameter(RolesTableModel,RolesTableModel,iint,local);
Parameter(RolesTableModel,RolesTableModel,rolesRole[],local);
Parameter(RolesTableModel,applyChanges,nextRoleNameString,local);
Parameter(RolesTableModel,getColumnName,col,int,declaration);
Parameter(RolesTableModel,getValueAt,col,int,declaration);
Parameter(RolesTableModel,getValueAt,row,int,declaration);
Parameter(RolesTableModel,hasChanges,nextRoleNameString,local);
Parameter(RolesTableModel,hasChanges,rolesRole[],local);
Parameter(RolesTableModel,isCellEditable,col,int,declaration);
Parameter(RolesTableModel,isCellEditable,row,int,declaration);
Parameter(RolesTableModel,setValueAt,col,int,declaration);
Parameter(RolesTableModel,setValueAt,row,int,declaration);
Parameter(RolesTableModel,setValueAt,value,Object,declaration);
Relation(RolesSettingsPanel;applyChanges;applyChanges,RolesTableModel,N);
Relation(RolesSettingsPanel;applyChanges;getRoleManager,RolesTableModel,N);
Relation(RolesSettingsPanel;applyChanges;hasChanges,RolesTableModel,N);
Relation(RolesTableModel;NgetInstance,GanttLanguage,N);
Relation(RolesTableModel;NgetText,GanttLanguage,String);
Relation(RolesTableModel;RolesTableModel;getInstance,Access,N);
Relation(RolesTableModel;RolesTableModel;getName,Role,N);
Relation(RolesTableModel;RolesTableModel;getProjectLevelRoles,RoleManager,N);
Relation(RolesTableModel;RolesTableModel;getRoleManager,RolesTableModel,N);
Relation(RolesTableModel;RolesTableModel;valueOf,String,int);
Relation(RolesTableModel;applyChanges;add,RoleManager,int-String);
Relation(RolesTableModel;applyChanges;clear,RoleSet,N);
Relation(RolesTableModel;applyChanges;getProjectRoleSet,RoleManager,N);
Relation(RolesTableModel;applyChanges;getRoleManager,RolesTableModel,N);
Relation(RolesTableModel;applyChanges;getRowCount,RolesTableModel,N);
Relation(RolesTableModel;applyChanges;getValueAt,RolesTableModel,int-int);
Relation(RolesTableModel;hasChanges;equals,String,Object);
Relation(RolesTableModel;hasChanges;getName,Role,N);
Relation(RolesTableModel;hasChanges;getProjectLevelRoles,RoleManager,N);
Relation(RolesTableModel;hasChanges;getRoleManager,RolesTableModel,N);
Relation(RolesTableModel;hasChanges;getRowCount,RolesTableModel,N);
Relation(RolesTableModel;hasChanges;getValueAt,RolesTableModel,int-int);
Relation(RolesTableModel;setValueAt;fireTableCellUpdated,AbstractTableModel,int-int);
end b229
start b230
Attribute(GanttXMLSaver,area,GanttGraphicArea,N,private);
Attribute(GanttXMLSaver,cpt,int,N,package);
Attribute(GanttXMLSaver,lot,ArrayList,N,package);
Attribute(GanttXMLSaver,lots,ArrayList,N,package);
Attribute(GanttXMLSaver,myProject,IGanttProject,N,private);
Attribute(GanttXMLSaver,number,ArrayList,N,package);
Attribute(GanttXMLSaver,peop,GanttResourcePanel,N,private);
Attribute(GanttXMLSaver,s,String,N,package);
Attribute(GanttXMLSaver,tree,GanttTree,N,private);
Attribute(GanttXMLSaver,usersId,HashMap,N,private);
Class(GanttXMLSaver,N,N,public);
Method(GanttXMLSaver,GanttXMLSaver,N,Y,N,N,public);
Method(GanttXMLSaver,_save,void,Y,N,N,public);
Method(GanttXMLSaver,addAttribute,void,Y,N,N,private);
Method(GanttXMLSaver,correct,String,Y,N,N,public);
Method(GanttXMLSaver,emptyComment,void,Y,N,N,private);
Method(GanttXMLSaver,emptyElement,void,Y,N,N,private);
Method(GanttXMLSaver,endElement,void,Y,N,N,private);
Method(GanttXMLSaver,getProject,IGanttProject,N,N,N,package);
Method(GanttXMLSaver,replaceAll,String,Y,N,N,public);
Method(GanttXMLSaver,save,void,Y,N,N,public);
Method(GanttXMLSaver,saveRoles,void,Y,N,N,private);
Method(GanttXMLSaver,startElement,void,Y,N,N,private);
Method(GanttXMLSaver,writeAllocations,void,Y,N,N,public);
Method(GanttXMLSaver,writeResources,void,Y,N,N,public);
Method(GanttXMLSaver,writeRoles,void,Y,N,N,public);
Method(GanttXMLSaver,writeTask,void,Y,N,N,public);
Parameter(GanttProject,saveProject,saverGanttXMLSaver,local);
Parameter(GanttXMLSaver,GanttXMLSaver,area,GanttGraphicArea,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,peop,GanttResourcePanel,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,project,IGanttProject,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,tree,GanttTree,declaration);
Parameter(GanttXMLSaver,_save,childrenEnumeration,local);
Parameter(GanttXMLSaver,_save,elementDefaultMutableTreeNode,local);
Parameter(GanttXMLSaver,_save,fout,OutputStreamWriter,declaration);
Parameter(GanttXMLSaver,_save,includeProlog,boolean,declaration);
Parameter(GanttXMLSaver,_save,version,String,declaration);
Parameter(GanttXMLSaver,addAttribute,attrs,AttributesImpl,declaration);
Parameter(GanttXMLSaver,addAttribute,name,String,declaration);
Parameter(GanttXMLSaver,addAttribute,value,String,declaration);
Parameter(GanttXMLSaver,correct,resString,local);
Parameter(GanttXMLSaver,correct,s,String,declaration);
Parameter(GanttXMLSaver,emptyComment,handler,TransformerHandler,declaration);
Parameter(GanttXMLSaver,emptyElement,attrs,AttributesImpl,declaration);
Parameter(GanttXMLSaver,emptyElement,handler,TransformerHandler,declaration);
Parameter(GanttXMLSaver,emptyElement,name,String,declaration);
Parameter(GanttXMLSaver,endElement,handler,TransformerHandler,declaration);
Parameter(GanttXMLSaver,endElement,name,String,declaration);
Parameter(GanttXMLSaver,replaceAll,notes,String,declaration);
Parameter(GanttXMLSaver,replaceAll,s1,String,declaration);
Parameter(GanttXMLSaver,replaceAll,s2,String,declaration);
Parameter(GanttXMLSaver,save,_fout,OutputStreamWriter,declaration);
Parameter(GanttXMLSaver,save,attrsAttributesImpl,local);
Parameter(GanttXMLSaver,save,factorySAXTransformerFactory,local);
Parameter(GanttXMLSaver,save,foutOutputStreamWriter,local);
Parameter(GanttXMLSaver,save,handlerTransformerHandler,local);
Parameter(GanttXMLSaver,save,includeProlog,boolean,declaration);
Parameter(GanttXMLSaver,save,resultStreamResult,local);
Parameter(GanttXMLSaver,save,serializerTransformer,local);
Parameter(GanttXMLSaver,save,stream,OutputStream,declaration);
Parameter(GanttXMLSaver,save,version,String,declaration);
Parameter(GanttXMLSaver,saveRoles,attrsAttributesImpl,local);
Parameter(GanttXMLSaver,saveRoles,handler,TransformerHandler,declaration);
Parameter(GanttXMLSaver,saveRoles,nextRole,local);
Parameter(GanttXMLSaver,saveRoles,nextRoleSet,local);
Parameter(GanttXMLSaver,saveRoles,projectRoleSetRoleSet,local);
Parameter(GanttXMLSaver,saveRoles,projectRolesRole[],local);
Parameter(GanttXMLSaver,saveRoles,roleManagerRoleManager,local);
Parameter(GanttXMLSaver,saveRoles,roleSetsRoleSet[],local);
Parameter(GanttXMLSaver,startElement,attrs,AttributesImpl,declaration);
Parameter(GanttXMLSaver,startElement,handler,TransformerHandler,declaration);
Parameter(GanttXMLSaver,startElement,name,String,declaration);
Parameter(GanttXMLSaver,writeAllocations,assignmentsResourceAssignment[],local);
Parameter(GanttXMLSaver,writeAllocations,fout,Writer,declaration);
Parameter(GanttXMLSaver,writeAllocations,nextResourceAssignment,local);
Parameter(GanttXMLSaver,writeAllocations,taskTask,local);
Parameter(GanttXMLSaver,writeAllocations,task_idint,local);
Parameter(GanttXMLSaver,writeResources,btf8byte[],local);
Parameter(GanttXMLSaver,writeResources,cpt_resourcesint,local);
Parameter(GanttXMLSaver,writeResources,fout,Writer,declaration);
Parameter(GanttXMLSaver,writeResources,pHumanResource,local);
Parameter(GanttXMLSaver,writeResources,resourcesArrayList,local);
Parameter(GanttXMLSaver,writeResources,stringString,local);
Parameter(GanttXMLSaver,writeRoles,fout,Writer,declaration);
Parameter(GanttXMLSaver,writeRoles,nextRole,local);
Parameter(GanttXMLSaver,writeRoles,projectRolesRole[],local);
Parameter(GanttXMLSaver,writeTask,aString,local);
Parameter(GanttXMLSaver,writeTask,bString,local);
Parameter(GanttXMLSaver,writeTask,childArrayList,local);
Parameter(GanttXMLSaver,writeTask,fout,Writer,declaration);
Parameter(GanttXMLSaver,writeTask,haschildboolean,local);
Parameter(GanttXMLSaver,writeTask,idint,local);
Parameter(GanttXMLSaver,writeTask,newidint,local);
Parameter(GanttXMLSaver,writeTask,node,DefaultMutableTreeNode,declaration);
Parameter(GanttXMLSaver,writeTask,oneboolean,local);
Parameter(GanttXMLSaver,writeTask,relationshipGanttTaskRelationship,local);
Parameter(GanttXMLSaver,writeTask,sWebLinkString,local);
Parameter(GanttXMLSaver,writeTask,space,String,declaration);
Parameter(GanttXMLSaver,writeTask,space2String,local);
Parameter(GanttXMLSaver,writeTask,successorsVector,local);
Parameter(GanttXMLSaver,writeTask,task2Task,local);
Parameter(GanttXMLSaver,writeTask,taskGanttTask,local);
Relation(GanttProject;saveProject;save,GanttXMLSaver,OutputStream-String);
Relation(GanttXMLSaver;_save;children,DefaultMutableTreeNode,N);
Relation(GanttXMLSaver;_save;clear,ArrayList,N);
Relation(GanttXMLSaver;_save;correct,GanttXMLSaver,String);
Relation(GanttXMLSaver;_save;equals,String,Object);
Relation(GanttXMLSaver;_save;getAllTasks,GanttTree,N);
Relation(GanttXMLSaver;_save;getArryListTaskString,GanttTree,String);
Relation(GanttXMLSaver;_save;getColor,ColorConvertion,Color);
Relation(GanttXMLSaver;_save;getDescription,IGanttProject,N);
Relation(GanttXMLSaver;_save;getJTree,GanttTree,N);
Relation(GanttXMLSaver;_save;getModel,JTree,N);
Relation(GanttXMLSaver;_save;getProject,GanttXMLSaver,N);
Relation(GanttXMLSaver;_save;getRoot,TreeModel,N);
Relation(GanttXMLSaver;_save;getTaskColor,GanttGraphicArea,N);
Relation(GanttXMLSaver;_save;hasMoreElements,Enumeration,N);
Relation(GanttXMLSaver;_save;nextElement,Enumeration,N);
Relation(GanttXMLSaver;_save;replaceAll,GanttXMLSaver,String-String-String);
Relation(GanttXMLSaver;_save;write,Writer,String);
Relation(GanttXMLSaver;_save;writeAllocations,GanttXMLSaver,Writer);
Relation(GanttXMLSaver;_save;writeResources,GanttXMLSaver,Writer);
Relation(GanttXMLSaver;_save;writeTask,GanttXMLSaver,Writer-DefaultMutableTreeNode-String);
Relation(GanttXMLSaver;addAttribute;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttXMLSaver;correct;replaceAll,String,String-String);
Relation(GanttXMLSaver;emptyComment;comment,LexicalHandler,char[]-int-int);
Relation(GanttXMLSaver;emptyElement;clear,AttributesImpl,N);
Relation(GanttXMLSaver;emptyElement;endElement,GanttXMLSaver,String-TransformerHandler);
Relation(GanttXMLSaver;emptyElement;startElement,GanttXMLSaver,String-AttributesImpl-TransformerHandler);
Relation(GanttXMLSaver;endElement;endElement,ContentHandler,String-String-String);
Relation(GanttXMLSaver;replaceAll;replaceAll,String,String-String);
Relation(GanttXMLSaver;save;_save,GanttXMLSaver,OutputStreamWriter-String-boolean);
Relation(GanttXMLSaver;save;addAttribute,GanttXMLSaver,String-String-AttributesImpl);
Relation(GanttXMLSaver;save;close,OutputStreamWriter,N);
Relation(GanttXMLSaver;save;emptyComment,GanttXMLSaver,TransformerHandler);
Relation(GanttXMLSaver;save;endDocument,ContentHandler,N);
Relation(GanttXMLSaver;save;endElement,GanttXMLSaver,String-TransformerHandler);
Relation(GanttXMLSaver;save;getDate,GanttGraphicArea,N);
Relation(GanttXMLSaver;save;getOrganization,IGanttProject,N);
Relation(GanttXMLSaver;save;getProject,GanttXMLSaver,N);
Relation(GanttXMLSaver;save;getProjectName,IGanttProject,N);
Relation(GanttXMLSaver;save;getTransformer,TransformerHandler,N);
Relation(GanttXMLSaver;save;getWebLink,IGanttProject,N);
Relation(GanttXMLSaver;save;getZoom,GanttGraphicArea,N);
Relation(GanttXMLSaver;save;newInstance,TransformerFactory,N);
Relation(GanttXMLSaver;save;newTransformerHandler,SAXTransformerFactory,N);
Relation(GanttXMLSaver;save;printStackTrace,Throwable,N);
Relation(GanttXMLSaver;save;printStackTrace,TransformerException,N);
Relation(GanttXMLSaver;save;println,PrintStream,Object);
Relation(GanttXMLSaver;save;save,GanttXMLSaver,OutputStreamWriter-String-boolean);
Relation(GanttXMLSaver;save;saveRoles,GanttXMLSaver,TransformerHandler);
Relation(GanttXMLSaver;save;setOutputProperty,Transformer,String-String);
Relation(GanttXMLSaver;save;setResult,TransformerHandler,Result);
Relation(GanttXMLSaver;save;startDocument,ContentHandler,N);
Relation(GanttXMLSaver;save;startElement,GanttXMLSaver,String-AttributesImpl-TransformerHandler);
Relation(GanttXMLSaver;save;toXMLString,GanttCalendar,N);
Relation(GanttXMLSaver;saveRoles;addAttribute,GanttXMLSaver,String-String-AttributesImpl);
Relation(GanttXMLSaver;saveRoles;emptyElement,GanttXMLSaver,String-AttributesImpl-TransformerHandler);
Relation(GanttXMLSaver;saveRoles;endElement,GanttXMLSaver,String-TransformerHandler);
Relation(GanttXMLSaver;saveRoles;getName,Role,N);
Relation(GanttXMLSaver;saveRoles;getName,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;getPersistentID,Role,N);
Relation(GanttXMLSaver;saveRoles;getProject,GanttXMLSaver,N);
Relation(GanttXMLSaver;saveRoles;getProjectRoleSet,RoleManager,N);
Relation(GanttXMLSaver;saveRoles;getRoleManager,IGanttProject,N);
Relation(GanttXMLSaver;saveRoles;getRoleSets,RoleManager,N);
Relation(GanttXMLSaver;saveRoles;getRoles,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;isEmpty,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;isEnabled,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;startElement,GanttXMLSaver,String-AttributesImpl-TransformerHandler);
Relation(GanttXMLSaver;startElement;clear,AttributesImpl,N);
Relation(GanttXMLSaver;startElement;startElement,ContentHandler,String-String-String-Attributes);
Relation(GanttXMLSaver;writeAllocations;get,ArrayList,int);
Relation(GanttXMLSaver;writeAllocations;getAssignments,Task,N);
Relation(GanttXMLSaver;writeAllocations;getId,ProjectResource,N);
Relation(GanttXMLSaver;writeAllocations;getLoad,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getResource,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getTaskID,Task,N);
Relation(GanttXMLSaver;writeAllocations;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXMLSaver;writeAllocations;println,PrintStream,Object);
Relation(GanttXMLSaver;writeAllocations;size,ArrayList,N);
Relation(GanttXMLSaver;writeAllocations;write,Writer,String);
Relation(GanttXMLSaver;writeResources;correct,GanttXMLSaver,String);
Relation(GanttXMLSaver;writeResources;get,ArrayList,int);
Relation(GanttXMLSaver;writeResources;getBytes,String,String);
Relation(GanttXMLSaver;writeResources;getId,ProjectResource,N);
Relation(GanttXMLSaver;writeResources;getMail,HumanResource,N);
Relation(GanttXMLSaver;writeResources;getName,ProjectResource,N);
Relation(GanttXMLSaver;writeResources;getPeople,GanttResourcePanel,N);
Relation(GanttXMLSaver;writeResources;getPersistentID,Role,N);
Relation(GanttXMLSaver;writeResources;getPhone,HumanResource,N);
Relation(GanttXMLSaver;writeResources;getRole,HumanResource,N);
Relation(GanttXMLSaver;writeResources;println,PrintStream,Object);
Relation(GanttXMLSaver;writeResources;put,HashMap,Object-Object);
Relation(GanttXMLSaver;writeResources;size,ArrayList,N);
Relation(GanttXMLSaver;writeResources;write,Writer,String);
Relation(GanttXMLSaver;writeRoles;correct,GanttXMLSaver,String);
Relation(GanttXMLSaver;writeRoles;getInstance,Access,N);
Relation(GanttXMLSaver;writeRoles;getName,Role,N);
Relation(GanttXMLSaver;writeRoles;getPersistentID,Role,N);
Relation(GanttXMLSaver;writeRoles;getProjectLevelRoles,RoleManager,N);
Relation(GanttXMLSaver;writeRoles;println,PrintStream,Object);
Relation(GanttXMLSaver;writeRoles;write,Writer,String);
Relation(GanttXMLSaver;writeTask;add,ArrayList,Object);
Relation(GanttXMLSaver;writeTask;colorDefined,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;correct,GanttXMLSaver,String);
Relation(GanttXMLSaver;writeTask;equals,String,Object);
Relation(GanttXMLSaver;writeTask;get,ArrayList,int);
Relation(GanttXMLSaver;writeTask;get,Vector,int);
Relation(GanttXMLSaver;writeTask;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttXMLSaver;writeTask;getArray,ShapePaint,N);
Relation(GanttXMLSaver;writeTask;getColor,ColorConvertion,Color);
Relation(GanttXMLSaver;writeTask;getColor,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getCompletionPercentage,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getExpand,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getLength,GanttTask,N);
Relation(GanttXMLSaver;writeTask;getName,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getNotes,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getPriority,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getRelationshipType,GanttTaskRelationship,N);
Relation(GanttXMLSaver;writeTask;getShape,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getStart,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getSuccessorTaskID,GanttTaskRelationship,N);
Relation(GanttXMLSaver;writeTask;getSuccessorsOld,GanttTask,N);
Relation(GanttXMLSaver;writeTask;getTaskID,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttXMLSaver;writeTask;getWebLink,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;isMilestone,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;isStartFixed,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;length,String,N);
Relation(GanttXMLSaver;writeTask;println,PrintStream,Object);
Relation(GanttXMLSaver;writeTask;replaceAll,GanttXMLSaver,String-String-String);
Relation(GanttXMLSaver;writeTask;shapeDefined,TaskImpl,N);
Relation(GanttXMLSaver;writeTask;size,ArrayList,N);
Relation(GanttXMLSaver;writeTask;size,Vector,N);
Relation(GanttXMLSaver;writeTask;toString,Object,N);
Relation(GanttXMLSaver;writeTask;toXMLString,GanttCalendar,N);
Relation(GanttXMLSaver;writeTask;write,Writer,String);
Relation(GanttXMLSaver;writeTask;writeTask,GanttXMLSaver,Writer-DefaultMutableTreeNode-String);
end b230
start b231
Class(GanttTreeExpansionListener,N,N,public);
end b231
start b232
Attribute(GanttTaskPropertiesBean,myDependenciesPanel,TaskDependenciesPanel,N,private);
Attribute(TaskDependenciesPanel,CONSTRAINTS,TaskDependencyConstraint[],static,private);
Attribute(TaskDependenciesPanel,gbc,GridBagConstraints,N,private);
Attribute(TaskDependenciesPanel,language,GanttLanguage,N,protected);
Attribute(TaskDependenciesPanel,myTableModel,DependencyTableModel,N,private);
Attribute(TaskDependenciesPanel,myTaskManager,TaskManager,N,private);
Attribute(TaskDependenciesPanel,predecessorsPanel,JPanel,N,private);
Attribute(TaskDependenciesPanel,predecessorsScrollPane,JScrollPane,N,private);
Attribute(TaskDependenciesPanel,predecessorsTable,JTable,N,private);
Class(TaskDependenciesPanel,N,N,public);
Generalisation(TaskDependenciesPanel,CommonPanel);
Method(TaskDependenciesPanel,TaskDependenciesPanel,N,Y,N,N,public);
Method(TaskDependenciesPanel,actionPerformed,void,Y,N,N,public);
Method(TaskDependenciesPanel,constructPredecessorsPanel,void,N,N,N,protected);
Method(TaskDependenciesPanel,getComponent,JPanel,N,N,N,public);
Method(TaskDependenciesPanel,getTable,JTable,N,N,N,public);
Method(TaskDependenciesPanel,getTableModel,DependencyTableModel,N,N,N,public);
Method(TaskDependenciesPanel,setUpPredecessorComboColumn,void,Y,N,N,protected);
Method(TaskDependenciesPanel,setUpTypeComboColumn,void,Y,N,N,protected);
Parameter(TaskDependenciesPanel,TaskDependenciesPanel,task,Task,declaration);
Parameter(TaskDependenciesPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(TaskDependenciesPanel,actionPerformed,evt,ActionEvent,declaration);
Parameter(TaskDependenciesPanel,constructPredecessorsPanel,bremoveJButton,local);
Parameter(TaskDependenciesPanel,constructPredecessorsPanel,secondPredecessorsPanelJPanel,local);
Parameter(TaskDependenciesPanel,constructPredecessorsPanel,selectedRowint[],local);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,comboBoxJComboBox,local);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,nextTask,local);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,possiblePredecessorsTask[],local);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,predecessorColumn,TableColumn,declaration);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,predecessorTable,JTable,declaration);
Parameter(TaskDependenciesPanel,setUpPredecessorComboColumn,selectedItemTaskComboItem,local);
Parameter(TaskDependenciesPanel,setUpTypeComboColumn,comboBoxJComboBox,local);
Parameter(TaskDependenciesPanel,setUpTypeComboColumn,modelDefaultComboBoxModel,local);
Parameter(TaskDependenciesPanel,setUpTypeComboColumn,typeColumn,TableColumn,declaration);
Relation(GanttTaskPropertiesBean;constructPredecessorsPanel;getComponent,TaskDependenciesPanel,N);
Relation(GanttTaskPropertiesBean;getReturnTask;getTableModel,TaskDependenciesPanel,N);
Relation(TaskDependenciesPanel;NgetInstance,GanttLanguage,N);
Relation(TaskDependenciesPanel;TaskDependenciesPanel;getManager,Task,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;add,Container,Component);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;add,Container,Component-Object);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;addActionListener,AbstractButton,ActionListener);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;addUsingGBL,CommonPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getClass,Object,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getColumn,TableColumnModel,int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getColumnModel,JTable,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getModel,JTable,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getResource,Class<>,String);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getSelectedRows,JTable,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getTask,CommonPanel,N);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getText,GanttLanguage,String);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getToolTip,GanttProject,String);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setBorder,JComponent,Border);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setPreferredScrollableViewportSize,JTable,Dimension);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setPreferredWidth,TableColumn,int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setRowHeight,JTable,int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setToolTipText,JComponent,String);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setUpPredecessorComboColumn,TaskDependenciesPanel,TableColumn-JTable);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setUpTypeComboColumn,TaskDependenciesPanel,TableColumn);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setValueAt,TableModel,Object-int-int);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;setupCommonFields,CommonPanel,N);
Relation(TaskDependenciesPanel;getComponent;constructPredecessorsPanel,TaskDependenciesPanel,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;addActionListener,JComboBox,ActionListener);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;addItem,JComboBox,Object);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getAlgorithmCollection,TaskManager,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getEditingRow,JTable,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getFindPossibleDependeesAlgorithm,AlgorithmCollection,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getSelectedItem,JComboBox,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getTask,CommonPanel,N);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;run,FindPossibleDependeesAlgorithm,Task);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;setCellEditor,TableColumn,TableCellEditor);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;setEditable,JComboBox,boolean);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;setValueAt,JTable,Object-int-int);
Relation(TaskDependenciesPanel;setUpTypeComboColumn;setCellEditor,TableColumn,TableCellEditor);
Relation(TaskDependenciesPanel;setUpTypeComboColumn;setEditable,JComboBox,boolean);
Relation(TaskDependenciesPanel;setUpTypeComboColumn;setSelectedIndex,JComboBox,int);
end b232
start b233
Attribute(CSVOptions,bExportResourceID,boolean,N,public);
Attribute(CSVOptions,bExportResourceMail,boolean,N,public);
Attribute(CSVOptions,bExportResourceName,boolean,N,public);
Attribute(CSVOptions,bExportResourcePhone,boolean,N,public);
Attribute(CSVOptions,bExportResourceRole,boolean,N,public);
Attribute(CSVOptions,bExportTaskDuration,boolean,N,public);
Attribute(CSVOptions,bExportTaskEndDate,boolean,N,public);
Attribute(CSVOptions,bExportTaskID,boolean,N,public);
Attribute(CSVOptions,bExportTaskName,boolean,N,public);
Attribute(CSVOptions,bExportTaskNotes,boolean,N,public);
Attribute(CSVOptions,bExportTaskPercent,boolean,N,public);
Attribute(CSVOptions,bExportTaskResources,boolean,N,public);
Attribute(CSVOptions,bExportTaskStartDate,boolean,N,public);
Attribute(CSVOptions,bExportTaskWebLink,boolean,N,public);
Attribute(CSVOptions,bFixedSize,boolean,N,public);
Attribute(CSVOptions,sSeparatedChar,String,N,public);
Attribute(CSVOptions,sSeparatedTextChar,String,N,public);
Attribute(GanttCSVExport,csvOptions,CSVOptions,N,private);
Attribute(GanttOptions,csvOptions,CSVOptions,N,private);
Class(CSVOptions,N,N,public);
Method(CSVOptions,correct,String,Y,N,N,public);
Method(CSVOptions,getSeparatedTextChars,String[],N,N,N,public);
Method(CSVOptions,getXml,String,N,N,N,public);
Method(GanttOptions,getCSVOptions,CSVOptions,N,N,N,public);
Parameter(CSVOptions,correct,resString,local);
Parameter(CSVOptions,correct,s,String,declaration);
Parameter(CSVOptions,getSeparatedTextChars,charTextString[],local);
Parameter(CSVOptions,getXml,resString,local);
Parameter(CSVSettingsPanel,applyChanges,csvOptionsCSVOptions,local);
Parameter(CSVSettingsPanel,separatCharHasChange,csvOptionsCSVOptions,local);
Parameter(GanttCSVExport,GanttCSVExport,csvOptions,CSVOptions,declaration);
Relation(CSVOptions;correct;replaceAll,String,String-String);
Relation(CSVOptions;getXml;correct,CSVOptions,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;getSeparatedTextChars,CSVOptions,N);
end b233
start b234
Attribute(ResourcesTableModel,myMutator,ResourceAssignmentMutator,N,private);
Class(ResourceAssignmentMutator,N,N,public);
Method(ResourceAssignmentCollection,createMutator,ResourceAssignmentMutator,N,N,N,package);
Method(ResourceAssignmentCollectionImpl,createMutator,ResourceAssignmentMutator,N,N,N,public);
Method(ResourceAssignmentMutator,commit,void,N,N,N,package);
Relation(ResourcesTableModel;commit;commit,ResourceAssignmentMutator,N);
end b234
start b235
Attribute(GeneralDialog,settingPanel,GeneralOptionPanel,N,protected);
Attribute(GeneralOptionPanel,appli,Frame,N,private);
Attribute(GeneralOptionPanel,bHasChange,boolean,N,protected);
Attribute(GeneralOptionPanel,language,GanttLanguage,N,protected);
Attribute(GeneralOptionPanel,myComment,String,N,private);
Attribute(GeneralOptionPanel,myTitle,String,N,private);
Attribute(GeneralOptionPanel,vb,Box,N,protected);
Class(GeneralOptionPanel,abstract,N,public);
Generalisation(AboutAuthorPanel,GeneralOptionPanel);
Generalisation(AboutJavaInfosPanel,GeneralOptionPanel);
Generalisation(AboutLibraryPanel,GeneralOptionPanel);
Generalisation(AboutLicensePanel,GeneralOptionPanel);
Generalisation(AboutPanel,GeneralOptionPanel);
Generalisation(CSVSettingsPanel,GeneralOptionPanel);
Generalisation(ColorSettingsPanel,GeneralOptionPanel);
Generalisation(ConnectionPanel,GeneralOptionPanel);
Generalisation(ExportSettingsPanel,GeneralOptionPanel);
Generalisation(GeneralOptionPanel,JPanel);
Generalisation(HTMLSettingsPanel,GeneralOptionPanel);
Generalisation(LanguageSettingsPanel,GeneralOptionPanel);
Generalisation(LnFSettingsPanel,GeneralOptionPanel);
Generalisation(PDFSettingsPanel,GeneralOptionPanel);
Generalisation(ParametersSettingsPanel,GeneralOptionPanel);
Generalisation(ProjectSettingsPanel,GeneralOptionPanel);
Generalisation(RolesSettingsPanel,GeneralOptionPanel);
Generalisation(WelcomeSettingsPanel,GeneralOptionPanel);
Method(GeneralOptionPanel,GeneralOptionPanel,N,Y,N,N,public);
Method(GeneralOptionPanel,applyChanges,boolean,Y,abstract,N,public);
Method(GeneralOptionPanel,askForApplyChanges,boolean,N,N,N,public);
Method(GeneralOptionPanel,getComment,String,N,N,N,public);
Method(GeneralOptionPanel,getComponent,Component,N,N,N,public);
Method(GeneralOptionPanel,getTitle,String,N,N,N,public);
Method(GeneralOptionPanel,initialize,void,N,abstract,N,public);
Parameter(GeneralDialog,GeneralDialog,firstPanel,GeneralOptionPanel,declaration);
Parameter(GeneralOptionPanel,GeneralOptionPanel,comment,String,declaration);
Parameter(GeneralOptionPanel,GeneralOptionPanel,parent,Frame,declaration);
Parameter(GeneralOptionPanel,GeneralOptionPanel,title,String,declaration);
Parameter(GeneralOptionPanel,applyChanges,askForApply,boolean,declaration);
Parameter(GeneralOptionPanel,askForApplyChanges,gdiGanttDialogInfo,local);
Relation(AboutDialog;valueChanged;getComment,GeneralOptionPanel,N);
Relation(AboutDialog;valueChanged;getTitle,GeneralOptionPanel,N);
Relation(AboutDialog;valueChanged;initialize,GeneralOptionPanel,N);
Relation(CSVSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ColorSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ExportSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;getComment,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;getTitle,GeneralOptionPanel,N);
Relation(GeneralDialog;GeneralDialog;initialize,GeneralOptionPanel,N);
Relation(GeneralDialog;actionPerformed;applyChanges,GeneralOptionPanel,boolean);
Relation(GeneralOptionPanel;GeneralOptionPanel;add,Container,Component-Object);
Relation(GeneralOptionPanel;GeneralOptionPanel;setLayout,Container,LayoutManager);
Relation(GeneralOptionPanel;NcreateVerticalBox,Box,N);
Relation(GeneralOptionPanel;NgetInstance,GanttLanguage,N);
Relation(GeneralOptionPanel;askForApplyChanges;getText,GanttLanguage,String);
Relation(GeneralOptionPanel;askForApplyChanges;show,Dialog,N);
Relation(HTMLSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(LanguageSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(LnFSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(PDFSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ParametersSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ProjectSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ServerDialog;valueChanged;initialize,GeneralOptionPanel,N);
Relation(SettingsDialog;actionPerformed;initialize,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;applyChanges,GeneralOptionPanel,boolean);
Relation(SettingsDialog;valueChanged;getComment,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;getTitle,GeneralOptionPanel,N);
Relation(SettingsDialog;valueChanged;initialize,GeneralOptionPanel,N);
end b235
start b236
Attribute(TaskDependencyCollectionImpl,ADD,int,static,package);
Attribute(TaskDependencyCollectionImpl,CLEAR,int,static,package);
Attribute(TaskDependencyCollectionImpl,DELETE,int,static,package);
Attribute(TaskDependencyCollectionImpl,myCleanupMutation,MutationInfo,N,private);
Attribute(TaskDependencyCollectionImpl,myDependencies,Set,N,private);
Attribute(TaskDependencyCollectionImpl,myDependency,TaskDependency,N,package);
Attribute(TaskDependencyCollectionImpl,myEventDispatcher,EventDispatcher,N,private);
Attribute(TaskDependencyCollectionImpl,myOperation,int,N,package);
Attribute(TaskDependencyCollectionImpl,myOrder,int,N,package);
Attribute(TaskDependencyCollectionImpl,myQueue,Map,N,private);
Attribute(TaskDependencyCollectionImpl,mySearchKey2dependency,SortedMap,N,private);
Attribute(TaskDependencyCollectionImpl,ourOrder,int,static,package);
Attribute(TaskDependencyImpl,myCollection,TaskDependencyCollectionImpl,N,private);
Attribute(TaskManagerImpl,myDependencyCollection,TaskDependencyCollectionImpl,N,private);
Class(TaskDependencyCollectionImpl,N,N,public);
Method(TaskDependencyCollectionImpl,MutationInfo,N,Y,N,N,public);
Method(TaskDependencyCollectionImpl,TaskDependencyCollectionImpl,N,Y,N,N,public);
Method(TaskDependencyCollectionImpl,addDependency,void,Y,N,N,package);
Method(TaskDependencyCollectionImpl,auxCreateDependency,TaskDependency,Y,N,N,private);
Method(TaskDependencyCollectionImpl,clear,void,N,N,N,public);
Method(TaskDependencyCollectionImpl,commit,void,N,N,N,public);
Method(TaskDependencyCollectionImpl,compareTo,int,Y,N,N,public);
Method(TaskDependencyCollectionImpl,createDependency,TaskDependency,Y,N,N,public);
Method(TaskDependencyCollectionImpl,createMutator,TaskDependencyCollectionMutator,N,N,N,public);
Method(TaskDependencyCollectionImpl,delete,void,Y,N,N,package);
Method(TaskDependencyCollectionImpl,deleteDependency,void,Y,N,N,public);
Method(TaskDependencyCollectionImpl,doClear,void,N,N,N,public);
Method(TaskDependencyCollectionImpl,getDependencies,TaskDependency[],N,N,N,public);
Method(TaskDependencyCollectionImpl,getDependencies,TaskDependency[],Y,N,N,public);
Method(TaskDependencyCollectionImpl,getDependenciesAsDependant,TaskDependency[],Y,N,N,public);
Method(TaskDependencyCollectionImpl,getDependenciesAsDependee,TaskDependency[],Y,N,N,public);
Parameter(TaskDependencyCollectionImpl,MutationInfo,myDependency,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,MutationInfo,myOperation,int,declaration);
Parameter(TaskDependencyCollectionImpl,TaskDependencyCollectionImpl,myEventDispatcher,EventDispatcher,declaration);
Parameter(TaskDependencyCollectionImpl,addDependency,dep,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,resultTaskDependency,local);
Parameter(TaskDependencyCollectionImpl,commit,mutationsList,local);
Parameter(TaskDependencyCollectionImpl,commit,nextMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,compareTo,o,Object,declaration);
Parameter(TaskDependencyCollectionImpl,compareTo,rvalueMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,createDependency,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,createDependency,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,createDependency,resultTaskDependency,local);
Parameter(TaskDependencyCollectionImpl,delete,dep,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,delete,key1SearchKey,local);
Parameter(TaskDependencyCollectionImpl,delete,key2SearchKey,local);
Parameter(TaskDependencyCollectionImpl,deleteDependency,dependency,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,deleteDependency,infoMutationInfo,local);
Parameter(TaskDependencyCollectionImpl,getDependencies,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependencies,submapSortedMap,local);
Parameter(TaskDependencyCollectionImpl,getDependencies,task,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependencies,toKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,dependant,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,submapSortedMap,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependant,toKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,dependee,Task,declaration);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,fromKeySearchKey,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,submapSortedMap,local);
Parameter(TaskDependencyCollectionImpl,getDependenciesAsDependee,toKeySearchKey,local);
Parameter(TaskDependencyImpl,TaskDependencyImpl,collection,TaskDependencyCollectionImpl,declaration);
Relation(TaskDependencyCollectionImpl;addDependency;add,Set,Object);
Relation(TaskDependencyCollectionImpl;addDependency;contains,Set,Object);
Relation(TaskDependencyCollectionImpl;addDependency;fireDependencyAdded,EventDispatcher,TaskDependency);
Relation(TaskDependencyCollectionImpl;addDependency;put,Map,Object-Object);
Relation(TaskDependencyCollectionImpl;auxCreateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(TaskDependencyCollectionImpl;clear;clear,Map,N);
Relation(TaskDependencyCollectionImpl;clear;doClear,TaskDependencyCollectionImpl,N);
Relation(TaskDependencyCollectionImpl;commit;add,List,Object);
Relation(TaskDependencyCollectionImpl;commit;addDependency,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;commit;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;commit;doClear,TaskDependencyCollectionImpl,N);
Relation(TaskDependencyCollectionImpl;commit;get,List,int);
Relation(TaskDependencyCollectionImpl;commit;printStackTrace,Throwable,N);
Relation(TaskDependencyCollectionImpl;commit;size,List,N);
Relation(TaskDependencyCollectionImpl;commit;sort,Collections,List);
Relation(TaskDependencyCollectionImpl;commit;values,Map,N);
Relation(TaskDependencyCollectionImpl;createDependency;addDependency,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;createDependency;auxCreateDependency,TaskDependencyCollectionImpl,Task-Task);
Relation(TaskDependencyCollectionImpl;createDependency;put,Map,Object-Object);
Relation(TaskDependencyCollectionImpl;delete;fireDependencyRemoved,EventDispatcher,TaskDependency);
Relation(TaskDependencyCollectionImpl;delete;getDependant,TaskDependency,N);
Relation(TaskDependencyCollectionImpl;delete;getDependee,TaskDependency,N);
Relation(TaskDependencyCollectionImpl;delete;getTaskID,Task,N);
Relation(TaskDependencyCollectionImpl;delete;remove,Map,Object);
Relation(TaskDependencyCollectionImpl;delete;remove,Set,Object);
Relation(TaskDependencyCollectionImpl;deleteDependency;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;deleteDependency;get,Map,Object);
Relation(TaskDependencyCollectionImpl;deleteDependency;put,Map,Object-Object);
Relation(TaskDependencyCollectionImpl;deleteDependency;remove,Map,Object);
Relation(TaskDependencyCollectionImpl;doClear;clear,Map,N);
Relation(TaskDependencyCollectionImpl;doClear;clear,Set,N);
Relation(TaskDependencyCollectionImpl;getDependencies;subMap,SortedMap,Object-Object);
Relation(TaskDependencyCollectionImpl;getDependencies;toArray,Collection,Object[]);
Relation(TaskDependencyCollectionImpl;getDependencies;toArray,Set,Object[]);
Relation(TaskDependencyCollectionImpl;getDependencies;values,SortedMap,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependant;getTaskID,Task,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependant;subMap,SortedMap,Object-Object);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependant;toArray,Collection,Object[]);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependant;values,SortedMap,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependee;getTaskID,Task,N);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependee;subMap,SortedMap,Object-Object);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependee;toArray,Collection,Object[]);
Relation(TaskDependencyCollectionImpl;getDependenciesAsDependee;values,SortedMap,N);
Relation(TaskDependencyImpl;delete;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskManagerImpl;clear;clear,TaskDependencyCollectionImpl,N);
end b236
start b237
Class(Access,N,N,public);
Relation(GanttDialogPerson;initComponents;getInstance,Access,N);
Relation(GanttProject;GanttProject;newInstance,Access,Factory-TaskManagerConfig);
Relation(GanttProject;closeProject;getInstance,Access,N);
Relation(GanttProject;getRoleManager;getInstance,Access,N);
Relation(GanttProject;openXMLStream;getInstance,Access,N);
Relation(GanttXMLSaver;writeRoles;getInstance,Access,N);
Relation(ImportResources;actionPerformed;getInstance,Access,N);
Relation(RolesTableModel;RolesTableModel;getInstance,Access,N);
Relation(TaskManager;NnewInstance,Access,N);
end b237
start b238
Attribute(DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,N,package);
Attribute(GanttDialogProperties,aarea,GanttGraphicArea,N,private);
Attribute(GanttDialogProperties,area,GanttGraphicArea,N,private);
Attribute(GanttGraphicArea,FOUR_MONTH,int,static,public);
Attribute(GanttGraphicArea,ONE_MONTH,int,static,public);
Attribute(GanttGraphicArea,ONE_WEEK,int,static,public);
Attribute(GanttGraphicArea,ONE_YEAR,int,static,public);
Attribute(GanttGraphicArea,SIX_MONTH,int,static,public);
Attribute(GanttGraphicArea,THREE_MONTH,int,static,public);
Attribute(GanttGraphicArea,THREE_YEAR,int,static,public);
Attribute(GanttGraphicArea,TWO_MONTH,int,static,public);
Attribute(GanttGraphicArea,TWO_WEEK,int,static,public);
Attribute(GanttGraphicArea,TWO_YEAR,int,static,public);
Attribute(GanttGraphicArea,addTaskLength,float,N,private);
Attribute(GanttGraphicArea,appli,GanttProject,N,private);
Attribute(GanttGraphicArea,arrayColor,Color[],N,private);
Attribute(GanttGraphicArea,arrow,Arrow,N,private);
Attribute(GanttGraphicArea,beg,GanttCalendar,N,public);
Attribute(GanttGraphicArea,curs,boolean,N,package);
Attribute(GanttGraphicArea,date,GanttCalendar,N,public);
Attribute(GanttGraphicArea,drag,int,N,package);
Attribute(GanttGraphicArea,draw,boolean,N,package);
Attribute(GanttGraphicArea,draw,boolean,N,private);
Attribute(GanttGraphicArea,draw3dBorders,boolean,N,private);
Attribute(GanttGraphicArea,drawName,boolean,N,private);
Attribute(GanttGraphicArea,drawPercent,boolean,N,private);
Attribute(GanttGraphicArea,drawVersion,boolean,N,private);
Attribute(GanttGraphicArea,drawdepend,boolean,N,private);
Attribute(GanttGraphicArea,end,GanttCalendar,N,public);
Attribute(GanttGraphicArea,language,GanttLanguage,N,private);
Attribute(GanttGraphicArea,listOfParam,ArrayList,N,private);
Attribute(GanttGraphicArea,listOfTask,ArrayList,N,private);
Attribute(GanttGraphicArea,margY,int,N,private);
Attribute(GanttGraphicArea,mouseButton,int,N,public);
Attribute(GanttGraphicArea,moveTask,int,N,private);
Attribute(GanttGraphicArea,moveView,boolean,N,private);
Attribute(GanttGraphicArea,myProjectLevelTaskColor,Color,N,private);
Attribute(GanttGraphicArea,myTaskManager,TaskManager,N,private);
Attribute(GanttGraphicArea,myUIConfiguration,UIConfiguration,N,private);
Attribute(GanttGraphicArea,n,String,N,package);
Attribute(GanttGraphicArea,name,String,N,public);
Attribute(GanttGraphicArea,notes,Notes,N,private);
Attribute(GanttGraphicArea,oldX,int,N,private);
Attribute(GanttGraphicArea,oldY,int,N,private);
Attribute(GanttGraphicArea,olddate,GanttCalendar,N,public);
Attribute(GanttGraphicArea,printRendering,boolean,N,private);
Attribute(GanttGraphicArea,rowCount,int,N,private);
Attribute(GanttGraphicArea,storeTaskLength,int,N,private);
Attribute(GanttGraphicArea,storeTaskStart,GanttCalendar,N,private);
Attribute(GanttGraphicArea,storeX,int[],N,private);
Attribute(GanttGraphicArea,taskDefaultColor,Color,static,public);
Attribute(GanttGraphicArea,taskID,int,N,public);
Attribute(GanttGraphicArea,taskToMove,GanttTask,N,private);
Attribute(GanttGraphicArea,tree,GanttTree,N,public);
Attribute(GanttGraphicArea,type,int,N,public);
Attribute(GanttGraphicArea,typeSeletion,int,N,package);
Attribute(GanttGraphicArea,upperLeft,Point,N,private);
Attribute(GanttGraphicArea,x,int,N,package);
Attribute(GanttGraphicArea,x1,int,N,private);
Attribute(GanttGraphicArea,x1,int,N,public);
Attribute(GanttGraphicArea,x2,int,N,private);
Attribute(GanttGraphicArea,x2,int,N,public);
Attribute(GanttGraphicArea,x3,int,N,public);
Attribute(GanttGraphicArea,y,int,N,package);
Attribute(GanttGraphicArea,y,int,N,public);
Attribute(GanttGraphicArea,y1,int,N,private);
Attribute(GanttGraphicArea,y2,int,N,private);
Attribute(GanttGraphicArea,zoomValue,int,N,private);
Attribute(GanttProject,area,GanttGraphicArea,N,private);
Attribute(GanttTXTOpen,area,GanttGraphicArea,N,package);
Attribute(GanttTree,area,GanttGraphicArea,N,private);
Attribute(GanttXFIGSaver,area,GanttGraphicArea,N,private);
Attribute(GanttXMLOpen,area,GanttGraphicArea,N,package);
Attribute(GanttXMLSaver,area,GanttGraphicArea,N,private);
Class(GanttGraphicArea,N,N,public);
Generalisation(GanttGraphicArea,JPanel);
Method(GanttGraphicArea,Arrow,N,N,N,N,public);
Method(GanttGraphicArea,Arrow,N,Y,N,N,public);
Method(GanttGraphicArea,GanttGraphicArea,N,Y,N,N,public);
Method(GanttGraphicArea,GanttPaintParam,N,Y,N,N,public);
Method(GanttGraphicArea,Notes,N,N,N,N,public);
Method(GanttGraphicArea,Notes,N,Y,N,N,public);
Method(GanttGraphicArea,adjustDependencies,void,Y,N,N,private);
Method(GanttGraphicArea,calcProjectBegAndEnd,void,N,N,N,public);
Method(GanttGraphicArea,changeDate,void,Y,N,N,public);
Method(GanttGraphicArea,changeDate2,void,Y,N,N,public);
Method(GanttGraphicArea,changePoint2,void,Y,N,N,public);
Method(GanttGraphicArea,dependencyAdded,void,Y,N,N,public);
Method(GanttGraphicArea,detectPosition,int,Y,N,N,public);
Method(GanttGraphicArea,drawGPVersion,void,Y,N,N,public);
Method(GanttGraphicArea,drawVerticalLinedash,void,Y,N,N,public);
Method(GanttGraphicArea,export,void,Y,N,N,public);
Method(GanttGraphicArea,fitWholeProject,void,Y,N,N,public);
Method(GanttGraphicArea,getChart,BufferedImage,Y,N,N,public);
Method(GanttGraphicArea,getDate,GanttCalendar,N,N,N,public);
Method(GanttGraphicArea,getDraw,boolean,N,N,N,public);
Method(GanttGraphicArea,getFoot,int,N,N,N,public);
Method(GanttGraphicArea,getGranit,int,Y,N,N,public);
Method(GanttGraphicArea,getPreferredSize,Dimension,N,N,N,public);
Method(GanttGraphicArea,getScrollBar,int,N,N,N,public);
Method(GanttGraphicArea,getTaskColor,Color,N,N,N,public);
Method(GanttGraphicArea,getTaskManager,TaskManager,N,N,N,private);
Method(GanttGraphicArea,getTree,GanttTree,N,N,N,private);
Method(GanttGraphicArea,getZoom,int,N,N,N,public);
Method(GanttGraphicArea,indexOf,int,Y,N,N,public);
Method(GanttGraphicArea,isVisible,boolean,Y,N,N,public);
Method(GanttGraphicArea,mouseClicked,void,Y,N,N,public);
Method(GanttGraphicArea,mouseDragged,void,Y,N,N,public);
Method(GanttGraphicArea,mouseEntered,void,Y,N,N,public);
Method(GanttGraphicArea,mouseExited,void,Y,N,N,public);
Method(GanttGraphicArea,mouseMoved,void,Y,N,N,public);
Method(GanttGraphicArea,mousePressed,void,Y,N,N,public);
Method(GanttGraphicArea,mouseReleased,void,Y,N,N,public);
Method(GanttGraphicArea,mouseWheelMoved,void,Y,N,N,public);
Method(GanttGraphicArea,paint,void,Y,N,N,public);
Method(GanttGraphicArea,paintATaskBilan,void,Y,N,N,public);
Method(GanttGraphicArea,paintATaskChild,void,Y,N,N,public);
Method(GanttGraphicArea,paintATaskFather,void,Y,N,N,public);
Method(GanttGraphicArea,paintAdvancement,int,Y,N,N,public);
Method(GanttGraphicArea,paintCalendar1,void,Y,N,N,public);
Method(GanttGraphicArea,paintCalendar2,void,Y,N,N,public);
Method(GanttGraphicArea,paintCalendar2New,void,Y,N,N,public);
Method(GanttGraphicArea,paintCalendar2Old,void,Y,N,N,public);
Method(GanttGraphicArea,paintComponent,void,Y,N,N,public);
Method(GanttGraphicArea,paintDepend,void,Y,N,N,public);
Method(GanttGraphicArea,paintResources,void,Y,N,N,public);
Method(GanttGraphicArea,paintTasks,void,Y,N,N,public);
Method(GanttGraphicArea,printProject,void,Y,N,N,public);
Method(GanttGraphicArea,printTask,int,Y,N,N,private);
Method(GanttGraphicArea,printTasks,void,Y,N,N,private);
Method(GanttGraphicArea,setDate,void,Y,N,N,public);
Method(GanttGraphicArea,setDraw,void,Y,N,N,public);
Method(GanttGraphicArea,setProjectLevelTaskColor,void,Y,N,N,public);
Method(GanttGraphicArea,setScrollBar,void,Y,N,N,public);
Method(GanttGraphicArea,setString,void,Y,N,N,public);
Method(GanttGraphicArea,setTaskToMove,void,Y,N,N,public);
Method(GanttGraphicArea,setX,void,Y,N,N,public);
Method(GanttGraphicArea,setZoom,void,Y,N,N,public);
Method(GanttGraphicArea,taskScheduleChanged,void,Y,N,N,public);
Method(GanttGraphicArea,toString,String,N,N,N,public);
Method(GanttGraphicArea,zoomLess,void,N,N,N,public);
Method(GanttGraphicArea,zoomMore,void,N,N,N,public);
Method(GanttGraphicArea,zoomToBegin,void,N,N,N,public);
Method(GanttProject,getArea,GanttGraphicArea,N,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,declaration);
Parameter(GanttDialogProperties,GanttDialogProperties,area,GanttGraphicArea,declaration);
Parameter(GanttGraphicArea,Arrow,x1,int,declaration);
Parameter(GanttGraphicArea,Arrow,x2,int,declaration);
Parameter(GanttGraphicArea,Arrow,y1,int,declaration);
Parameter(GanttGraphicArea,Arrow,y2,int,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,algRecalculateTaskScheduleAlgorithm,local);
Parameter(GanttGraphicArea,GanttGraphicArea,app,GanttProject,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,detectint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,diffint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,durationTaskLength,local);
Parameter(GanttGraphicArea,GanttGraphicArea,enddateGanttCalendar,local);
Parameter(GanttGraphicArea,GanttGraphicArea,fint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,grafloat,local);
Parameter(GanttGraphicArea,GanttGraphicArea,newDurationint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,paramGanttPaintParam,local);
Parameter(GanttGraphicArea,GanttGraphicArea,percentint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,secondTaskGanttTask,local);
Parameter(GanttGraphicArea,GanttGraphicArea,secondint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,taskDurationint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,taskManager,TaskManager,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,tempint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,toolkitToolkit,local);
Parameter(GanttGraphicArea,GanttGraphicArea,ttree,GanttTree,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,uiConfiguration,UIConfiguration,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,x1int,local);
Parameter(GanttGraphicArea,GanttGraphicArea,x2int,local);
Parameter(GanttGraphicArea,GanttGraphicArea,xint,local);
Parameter(GanttGraphicArea,GanttGraphicArea,yint,local);
Parameter(GanttGraphicArea,GanttPaintParam,name,String,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,taskID,int,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,type,int,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,x1,int,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,x2,int,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,x3,int,declaration);
Parameter(GanttGraphicArea,GanttPaintParam,y,int,declaration);
Parameter(GanttGraphicArea,Notes,s,String,declaration);
Parameter(GanttGraphicArea,Notes,x,int,declaration);
Parameter(GanttGraphicArea,Notes,y,int,declaration);
Parameter(GanttGraphicArea,adjustDependencies,task,Task,declaration);
Parameter(GanttGraphicArea,calcProjectBegAndEnd,taskTask,local);
Parameter(GanttGraphicArea,changeDate,fint,local);
Parameter(GanttGraphicArea,changeDate,next,boolean,declaration);
Parameter(GanttGraphicArea,changeDate2,gc,GanttCalendar,declaration);
Parameter(GanttGraphicArea,changePoint2,x2,int,declaration);
Parameter(GanttGraphicArea,changePoint2,y2,int,declaration);
Parameter(GanttGraphicArea,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(GanttGraphicArea,detectPosition,all,boolean,declaration);
Parameter(GanttGraphicArea,detectPosition,enddateGanttCalendar,local);
Parameter(GanttGraphicArea,detectPosition,mx,int,declaration);
Parameter(GanttGraphicArea,detectPosition,my,int,declaration);
Parameter(GanttGraphicArea,detectPosition,paramGanttPaintParam,local);
Parameter(GanttGraphicArea,detectPosition,x1int,local);
Parameter(GanttGraphicArea,detectPosition,x2int,local);
Parameter(GanttGraphicArea,detectPosition,x3int,local);
Parameter(GanttGraphicArea,detectPosition,yint,local);
Parameter(GanttGraphicArea,drawGPVersion,g,Graphics,declaration);
Parameter(GanttGraphicArea,drawVerticalLinedash,endint,local);
Parameter(GanttGraphicArea,drawVerticalLinedash,g,Graphics,declaration);
Parameter(GanttGraphicArea,drawVerticalLinedash,iint,local);
Parameter(GanttGraphicArea,drawVerticalLinedash,size,int,declaration);
Parameter(GanttGraphicArea,drawVerticalLinedash,size2int,local);
Parameter(GanttGraphicArea,drawVerticalLinedash,x,int,declaration);
Parameter(GanttGraphicArea,drawVerticalLinedash,y1,int,declaration);
Parameter(GanttGraphicArea,drawVerticalLinedash,y2,int,declaration);
Parameter(GanttGraphicArea,export,file,File,declaration);
Parameter(GanttGraphicArea,export,format,String,declaration);
Parameter(GanttGraphicArea,export,imageBufferedImage,local);
Parameter(GanttGraphicArea,export,settings,GanttExportSettings,declaration);
Parameter(GanttGraphicArea,fitWholeProject,finishGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,heightint,local);
Parameter(GanttGraphicArea,fitWholeProject,maxFinishGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,minStartGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,nextTask,local);
Parameter(GanttGraphicArea,fitWholeProject,nextTreeNodeDefaultMutableTreeNode,local);
Parameter(GanttGraphicArea,fitWholeProject,projectLengthDaysint,local);
Parameter(GanttGraphicArea,fitWholeProject,projectLengthWeeksint,local);
Parameter(GanttGraphicArea,fitWholeProject,resize,boolean,declaration);
Parameter(GanttGraphicArea,fitWholeProject,startGanttCalendar,local);
Parameter(GanttGraphicArea,fitWholeProject,zoomint,local);
Parameter(GanttGraphicArea,getChart,calculateWidthint,local);
Parameter(GanttGraphicArea,getChart,date2GanttCalendar,local);
Parameter(GanttGraphicArea,getChart,fmetricFontMetrics,local);
Parameter(GanttGraphicArea,getChart,gGraphics,local);
Parameter(GanttGraphicArea,getChart,heightint,local);
Parameter(GanttGraphicArea,getChart,image2BufferedImage,local);
Parameter(GanttGraphicArea,getChart,imageBufferedImage,local);
Parameter(GanttGraphicArea,getChart,lotArrayList,local);
Parameter(GanttGraphicArea,getChart,nbcharint,local);
Parameter(GanttGraphicArea,getChart,nextTask,local);
Parameter(GanttGraphicArea,getChart,nextTreeNodeDefaultMutableTreeNode,local);
Parameter(GanttGraphicArea,getChart,oldHeightint,local);
Parameter(GanttGraphicArea,getChart,oldMargYint,local);
Parameter(GanttGraphicArea,getChart,renderingint,local);
Parameter(GanttGraphicArea,getChart,settings,GanttExportSettings,declaration);
Parameter(GanttGraphicArea,getChart,sizeTOCint,local);
Parameter(GanttGraphicArea,getChart,startGanttCalendar,local);
Parameter(GanttGraphicArea,getChart,tmpImageBufferedImage,local);
Parameter(GanttGraphicArea,getChart,transx2int,local);
Parameter(GanttGraphicArea,getChart,transxint,local);
Parameter(GanttGraphicArea,getChart,widthint,local);
Parameter(GanttGraphicArea,getFoot,resint,local);
Parameter(GanttGraphicArea,getGranit,calGanttCalendar,local);
Parameter(GanttGraphicArea,getGranit,day,boolean,declaration);
Parameter(GanttGraphicArea,getGranit,resint,local);
Parameter(GanttGraphicArea,indexOf,id,int,declaration);
Parameter(GanttGraphicArea,indexOf,iint,local);
Parameter(GanttGraphicArea,indexOf,listOfParam,ArrayList,declaration);
Parameter(GanttGraphicArea,isVisible,fatherDefaultMutableTreeNode,local);
Parameter(GanttGraphicArea,isVisible,resboolean,local);
Parameter(GanttGraphicArea,isVisible,taskFatherTask,local);
Parameter(GanttGraphicArea,isVisible,thetask,Task,declaration);
Parameter(GanttGraphicArea,mouseClicked,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseDragged,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseEntered,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseExited,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseMoved,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mousePressed,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseReleased,e,MouseEvent,declaration);
Parameter(GanttGraphicArea,mouseWheelMoved,e,MouseWheelEvent,declaration);
Parameter(GanttGraphicArea,paint,g,Graphics,declaration);
Parameter(GanttGraphicArea,paint,pxint,local);
Parameter(GanttGraphicArea,paint,pyint,local);
Parameter(GanttGraphicArea,paint,totalint,local);
Parameter(GanttGraphicArea,paint,vxint,local);
Parameter(GanttGraphicArea,paint,vyint,local);
Parameter(GanttGraphicArea,paint,xPointsint,local);
Parameter(GanttGraphicArea,paint,yPointsint,local);
Parameter(GanttGraphicArea,paintATaskBilan,dint,local);
Parameter(GanttGraphicArea,paintATaskBilan,fgrafloat,local);
Parameter(GanttGraphicArea,paintATaskBilan,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintATaskBilan,graint,local);
Parameter(GanttGraphicArea,paintATaskBilan,task,Task,declaration);
Parameter(GanttGraphicArea,paintATaskBilan,x1,int,declaration);
Parameter(GanttGraphicArea,paintATaskBilan,xPointsint,local);
Parameter(GanttGraphicArea,paintATaskBilan,y,int,declaration);
Parameter(GanttGraphicArea,paintATaskBilan,yPointsint,local);
Parameter(GanttGraphicArea,paintATaskChild,cColor,local);
Parameter(GanttGraphicArea,paintATaskChild,dint,local);
Parameter(GanttGraphicArea,paintATaskChild,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintATaskChild,task,Task,declaration);
Parameter(GanttGraphicArea,paintATaskChild,x1,int,declaration);
Parameter(GanttGraphicArea,paintATaskChild,x2,int,declaration);
Parameter(GanttGraphicArea,paintATaskChild,y,int,declaration);
Parameter(GanttGraphicArea,paintATaskFather,dint,local);
Parameter(GanttGraphicArea,paintATaskFather,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintATaskFather,task,Task,declaration);
Parameter(GanttGraphicArea,paintATaskFather,x1,int,declaration);
Parameter(GanttGraphicArea,paintATaskFather,x2,int,declaration);
Parameter(GanttGraphicArea,paintATaskFather,xPointsint,local);
Parameter(GanttGraphicArea,paintATaskFather,y,int,declaration);
Parameter(GanttGraphicArea,paintATaskFather,yPointsint,local);
Parameter(GanttGraphicArea,paintAdvancement,color,Color,declaration);
Parameter(GanttGraphicArea,paintAdvancement,fpfloat,local);
Parameter(GanttGraphicArea,paintAdvancement,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintAdvancement,g2Graphics2D,local);
Parameter(GanttGraphicArea,paintAdvancement,justText,boolean,declaration);
Parameter(GanttGraphicArea,paintAdvancement,percent,int,declaration);
Parameter(GanttGraphicArea,paintAdvancement,shape,ShapePaint,declaration);
Parameter(GanttGraphicArea,paintAdvancement,x1,int,declaration);
Parameter(GanttGraphicArea,paintAdvancement,x2,int,declaration);
Parameter(GanttGraphicArea,paintAdvancement,y,int,declaration);
Parameter(GanttGraphicArea,paintCalendar1,dateToPaintGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,drawDateint,local);
Parameter(GanttGraphicArea,paintCalendar1,fgrafloat,local);
Parameter(GanttGraphicArea,paintCalendar1,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintCalendar1,gra2int,local);
Parameter(GanttGraphicArea,paintCalendar1,graint,local);
Parameter(GanttGraphicArea,paintCalendar1,headeryint,local);
Parameter(GanttGraphicArea,paintCalendar1,sDayString,local);
Parameter(GanttGraphicArea,paintCalendar1,sMonthString,local);
Parameter(GanttGraphicArea,paintCalendar1,sfloat,local);
Parameter(GanttGraphicArea,paintCalendar1,sizexint,local);
Parameter(GanttGraphicArea,paintCalendar1,sizeyint,local);
Parameter(GanttGraphicArea,paintCalendar1,tmpdateGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,todayGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar1,xValueint,local);
Parameter(GanttGraphicArea,paintCalendar2,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintCalendar2New,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintCalendar2New,modelChartModel,local);
Parameter(GanttGraphicArea,paintCalendar2Old,calGanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar2Old,date_2GanttCalendar,local);
Parameter(GanttGraphicArea,paintCalendar2Old,dmString,local);
Parameter(GanttGraphicArea,paintCalendar2Old,dy2int,local);
Parameter(GanttGraphicArea,paintCalendar2Old,dyint,local);
Parameter(GanttGraphicArea,paintCalendar2Old,fgrafloat,local);
Parameter(GanttGraphicArea,paintCalendar2Old,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintCalendar2Old,gra2int,local);
Parameter(GanttGraphicArea,paintCalendar2Old,headeryint,local);
Parameter(GanttGraphicArea,paintCalendar2Old,posXfloat,local);
Parameter(GanttGraphicArea,paintCalendar2Old,sDayString,local);
Parameter(GanttGraphicArea,paintCalendar2Old,sMonthString,local);
Parameter(GanttGraphicArea,paintCalendar2Old,sizexint,local);
Parameter(GanttGraphicArea,paintCalendar2Old,sizeyint,local);
Parameter(GanttGraphicArea,paintCalendar2Old,tmpdateGanttCalendar,local);
Parameter(GanttGraphicArea,paintComponent,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintDepend,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintDepend,index1int,local);
Parameter(GanttGraphicArea,paintDepend,index2int,local);
Parameter(GanttGraphicArea,paintDepend,relationshipGanttTaskRelationship,local);
Parameter(GanttGraphicArea,paintDepend,successorsVector,local);
Parameter(GanttGraphicArea,paintDepend,task2Task,local);
Parameter(GanttGraphicArea,paintDepend,taskGanttTask,local);
Parameter(GanttGraphicArea,paintDepend,x1t1int,local);
Parameter(GanttGraphicArea,paintDepend,x1t2int,local);
Parameter(GanttGraphicArea,paintDepend,x2t1int,local);
Parameter(GanttGraphicArea,paintDepend,x2t2int,local);
Parameter(GanttGraphicArea,paintDepend,xPointsint,local);
Parameter(GanttGraphicArea,paintDepend,xaint,local);
Parameter(GanttGraphicArea,paintDepend,yPointsint,local);
Parameter(GanttGraphicArea,paintDepend,yt1int,local);
Parameter(GanttGraphicArea,paintDepend,yt2int,local);
Parameter(GanttGraphicArea,paintResources,assignmentsResourceAssignment[],local);
Parameter(GanttGraphicArea,paintResources,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintResources,nextProjectResource,local);
Parameter(GanttGraphicArea,paintResources,resourceListString,local);
Parameter(GanttGraphicArea,paintResources,task,Task,declaration);
Parameter(GanttGraphicArea,paintResources,x,int,declaration);
Parameter(GanttGraphicArea,paintResources,y,int,declaration);
Parameter(GanttGraphicArea,paintTasks,e1int,local);
Parameter(GanttGraphicArea,paintTasks,fgrafloat,local);
Parameter(GanttGraphicArea,paintTasks,foisint,local);
Parameter(GanttGraphicArea,paintTasks,fx1float,local);
Parameter(GanttGraphicArea,paintTasks,fx2float,local);
Parameter(GanttGraphicArea,paintTasks,g,Graphics,declaration);
Parameter(GanttGraphicArea,paintTasks,headeryint,local);
Parameter(GanttGraphicArea,paintTasks,percentint,local);
Parameter(GanttGraphicArea,paintTasks,sizexint,local);
Parameter(GanttGraphicArea,paintTasks,sizeyint,local);
Parameter(GanttGraphicArea,paintTasks,taskGanttTask,local);
Parameter(GanttGraphicArea,paintTasks,treeNodeDefaultMutableTreeNode,local);
Parameter(GanttGraphicArea,paintTasks,typeint,local);
Parameter(GanttGraphicArea,paintTasks,x1int,local);
Parameter(GanttGraphicArea,paintTasks,x2int,local);
Parameter(GanttGraphicArea,paintTasks,yint,local);
Parameter(GanttGraphicArea,printProject,imageBufferedImage,local);
Parameter(GanttGraphicArea,printProject,printJobPrinterJob,local);
Parameter(GanttGraphicArea,printProject,settings,GanttExportSettings,declaration);
Parameter(GanttGraphicArea,printTask,child,ArrayList,declaration);
Parameter(GanttGraphicArea,printTask,g,Graphics,declaration);
Parameter(GanttGraphicArea,printTask,nextTask,local);
Parameter(GanttGraphicArea,printTask,nextTreeNodeDefaultMutableTreeNode,local);
Parameter(GanttGraphicArea,printTask,x,int,declaration);
Parameter(GanttGraphicArea,printTask,y,int,declaration);
Parameter(GanttGraphicArea,printTasks,g,Graphics,declaration);
Parameter(GanttGraphicArea,setDate,d,GanttCalendar,declaration);
Parameter(GanttGraphicArea,setDraw,d,boolean,declaration);
Parameter(GanttGraphicArea,setProjectLevelTaskColor,c,Color,declaration);
Parameter(GanttGraphicArea,setScrollBar,v,int,declaration);
Parameter(GanttGraphicArea,setString,s,String,declaration);
Parameter(GanttGraphicArea,setTaskToMove,index,int,declaration);
Parameter(GanttGraphicArea,setTaskToMove,paramGanttPaintParam,local);
Parameter(GanttGraphicArea,setX,x,int,declaration);
Parameter(GanttGraphicArea,setZoom,z,int,declaration);
Parameter(GanttGraphicArea,taskScheduleChanged,e,TaskScheduleEvent,declaration);
Parameter(GanttGraphicArea,zoomToBegin,dString,local);
Parameter(GanttHTMLExport,save,area,GanttGraphicArea,declaration);
Parameter(GanttPDFExport,save,area,GanttGraphicArea,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,gra,GanttGraphicArea,declaration);
Parameter(GanttTree,setGraphicArea,area,GanttGraphicArea,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,area,GanttGraphicArea,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,gra,GanttGraphicArea,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,area,GanttGraphicArea,declaration);
Relation(GanttGraphicArea;GanttGraphicArea;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;GanttGraphicArea;addMouseListener,Component,MouseListener);
Relation(GanttGraphicArea;GanttGraphicArea;addMouseMotionListener,Component,MouseMotionListener);
Relation(GanttGraphicArea;GanttGraphicArea;addMouseWheelListener,Component,MouseWheelListener);
Relation(GanttGraphicArea;GanttGraphicArea;addTaskListener,TaskManager,TaskListener);
Relation(GanttGraphicArea;GanttGraphicArea;adjustDependencies,,Task);
Relation(GanttGraphicArea;GanttGraphicArea;changePoint2,Arrow,int-int);
Relation(GanttGraphicArea;GanttGraphicArea;checkDepend,GanttTree,Task-GanttTask);
Relation(GanttGraphicArea;GanttGraphicArea;createCustomCursor,Toolkit,Image-Point-String);
Relation(GanttGraphicArea;GanttGraphicArea;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttGraphicArea;GanttGraphicArea;createPopupMenu,GanttTree,int-int-boolean);
Relation(GanttGraphicArea;GanttGraphicArea;detectPosition,GanttGraphicArea,int-int-boolean);
Relation(GanttGraphicArea;GanttGraphicArea;forwardScheduling,GanttTree,N);
Relation(GanttGraphicArea;GanttGraphicArea;get,ArrayList,int);
Relation(GanttGraphicArea;GanttGraphicArea;getAlgorithmCollection,TaskManager,N);
Relation(GanttGraphicArea;GanttGraphicArea;getButton,MouseEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getClass,Object,N);
Relation(GanttGraphicArea;GanttGraphicArea;getClassLoader,Class<>,N);
Relation(GanttGraphicArea;GanttGraphicArea;getClickCount,MouseEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDefaultToolkit,Toolkit,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDependee,TaskDependency,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDependency,TaskDependencyEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDependencyCollection,TaskManager,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDragTime,GanttOptions,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDraw,Arrow,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDuration,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getEnd,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;getImage,Toolkit,URL);
Relation(GanttGraphicArea;GanttGraphicArea;getLength,GanttTask,N);
Relation(GanttGraphicArea;GanttGraphicArea;getLocation,Component,N);
Relation(GanttGraphicArea;GanttGraphicArea;getOptions,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;getRecalculateTaskScheduleAlgorithm,AlgorithmCollection,N);
Relation(GanttGraphicArea;GanttGraphicArea;getResource,ClassLoader,String);
Relation(GanttGraphicArea;GanttGraphicArea;getResourcePanel,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;getSource,EventObject,N);
Relation(GanttGraphicArea;GanttGraphicArea;getStart,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;getTask,TaskManager,int);
Relation(GanttGraphicArea;GanttGraphicArea;getTaskManager,GanttGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;getWheelRotation,MouseWheelEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getWidth,JComponent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getX,MouseEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getX,Point,N);
Relation(GanttGraphicArea;GanttGraphicArea;getY,MouseEvent,N);
Relation(GanttGraphicArea;GanttGraphicArea;getY,Point,N);
Relation(GanttGraphicArea;GanttGraphicArea;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;GanttGraphicArea;isMilestone,TaskImpl,N);
Relation(GanttGraphicArea;GanttGraphicArea;isRunning,RecalculateTaskScheduleAlgorithm,N);
Relation(GanttGraphicArea;GanttGraphicArea;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;GanttGraphicArea;printStackTrace,Throwable,N);
Relation(GanttGraphicArea;GanttGraphicArea;propertiesTask,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;repaint,Component,N);
Relation(GanttGraphicArea;GanttGraphicArea;run,RecalculateTaskScheduleAlgorithm,Task);
Relation(GanttGraphicArea;GanttGraphicArea;selectTreeRow,GanttTree,int);
Relation(GanttGraphicArea;GanttGraphicArea;setAskForSave,GanttProject,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;setCompletionPercentage,TaskImpl,int);
Relation(GanttGraphicArea;GanttGraphicArea;setCursor,Component,Cursor);
Relation(GanttGraphicArea;GanttGraphicArea;setDay,GanttCalendar,int);
Relation(GanttGraphicArea;GanttGraphicArea;setDraw,Arrow,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;setDraw,Notes,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;setDuration,TaskImpl,TaskLength);
Relation(GanttGraphicArea;GanttGraphicArea;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttGraphicArea;GanttGraphicArea;setLength,GanttTask,int);
Relation(GanttGraphicArea;GanttGraphicArea;setStart,TaskImpl,GanttCalendar);
Relation(GanttGraphicArea;GanttGraphicArea;setString,Notes,String);
Relation(GanttGraphicArea;GanttGraphicArea;setTaskToMove,GanttGraphicArea,int);
Relation(GanttGraphicArea;GanttGraphicArea;setX,Notes,int);
Relation(GanttGraphicArea;GanttGraphicArea;setZoom,ResourceLoadGraphicArea,int);
Relation(GanttGraphicArea;GanttGraphicArea;size,ArrayList,N);
Relation(GanttGraphicArea;GanttGraphicArea;toString,GanttCalendar,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomLess,GanttGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomLess,ResourceLoadGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomMore,GanttGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomMore,ResourceLoadGraphicArea,N);
Relation(GanttGraphicArea;GanttGraphicArea;zoomToBegin,GanttGraphicArea,N);
Relation(GanttGraphicArea;NgetInstance,GanttLanguage,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;add,GanttCalendar,int);
Relation(GanttGraphicArea;calcProjectBegAndEnd;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;calcProjectBegAndEnd;get,ArrayList,int);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getEnd,Task,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getResourcePanel,GanttProject,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getStart,Task,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;isRoot,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;calcProjectBegAndEnd;size,ArrayList,N);
Relation(GanttGraphicArea;changeDate2;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;changeDate;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;detectPosition;get,ArrayList,int);
Relation(GanttGraphicArea;detectPosition;getCompletionPercentage,TaskImpl,N);
Relation(GanttGraphicArea;detectPosition;getEnd,TaskImpl,N);
Relation(GanttGraphicArea;detectPosition;getStart,TaskImpl,N);
Relation(GanttGraphicArea;detectPosition;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;detectPosition;setDraw,Arrow,boolean);
Relation(GanttGraphicArea;detectPosition;setDraw,Notes,boolean);
Relation(GanttGraphicArea;detectPosition;setTaskToMove,GanttGraphicArea,int);
Relation(GanttGraphicArea;detectPosition;size,ArrayList,N);
Relation(GanttGraphicArea;detectPosition;toString,GanttCalendar,N);
Relation(GanttGraphicArea;drawGPVersion;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;drawGPVersion;getHeight,JComponent,N);
Relation(GanttGraphicArea;drawGPVersion;setColor,Graphics,Color);
Relation(GanttGraphicArea;drawGPVersion;setFont,Graphics,Font);
Relation(GanttGraphicArea;drawVerticalLinedash;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;export;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttGraphicArea;export;println,PrintStream,Object);
Relation(GanttGraphicArea;export;write,ImageIO,RenderedImage-String-File);
Relation(GanttGraphicArea;export;write,ImageIO,RenderedImage-String-OutputStream);
Relation(GanttGraphicArea;fitWholeProject;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;fitWholeProject;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;fitWholeProject;diff,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;fitWholeProject;equals,String,Object);
Relation(GanttGraphicArea;fitWholeProject;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;fitWholeProject;getEnd,Task,N);
Relation(GanttGraphicArea;fitWholeProject;getSize,Component,N);
Relation(GanttGraphicArea;fitWholeProject;getStart,Task,N);
Relation(GanttGraphicArea;fitWholeProject;getTree,GanttGraphicArea,N);
Relation(GanttGraphicArea;fitWholeProject;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;fitWholeProject;hasNext,Iterator,N);
Relation(GanttGraphicArea;fitWholeProject;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;fitWholeProject;iterator,ArrayList,N);
Relation(GanttGraphicArea;fitWholeProject;next,Iterator,N);
Relation(GanttGraphicArea;fitWholeProject;setDate,GanttGraphicArea,GanttCalendar);
Relation(GanttGraphicArea;fitWholeProject;setScrollBar,GanttGraphicArea,int);
Relation(GanttGraphicArea;fitWholeProject;setSize,Component,int-int);
Relation(GanttGraphicArea;fitWholeProject;setZoom,GanttGraphicArea,int);
Relation(GanttGraphicArea;fitWholeProject;toString,Object,N);
Relation(GanttGraphicArea;fitWholeProject;zoomToBegin,GanttGraphicArea,N);
Relation(GanttGraphicArea;getChart;calcProjectBegAndEnd,GanttGraphicArea,N);
Relation(GanttGraphicArea;getChart;changeDate,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;getChart;changeDate2,GanttGraphicArea,GanttCalendar);
Relation(GanttGraphicArea;getChart;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;getChart;drawGPVersion,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;getChart;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(GanttGraphicArea;getChart;equals,String,Object);
Relation(GanttGraphicArea;getChart;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;getChart;getFontMetrics,Graphics,Font);
Relation(GanttGraphicArea;getChart;getGraphics,BufferedImage,N);
Relation(GanttGraphicArea;getChart;getHeight,JComponent,N);
Relation(GanttGraphicArea;getChart;getName,Task,N);
Relation(GanttGraphicArea;getChart;getSize,Component,N);
Relation(GanttGraphicArea;getChart;getTree,GanttGraphicArea,N);
Relation(GanttGraphicArea;getChart;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;getChart;getWidth,JComponent,N);
Relation(GanttGraphicArea;getChart;hasNext,Iterator,N);
Relation(GanttGraphicArea;getChart;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;getChart;iterator,ArrayList,N);
Relation(GanttGraphicArea;getChart;next,Iterator,N);
Relation(GanttGraphicArea;getChart;paintComponent,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;getChart;printTasks,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;getChart;repaint,Component,N);
Relation(GanttGraphicArea;getChart;setSize,Component,int-int);
Relation(GanttGraphicArea;getChart;size,ArrayList,N);
Relation(GanttGraphicArea;getChart;stringWidth,FontMetrics,String);
Relation(GanttGraphicArea;getChart;toString,Object,N);
Relation(GanttGraphicArea;getChart;translate,Graphics,int-int);
Relation(GanttGraphicArea;getChart;zoomToBegin,GanttGraphicArea,N);
Relation(GanttGraphicArea;getFoot;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;getActualMaximum,GregorianCalendar,int);
Relation(GanttGraphicArea;getGranit;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;getGranit;go,GanttCalendar,int-int);
Relation(GanttGraphicArea;getGranit;goNextMonth,GanttCalendar,N);
Relation(GanttGraphicArea;getTaskColor;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;indexOf;hasNext,Iterator,N);
Relation(GanttGraphicArea;indexOf;iterator,ArrayList,N);
Relation(GanttGraphicArea;indexOf;next,Iterator,N);
Relation(GanttGraphicArea;isVisible;getExpand,Task,N);
Relation(GanttGraphicArea;isVisible;getFatherNode,GanttTree,Task);
Relation(GanttGraphicArea;isVisible;getParent,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;isVisible;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;paint;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paint;drawRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paint;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;paint;fillPolygon,Graphics,int[]-int[]-int);
Relation(GanttGraphicArea;paint;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paint;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintATaskBilan;drawPolygon,Graphics,int[]-int[]-int);
Relation(GanttGraphicArea;paintATaskBilan;equals,Color,Object);
Relation(GanttGraphicArea;paintATaskBilan;fillPolygon,Graphics,int[]-int[]-int);
Relation(GanttGraphicArea;paintATaskBilan;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskBilan;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;paintATaskBilan;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintATaskBilan;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskBilan;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintATaskBilan;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintATaskBilan;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintATaskChild;colorDefined,TaskImpl,N);
Relation(GanttGraphicArea;paintATaskChild;drawRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintATaskChild;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintATaskChild;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskChild;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintATaskChild;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskChild;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintATaskChild;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintATaskChild;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintATaskFather;equals,Color,Object);
Relation(GanttGraphicArea;paintATaskFather;fillPolygon,Graphics,int[]-int[]-int);
Relation(GanttGraphicArea;paintATaskFather;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintATaskFather;getColor,Task,N);
Relation(GanttGraphicArea;paintATaskFather;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintATaskFather;getTaskColor,UIConfiguration,N);
Relation(GanttGraphicArea;paintATaskFather;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintATaskFather;paintResources,GanttGraphicArea,int-int-Task-Graphics);
Relation(GanttGraphicArea;paintATaskFather;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintAdvancement;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;paintAdvancement;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintAdvancement;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintAdvancement;setPaint,Graphics2D,Paint);
Relation(GanttGraphicArea;paintCalendar1;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;add,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar1;calcProjectBegAndEnd,GanttGraphicArea,N);
Relation(GanttGraphicArea;paintCalendar1;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintCalendar1;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintCalendar1;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;paintCalendar1;drawVerticalLinedash,GanttGraphicArea,Graphics-int-int-int-int);
Relation(GanttGraphicArea;paintCalendar1;equals,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintCalendar1;equals,String,Object);
Relation(GanttGraphicArea;paintCalendar1;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintCalendar1;getDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getDay,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar1;getFoot,GanttGraphicArea,N);
Relation(GanttGraphicArea;paintCalendar1;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;paintCalendar1;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintCalendar1;getMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getMonth,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar1;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintCalendar1;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getdayMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;getdayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar1;isRedlineOn,UIConfiguration,N);
Relation(GanttGraphicArea;paintCalendar1;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar1;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintCalendar1;setFont,Graphics,Font);
Relation(GanttGraphicArea;paintCalendar1;toString,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2;paintCalendar2Old,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintCalendar2New;getChartHeader,ChartModel,N);
Relation(GanttGraphicArea;paintCalendar2New;getInstance,Calendar,N);
Relation(GanttGraphicArea;paintCalendar2New;getSize,Component,N);
Relation(GanttGraphicArea;paintCalendar2New;getTime,Calendar,N);
Relation(GanttGraphicArea;paintCalendar2New;paint,ChartHeader,Graphics);
Relation(GanttGraphicArea;paintCalendar2New;setBottomTimeUnit,ChartModel,TimeUnit);
Relation(GanttGraphicArea;paintCalendar2New;setBottomUnitWidth,ChartModel,int);
Relation(GanttGraphicArea;paintCalendar2New;setBounds,ChartModel,Dimension);
Relation(GanttGraphicArea;paintCalendar2New;setStartDate,ChartModel,Date);
Relation(GanttGraphicArea;paintCalendar2New;setTopTimeUnit,ChartModel,TimeUnit);
Relation(GanttGraphicArea;paintCalendar2Old;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;add,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar2Old;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintCalendar2Old;drawRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintCalendar2Old;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;paintCalendar2Old;equals,String,Object);
Relation(GanttGraphicArea;paintCalendar2Old;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintCalendar2Old;getDate,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getDay,GanttLanguage,int);
Relation(GanttGraphicArea;paintCalendar2Old;getFoot,GanttGraphicArea,N);
Relation(GanttGraphicArea;paintCalendar2Old;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;paintCalendar2Old;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintCalendar2Old;getMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getNumberOfDay,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getText,GanttLanguage,String);
Relation(GanttGraphicArea;paintCalendar2Old;getWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintCalendar2Old;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getdayMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;getdayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;goNextMonth,GanttCalendar,N);
Relation(GanttGraphicArea;paintCalendar2Old;length,String,N);
Relation(GanttGraphicArea;paintCalendar2Old;newAdd,GanttCalendar,int);
Relation(GanttGraphicArea;paintCalendar2Old;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintCalendar2Old;setFont,Graphics,Font);
Relation(GanttGraphicArea;paintCalendar2Old;substring,String,int-int);
Relation(GanttGraphicArea;paintCalendar2Old;toString,Integer,N);
Relation(GanttGraphicArea;paintComponent;drawGPVersion,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintComponent;getAllTasks,GanttTree,N);
Relation(GanttGraphicArea;paintComponent;paint,Arrow,Graphics);
Relation(GanttGraphicArea;paintComponent;paint,Notes,Graphics);
Relation(GanttGraphicArea;paintComponent;paintCalendar1,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintComponent;paintCalendar2,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintComponent;paintDepend,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintComponent;paintTasks,GanttGraphicArea,Graphics);
Relation(GanttGraphicArea;paintDepend;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;paintDepend;fillPolygon,Graphics,int[]-int[]-int);
Relation(GanttGraphicArea;paintDepend;get,ArrayList,int);
Relation(GanttGraphicArea;paintDepend;getRelationshipType,GanttTaskRelationship,N);
Relation(GanttGraphicArea;paintDepend;getSuccessorTask,GanttTaskRelationship,N);
Relation(GanttGraphicArea;paintDepend;getSuccessorsOld,GanttTask,N);
Relation(GanttGraphicArea;paintDepend;getTaskID,Task,N);
Relation(GanttGraphicArea;paintDepend;getTaskID,TaskImpl,N);
Relation(GanttGraphicArea;paintDepend;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;paintDepend;hasNext,Iterator,N);
Relation(GanttGraphicArea;paintDepend;indexOf,GanttGraphicArea,ArrayList-int);
Relation(GanttGraphicArea;paintDepend;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;paintDepend;iterator,ArrayList,N);
Relation(GanttGraphicArea;paintDepend;iterator,Vector,N);
Relation(GanttGraphicArea;paintDepend;next,Iterator,N);
Relation(GanttGraphicArea;paintDepend;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintResources;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;paintResources;getAssignments,Task,N);
Relation(GanttGraphicArea;paintResources;getName,ProjectResource,N);
Relation(GanttGraphicArea;paintResources;getResource,ResourceAssignment,N);
Relation(GanttGraphicArea;paintResources;setColor,Graphics,Color);
Relation(GanttGraphicArea;paintTasks;add,ArrayList,Object);
Relation(GanttGraphicArea;paintTasks;clear,ArrayList,N);
Relation(GanttGraphicArea;paintTasks;compareTo,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintTasks;computePercentComplete,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;paintTasks;diff,GanttCalendar,GanttCalendar);
Relation(GanttGraphicArea;paintTasks;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;paintTasks;getChartMainFont,UIConfiguration,N);
Relation(GanttGraphicArea;paintTasks;getColor,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getCompletionPercentage,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getGranit,GanttGraphicArea,boolean);
Relation(GanttGraphicArea;paintTasks;getHeight,JComponent,N);
Relation(GanttGraphicArea;paintTasks;getLength,GanttTask,N);
Relation(GanttGraphicArea;paintTasks;getName,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getShape,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getStart,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getTaskID,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;paintTasks;getWidth,JComponent,N);
Relation(GanttGraphicArea;paintTasks;hasNext,Iterator,N);
Relation(GanttGraphicArea;paintTasks;isMilestone,TaskImpl,N);
Relation(GanttGraphicArea;paintTasks;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;paintTasks;iterator,ArrayList,N);
Relation(GanttGraphicArea;paintTasks;next,Iterator,N);
Relation(GanttGraphicArea;paintTasks;paintATaskBilan,GanttGraphicArea,Graphics-int-int-Task);
Relation(GanttGraphicArea;paintTasks;paintATaskChild,GanttGraphicArea,Graphics-int-int-int-Task);
Relation(GanttGraphicArea;paintTasks;paintATaskFather,GanttGraphicArea,Graphics-int-int-int-Task);
Relation(GanttGraphicArea;paintTasks;paintAdvancement,GanttGraphicArea,Graphics-int-int-int-int-ShapePaint-Color-boolean);
Relation(GanttGraphicArea;paintTasks;setFont,Graphics,Font);
Relation(GanttGraphicArea;paintTasks;size,ArrayList,N);
Relation(GanttGraphicArea;printProject;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttGraphicArea;printProject;getPrinterJob,PrinterJob,N);
Relation(GanttGraphicArea;printProject;print,PrinterJob,N);
Relation(GanttGraphicArea;printProject;printDialog,PrinterJob,N);
Relation(GanttGraphicArea;printProject;printStackTrace,Throwable,N);
Relation(GanttGraphicArea;printProject;println,PrintStream,String);
Relation(GanttGraphicArea;printProject;setPrintable,PrinterJob,Printable);
Relation(GanttGraphicArea;printTask;drawLine,Graphics,int-int-int-int);
Relation(GanttGraphicArea;printTask;drawRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;printTask;drawString,Graphics,String-int-int);
Relation(GanttGraphicArea;printTask;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;printTask;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;printTask;getChildCount,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;printTask;getName,Task,N);
Relation(GanttGraphicArea;printTask;getTree,GanttGraphicArea,N);
Relation(GanttGraphicArea;printTask;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttGraphicArea;printTask;getWidth,JComponent,N);
Relation(GanttGraphicArea;printTask;hasNext,Iterator,N);
Relation(GanttGraphicArea;printTask;isVisible,GanttGraphicArea,Task);
Relation(GanttGraphicArea;printTask;iterator,ArrayList,N);
Relation(GanttGraphicArea;printTask;next,Iterator,N);
Relation(GanttGraphicArea;printTask;printTask,GanttGraphicArea,Graphics-int-int-ArrayList);
Relation(GanttGraphicArea;printTask;setColor,Graphics,Color);
Relation(GanttGraphicArea;printTasks;fillRect,Graphics,int-int-int-int);
Relation(GanttGraphicArea;printTasks;getAllChildTask,GanttTree,DefaultMutableTreeNode);
Relation(GanttGraphicArea;printTasks;getChartMainFont,UIConfiguration,N);
Relation(GanttGraphicArea;printTasks;getHeight,JComponent,N);
Relation(GanttGraphicArea;printTasks;getRoot,GanttTree,N);
Relation(GanttGraphicArea;printTasks;getTree,GanttGraphicArea,N);
Relation(GanttGraphicArea;printTasks;getWidth,JComponent,N);
Relation(GanttGraphicArea;printTasks;printTask,GanttGraphicArea,Graphics-int-int-ArrayList);
Relation(GanttGraphicArea;printTasks;setColor,Graphics,Color);
Relation(GanttGraphicArea;printTasks;setFont,Graphics,Font);
Relation(GanttGraphicArea;setTaskToMove;get,ArrayList,int);
Relation(GanttGraphicArea;setTaskToMove;getTask,TaskManager,int);
Relation(GanttGraphicArea;setTaskToMove;getTaskManager,GanttGraphicArea,N);
Relation(GanttGraphicArea;zoomLess;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;zoomLess;getYear,GanttCalendar,N);
Relation(GanttGraphicArea;zoomMore;Clone,GanttCalendar,N);
Relation(GanttGraphicArea;zoomToBegin;add,GanttCalendar,int);
Relation(GanttGraphicArea;zoomToBegin;equals,String,Object);
Relation(GanttGraphicArea;zoomToBegin;getDay,GanttLanguage,int);
Relation(GanttGraphicArea;zoomToBegin;getDayWeek,GanttCalendar,N);
Relation(GanttGraphicArea;zoomToBegin;setDay,GanttCalendar,int);
Relation(GanttGraphicArea;zoomToBegin;setMonth,GanttCalendar,int);
Relation(GanttHTMLExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttPDFExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttProject;GanttProject;setGraphicArea,GanttTree,GanttGraphicArea);
Relation(GanttProject;addButtons;changeDate,GanttGraphicArea,boolean);
Relation(GanttProject;addButtons;getZoom,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomLess,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomMore,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomToBegin,GanttGraphicArea,N);
Relation(GanttProject;closeProject;setProjectLevelTaskColor,GanttGraphicArea,Color);
Relation(GanttProject;doExport;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;newTask;getTaskColor,GanttGraphicArea,N);
Relation(GanttProject;openDocument;getZoom,GanttGraphicArea,N);
Relation(GanttProject;previewPrint;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;printProject;printProject,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;setResourcePanelToGraphicArea;getDate,GanttGraphicArea,N);
Relation(GanttProject;setResourcePanelToGraphicArea;getZoom,GanttGraphicArea,N);
Relation(GanttTXTOpen;load;getTaskColor,GanttGraphicArea,N);
Relation(GanttTree;adjustmentValueChanged;setScrollBar,GanttGraphicArea,int);
Relation(GanttTree;createPopupMenu;getScrollBar,GanttGraphicArea,N);
Relation(GanttXMLOpen;startElement;setDate,GanttGraphicArea,GanttCalendar);
Relation(GanttXMLOpen;startElement;setProjectLevelTaskColor,GanttGraphicArea,Color);
Relation(GanttXMLOpen;startElement;setZoom,GanttGraphicArea,int);
Relation(GanttXMLSaver;_save;getTaskColor,GanttGraphicArea,N);
Relation(GanttXMLSaver;save;getDate,GanttGraphicArea,N);
Relation(GanttXMLSaver;save;getZoom,GanttGraphicArea,N);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setZoom,GanttGraphicArea,int);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomLess,GanttGraphicArea,N);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;zoomMore,GanttGraphicArea,N);
Relation(ResourceLoadGraphicArea;getChart;calcProjectBegAndEnd,GanttGraphicArea,N);
end b238
start b239
Attribute(AlgorithmCollection,myFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,N,private);
Class(FindPossibleDependeesAlgorithm,N,N,public);
Method(AlgorithmCollection,getFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,N,N,N,public);
Method(FindPossibleDependeesAlgorithm,run,Task[],Y,N,N,package);
Parameter(AlgorithmCollection,AlgorithmCollection,myFindPossibleDependeesAlgorithm,FindPossibleDependeesAlgorithm,declaration);
Parameter(FindPossibleDependeesAlgorithm,run,dependant,Task,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg1FindPossibleDependeesAlgorithm,local);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;run,FindPossibleDependeesAlgorithm,Task);
end b239
start b240
Attribute(AlgorithmBase,isEnabled,boolean,N,protected);
Class(AlgorithmBase,N,N,public);
Generalisation(AdjustTaskBoundsAlgorithm,AlgorithmBase);
Generalisation(RecalculateTaskScheduleAlgorithm,AlgorithmBase);
Method(AlgorithmBase,isEnabled,boolean,N,N,N,protected);
Method(AlgorithmBase,setEnabled,void,Y,N,N,public);
Parameter(AlgorithmBase,setEnabled,enabled,boolean,declaration);
Relation(AdjustTaskBoundsAlgorithm;run;isEnabled,AlgorithmBase,N);
Relation(GanttXMLOpen;load;setEnabled,AlgorithmBase,boolean);
Relation(RecalculateTaskScheduleAlgorithm;run;isEnabled,AlgorithmBase,N);
end b240
start b241
Attribute(ChartModelImpl,myBottomUnit,TimeUnit,N,private);
Attribute(ChartModelImpl,myTopUnit,TimeUnit,N,private);
Attribute(GregorianTimeUnitStack,ATOM_UNIT,TimeUnit,static,private);
Attribute(GregorianTimeUnitStack,DAY,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,HOUR,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,MINUTE,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,SECOND,TimeUnit,static,public);
Attribute(GregorianTimeUnitStack,myBottomUnit,TimeUnit,N,private);
Attribute(GregorianTimeUnitStack,myTopUnit,TimeUnit,N,private);
Attribute(GregorianTimeUnitStack,myUnit,TimeUnit,N,package);
Attribute(TaskLengthImpl,myUnit,TimeUnit,N,private);
Attribute(TimeUnit,DAY,int,N,public);
Attribute(TimeUnitGraph,myAtom,TimeUnit,N,package);
Attribute(TimeUnitImpl,myDirectAtomUnit,TimeUnit,N,private);
Class(TimeUnit,N,N,public);
Method(GregorianTimeUnitStack,getBottomUnit,TimeUnit,N,N,N,public);
Method(GregorianTimeUnitStack,getTopUnit,TimeUnit,N,N,N,public);
Method(TaskLength,getTimeUnit,TimeUnit,N,N,N,package);
Method(TaskLengthImpl,getTimeUnit,TimeUnit,N,N,N,public);
Method(TimeFrame,getBottomUnit,TimeUnit,N,N,N,package);
Method(TimeFrame,getTopUnit,TimeUnit,N,N,N,package);
Method(TimeUnit,format,String,Y,N,N,public);
Method(TimeUnit,getAtomCount,int,Y,N,N,public);
Method(TimeUnit,getDirectAtomUnit,TimeUnit,N,N,N,public);
Method(TimeUnit,getName,String,N,N,N,public);
Method(TimeUnit,isConstructedFrom,boolean,Y,N,N,public);
Method(TimeUnit,setTextFormatter,void,Y,N,N,public);
Method(TimeUnitFunctionOfDate,createTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,createTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitFunctionOfDateImpl,getDirectAtomUnit,TimeUnit,N,N,N,public);
Method(TimeUnitGraph,createAtomTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitGraph,createDateFrameableTimeUnit,TimeUnit,Y,N,N,public);
Method(TimeUnitGraph,createTimeUnit,TimeUnit,Y,N,N,package);
Method(TimeUnitImpl,getDirectAtomUnit,TimeUnit,N,N,N,public);
Method(TimeUnitManager,getTimeUnit,TimeUnit,Y,N,N,package);
Method(TimeUnitManagerImpl,getTimeUnit,TimeUnit,Y,N,N,public);
Parameter(ChartModel,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(ChartModel,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Parameter(ChartModelImpl,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(ChartModelImpl,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Parameter(DayTextFormatter,format,timeUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,LineHeader,myUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,TimeFrameImpl,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,TimeFrameImpl,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateLines,curUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createHeader,unit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createTimeFrame,bottomUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,createTimeFrame,topUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getLineHeader,timeUnit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,higherUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,getUnitCount,lowerUnitTimeUnit,local);
Parameter(GregorianTimeUnitStack,getUnitCount,unit,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getUnitStart,unitLine,TimeUnit,declaration);
Parameter(GregorianTimeUnitStack,getUnitText,unitLine,TimeUnit,declaration);
Parameter(MonthTextFormatter,format,timeUnit,TimeUnit,declaration);
Parameter(TaskLength,getLength,unit,TimeUnit,declaration);
Parameter(TaskLengthImpl,TaskLengthImpl,unit,TimeUnit,declaration);
Parameter(TaskLengthImpl,getLength,unit,TimeUnit,declaration);
Parameter(TaskLengthImpl,setLength,unit,TimeUnit,declaration);
Parameter(TaskManager,createLength,unit,TimeUnit,declaration);
Parameter(TaskManagerImpl,createLength,unit,TimeUnit,declaration);
Parameter(TextFormatter,format,timeUnit,TimeUnit,declaration);
Parameter(TimeFrame,getUnitCount,unitLine,TimeUnit,declaration);
Parameter(TimeFrame,getUnitStart,unitLine,TimeUnit,declaration);
Parameter(TimeFrame,getUnitText,unitLine,TimeUnit,declaration);
Parameter(TimeUnit,format,baseDate,Date,declaration);
Parameter(TimeUnit,getAtomCount,atomUnit,TimeUnit,declaration);
Parameter(TimeUnit,isConstructedFrom,unit,TimeUnit,declaration);
Parameter(TimeUnit,setTextFormatter,formatter,TextFormatter,declaration);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,directAtomUnit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,getAtomCount,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitFunctionOfDateImpl,isConstructedFrom,unit,TimeUnit,declaration);
Parameter(TimeUnitGraph,Composition,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createAtomTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createTimeUnit,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,createTimeUnit,resultTimeUnit,local);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,getComposition,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitGraph,registerTimeUnit,atomUnitTimeUnit,local);
Parameter(TimeUnitGraph,registerTimeUnit,unit,TimeUnit,declaration);
Parameter(TimeUnitImpl,TimeUnitImpl,directAtomUnit,TimeUnit,declaration);
Parameter(TimeUnitImpl,getAtomCount,atomUnit,TimeUnit,declaration);
Parameter(TimeUnitImpl,isConstructedFrom,atomUnit,TimeUnit,declaration);
Relation(ChartHeaderImpl;createFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartHeaderImpl;createFrames;getUnitText,TimeFrame,TimeUnit-int);
Relation(ChartModelImpl;calculateTimeFrames;createTimeFrame,GregorianTimeUnitStack,Date-TimeUnit-TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(GanttGraphicArea;paintCalendar2New;setBottomTimeUnit,ChartModel,TimeUnit);
Relation(GanttGraphicArea;paintCalendar2New;setTopTimeUnit,ChartModel,TimeUnit);
Relation(GanttTask;GanttTask;createLength,TaskManager,TimeUnit-long);
Relation(GanttTask;setLength;createLength,TaskManager,TimeUnit-long);
Relation(GregorianTimeUnitStack;NcreateDateFrameableTimeUnit,TimeUnitGraph,String-TimeUnit-int-DateFrameable);
Relation(GregorianTimeUnitStack;NcreateTimeUnitFunctionOfDate,TimeUnitGraph,String-TimeUnit-DateFrameable);
Relation(GregorianTimeUnitStack;NsetTextFormatter,TimeUnit,TextFormatter);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateHighestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLowestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;isConstructedFrom,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;calculateEndDate;getAtomCount,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;calculateHighestFrameableUnit;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;calculateLines;createHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;calculateLines;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;calculateLowestFrameableUnit;getDirectAtomUnit,TimeUnit,N);
Relation(GregorianTimeUnitStack;getUnitCount;getAtomCount,TimeUnit,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitCount;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;format,TimeUnit,Date);
Relation(GregorianTimeUnitStack;getUnitText;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;getUnitText,TimeFrameImpl,TimeUnit-Date);
Relation(TaskImpl;setEnd;createLength,TaskManager,TimeUnit-long);
Relation(TaskLengthImpl;toString;getName,TimeUnit,N);
Relation(TaskManagerImpl;getRootTask;createLength,TaskManagerImpl,TimeUnit-long);
Relation(TimeUnitFunctionOfDateImpl;format;format,TextFormatter,TimeUnit-Date);
Relation(TimeUnitFunctionOfDateImpl;getAtomCount;getAtomCount,TimeUnit,TimeUnit);
Relation(TimeUnitFunctionOfDateImpl;isConstructedFrom;isConstructedFrom,TimeUnitImpl,TimeUnit);
Relation(TimeUnitGraph;createDateFrameableTimeUnit;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;createTimeUnit;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;createTimeUnitFunctionOfDate;registerTimeUnit,TimeUnitGraph,TimeUnit-int);
Relation(TimeUnitGraph;registerTimeUnit;getDirectAtomUnit,TimeUnit,N);
Relation(TimeUnitImpl;format;format,TextFormatter,TimeUnit-Date);
Relation(TimeUnitImpl;getAtomCount;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
Relation(TimeUnitImpl;isConstructedFrom;getComposition,TimeUnitGraph,TimeUnitImpl-TimeUnit);
end b241
start b242
Attribute(FontRecord,myTTFFile,TTFFileExt,N,private);
Attribute(TTFFileExt,myAwtFont,Font,N,private);
Attribute(TTFFileExt,myFile,File,N,private);
Class(TTFFileExt,N,N,package);
Generalisation(TTFFileExt,TTFFile);
Method(FontRecord,getTTFFile,TTFFileExt,N,N,N,public);
Method(TTFFileExt,TTFFileExt,N,Y,N,N,package);
Method(TTFFileExt,getAwtFont,Font,N,N,N,private);
Method(TTFFileExt,getFile,File,N,N,N,public);
Method(TTFFileExt,isBold,boolean,N,N,N,public);
Method(TTFFileExt,isItalic,boolean,N,N,N,public);
Parameter(FontMetricsStorage,getFontMetricsURI,ttfFile,TTFFileExt,declaration);
Parameter(JDKFontLocator,populateWithTriplets,ttfFileTTFFileExt,local);
Parameter(TTFFileExt,TTFFileExt,file,File,declaration);
Parameter(TTFFileExt,TTFFileExt,readerFontFileReader,local);
Relation(FontMetricsStorage;getFontMetricsURI;getFile,TTFFileExt,N);
Relation(FontRecord;FontRecord;getFontMetricsURI,FontMetricsStorage,TTFFileExt);
Relation(JDKFontLocator;populateWithTriplets;isBold,TTFFileExt,N);
Relation(JDKFontLocator;populateWithTriplets;isItalic,TTFFileExt,N);
Relation(TTFFileExt;TTFFileExt;exists,File,N);
Relation(TTFFileExt;TTFFileExt;getAbsolutePath,File,N);
Relation(TTFFileExt;TTFFileExt;getCanonicalPath,File,N);
Relation(TTFFileExt;TTFFileExt;println,PrintStream,String);
Relation(TTFFileExt;TTFFileExt;readFont,TTFFile,FontFileReader);
Relation(TTFFileExt;getAwtFont;createFont,Font,int-InputStream);
Relation(TTFFileExt;getAwtFont;getFile,TTFFileExt,N);
Relation(TTFFileExt;getAwtFont;printStackTrace,Throwable,N);
Relation(TTFFileExt;isBold;getAwtFont,TTFFileExt,N);
Relation(TTFFileExt;isBold;isBold,Font,N);
Relation(TTFFileExt;isItalic;getItalicAngle,TTFFile,N);
Relation(TTFFileExt;isItalic;parseInt,Integer,String);
end b242
start b243
Attribute(TaskManagerImpl,myConfig,TaskManagerConfig,N,private);
Class(TaskManagerConfig,N,N,public);
Method(TaskManagerConfig,getDefaultColor,Color,N,N,N,package);
Method(TaskManagerImpl,getConfig,TaskManagerConfig,N,N,N,public);
Parameter(GanttProject,GanttProject,taskConfigTaskManagerConfig,local);
Parameter(TaskManager,newInstance,config,TaskManagerConfig,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,config,TaskManagerConfig,declaration);
Relation(GanttProject;GanttProject;newInstance,Access,Factory-TaskManagerConfig);
Relation(TaskImpl;getColor;getDefaultColor,TaskManagerConfig,N);
end b243
start b244
Class(ResourceAssignmentMutatorImpl,N,N,private);
end b244
start b245
Class(GanttXFIGFileFilter,N,N,public);
Generalisation(GanttXFIGFileFilter,FileFilter);
Method(GanttXFIGFileFilter,accept,boolean,Y,N,N,public);
Method(GanttXFIGFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttXFIGFileFilter,accept,f,File,declaration);
Relation(GanttXFIGFileFilter;accept;endsWith,String,String);
Relation(GanttXFIGFileFilter;accept;getName,File,N);
Relation(GanttXFIGFileFilter;accept;isDirectory,File,N);
Relation(GanttXFIGFileFilter;accept;toLowerCase,String,N);
Relation(GanttXFIGFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttXFIGFileFilter;getDescription;getText,GanttLanguage,String);
end b245
start b246
Class(BottomUnitGridBuilder,N,N,package);
Parameter(ChartHeaderImpl,createFrames,bottomUnitGridBuilderBottomUnitGridBuilder,local);
Relation(ChartHeaderImpl;createFrames;createBottomUnitGrid,BottomUnitGridBuilder,int-TimeFrame);
Relation(ChartHeaderImpl;createFrames;getWidth,BottomUnitGridBuilder,N);
end b246
start b247
Attribute(AllocationTagHandler,myResourceManager,ResourceManager,N,private);
Attribute(ImportResources,myResourceManager,ResourceManager,N,private);
Attribute(ResourceAction,myManager,ResourceManager,N,private);
Attribute(ResourceActionSet,myManager,ResourceManager,N,private);
Attribute(ResourceEvent,myManager,ResourceManager,N,private);
Attribute(ResourceTagHandler,myResourceManager,ResourceManager,N,private);
Class(ResourceManager,N,N,public);
Method(AllocationTagHandler,getResourceManager,ResourceManager,N,N,N,private);
Method(GanttProject,getHumanResourceManager,ResourceManager,N,N,N,public);
Method(IGanttProject,getHumanResourceManager,ResourceManager,N,N,N,package);
Method(ResourceAction,getManager,ResourceManager,N,N,N,protected);
Method(ResourceEvent,getManager,ResourceManager,N,N,N,public);
Method(ResourceManager,add,void,Y,N,N,public);
Method(ResourceManager,addView,void,Y,N,N,public);
Method(ResourceManager,clear,void,N,N,N,public);
Method(ResourceManager,create,ProjectResource,Y,N,N,public);
Method(ResourceManager,getById,ProjectResource,Y,N,N,public);
Method(ResourceManager,getResources,ArrayList,N,N,N,public);
Method(ResourceManager,remove,void,Y,N,N,public);
Method(ResourceManager,removeById,void,Y,N,N,public);
Method(ResourceManager,save,void,Y,N,N,public);
Method(ResourceTagHandler,getResourceManager,ResourceManager,N,N,N,private);
Parameter(AllocationTagHandler,AllocationTagHandler,resourceMgr,ResourceManager,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,hrManager,ResourceManager,declaration);
Parameter(GanttProject,getHumanResourceManager,resultResourceManager,local);
Parameter(GanttProject,importcbk,hrManagerResourceManager,local);
Parameter(GanttProject,openDocument,hrManagerResourceManager,local);
Parameter(GanttProject,openXMLStream,hrManagerResourceManager,local);
Parameter(ImportResources,ImportResources,resourceManager,ResourceManager,declaration);
Parameter(NewHumanAction,NewHumanAction,hrManager,ResourceManager,declaration);
Parameter(ResourceAction,ResourceAction,hrManager,ResourceManager,declaration);
Parameter(ResourceEvent,ResourceEvent,mgr,ResourceManager,declaration);
Parameter(ResourceLoadGraphicArea,getChart,resManResourceManager,local);
Parameter(ResourceLoadGraphicArea,printResources,resManResourceManager,local);
Parameter(ResourceManager,add,resource,ProjectResource,declaration);
Parameter(ResourceManager,addView,view,ResourceView,declaration);
Parameter(ResourceManager,create,i,int,declaration);
Parameter(ResourceManager,create,name,String,declaration);
Parameter(ResourceManager,getById,id,int,declaration);
Parameter(ResourceManager,remove,resource,ProjectResource,declaration);
Parameter(ResourceManager,removeById,Id,int,declaration);
Parameter(ResourceManager,save,target,OutputStream,declaration);
Parameter(ResourceTagHandler,ResourceTagHandler,resourceManager,ResourceManager,declaration);
Relation(AllocationTagHandler;loadAllocation;getById,ResourceManager,int);
Relation(DeleteHumanAction;deleteResources;remove,ResourceManager,ProjectResource);
Relation(GanttProject;addButtons;remove,ResourceManager,ProjectResource);
Relation(GanttProject;closeProject;clear,ResourceManager,N);
Relation(GanttProject;getHumanResourceManager;addView,ResourceManager,ResourceView);
Relation(GanttProject;openXMLStream;clear,ResourceManager,N);
Relation(NewHumanAction;actionPerformed;add,ResourceManager,ProjectResource);
Relation(ResourceLoadGraphicArea;getChart;getResources,ResourceManager,N);
Relation(ResourceLoadGraphicArea;printResources;getResources,ResourceManager,N);
Relation(ResourceTagHandler;ResourceTagHandler;clear,ResourceManager,N);
Relation(ResourceTagHandler;loadResource;create,ResourceManager,String-int);
end b247
start b248
Attribute(ConstraintImpl,myDependency,TaskDependency,N,private);
Attribute(TaskDependencyCollectionImpl,myDependency,TaskDependency,N,package);
Attribute(TaskDependencyEvent,myDependency,TaskDependency,N,private);
Class(TaskDependency,N,N,public);
Method(ConstraintImpl,getDependency,TaskDependency,N,N,N,protected);
Method(MutableTaskDependencyCollection,createDependency,TaskDependency,Y,N,N,package);
Method(TaskDependency,delete,void,N,N,N,package);
Method(TaskDependency,getConstraint,TaskDependencyConstraint,N,N,N,package);
Method(TaskDependency,getDependant,Task,N,N,N,package);
Method(TaskDependency,getDependee,Task,N,N,N,package);
Method(TaskDependency,setConstraint,void,Y,N,N,package);
Method(TaskDependencyCollectionImpl,auxCreateDependency,TaskDependency,Y,N,N,private);
Method(TaskDependencyCollectionImpl,createDependency,TaskDependency,Y,N,N,public);
Method(TaskDependencyEvent,getDependency,TaskDependency,N,N,N,public);
Parameter(ConstraintImpl,setTaskDependency,dependency,TaskDependency,declaration);
Parameter(DependencyTableModel,createDependency,depTaskDependency,local);
Parameter(DependencyTableModel,getValueAt,depTaskDependency,local);
Parameter(DependencyTableModel,updateDependency,depTaskDependency,local);
Parameter(DependencyTableModel,updateDependency,newDependencyTaskDependency,local);
Parameter(DependencyTagHandler,parsingFinished,depTaskDependency,local);
Parameter(EventDispatcher,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(EventDispatcher,fireDependencyRemoved,dep,TaskDependency,declaration);
Parameter(GanttTask,getPredecessorsOld,nextTaskDependency,local);
Parameter(GanttTask,getSuccessorsOld,nextTaskDependency,local);
Parameter(MutableTaskDependencyCollection,deleteDependency,dependency,TaskDependency,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,dependency,TaskDependency,declaration);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilConstraints,nextTaskDependency,local);
Parameter(RecalculateTaskScheduleAlgorithm,fulfilDependencies,nextDependencyTaskDependency,local);
Parameter(TaskDependency,setConstraint,constraint,TaskDependencyConstraint,declaration);
Parameter(TaskDependencyCollectionImpl,MutationInfo,myDependency,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,addDependency,dep,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,auxCreateDependency,resultTaskDependency,local);
Parameter(TaskDependencyCollectionImpl,createDependency,resultTaskDependency,local);
Parameter(TaskDependencyCollectionImpl,delete,dep,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,deleteDependency,dependency,TaskDependency,declaration);
Parameter(TaskDependencyConstraint,setTaskDependency,dependency,TaskDependency,declaration);
Parameter(TaskDependencyEvent,TaskDependencyEvent,dependency,TaskDependency,declaration);
Parameter(TaskDependencyImpl,equals,rvalueTaskDependency,local);
Parameter(TaskManagerImpl,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,newDependency,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyRemoved,dep,TaskDependency,declaration);
Relation(DependencyTableModel;getValueAt;getConstraint,TaskDependency,N);
Relation(DependencyTableModel;getValueAt;getDependee,TaskDependency,N);
Relation(DependencyTableModel;updateDependency;delete,TaskDependency,N);
Relation(DependencyTableModel;updateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(DependencyTagHandler;parsingFinished;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(FinishFinishConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(FinishFinishConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(FinishStartConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(FinishStartConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDependee,TaskDependency,N);
Relation(GanttTask;getPredecessorsOld;getConstraint,TaskDependency,N);
Relation(GanttTask;getPredecessorsOld;getDependee,TaskDependency,N);
Relation(GanttTask;getSuccessorsOld;getConstraint,TaskDependency,N);
Relation(GanttTask;getSuccessorsOld;getDependant,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;buildDistanceGraph;getDependant,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getConstraint,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilConstraints;getDependant,TaskDependency,N);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;fulfilConstraints,RecalculateTaskScheduleAlgorithm,TaskDependency);
Relation(RecalculateTaskScheduleAlgorithm;fulfilDependencies;getConstraint,TaskDependency,N);
Relation(StartFinishConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(StartFinishConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(StartStartConstraintImpl;getCollision;getDependant,TaskDependency,N);
Relation(StartStartConstraintImpl;getCollision;getDependee,TaskDependency,N);
Relation(TaskDependencyCollectionImpl;addDependency;fireDependencyAdded,EventDispatcher,TaskDependency);
Relation(TaskDependencyCollectionImpl;auxCreateDependency;setConstraint,TaskDependency,TaskDependencyConstraint);
Relation(TaskDependencyCollectionImpl;commit;addDependency,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;commit;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;createDependency;addDependency,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyCollectionImpl;delete;fireDependencyRemoved,EventDispatcher,TaskDependency);
Relation(TaskDependencyCollectionImpl;delete;getDependant,TaskDependency,N);
Relation(TaskDependencyCollectionImpl;delete;getDependee,TaskDependency,N);
Relation(TaskDependencyCollectionImpl;deleteDependency;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyImpl;delete;delete,TaskDependencyCollectionImpl,TaskDependency);
Relation(TaskDependencyImpl;equals;getDependant,TaskDependency,N);
Relation(TaskDependencyImpl;equals;getDependee,TaskDependency,N);
Relation(TaskDependencyImpl;setConstraint;setTaskDependency,TaskDependencyConstraint,TaskDependency);
Relation(TaskDependencySliceImpl;clear;delete,TaskDependency,N);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyAdded,TaskManagerImpl,TaskDependency);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyRemoved,TaskManagerImpl,TaskDependency);
end b248
start b249
Attribute(TopPanel,icon,Icon,N,package);
Class(TopPanel,N,N,public);
Generalisation(TopPanel,JPanel);
Method(TopPanel,TopPanel,N,Y,N,N,public);
Method(TopPanel,getPreferredSize,Dimension,N,N,N,public);
Method(TopPanel,myIconPanel,N,N,N,N,public);
Method(TopPanel,paint,void,Y,N,N,public);
Method(TopPanel,paintComponent,void,Y,N,N,public);
Parameter(TopPanel,TopPanel,comment,String,declaration);
Parameter(TopPanel,TopPanel,iWidthint,local);
Parameter(TopPanel,TopPanel,labelTitleJLabel,local);
Parameter(TopPanel,TopPanel,textAreaJTextArea,local);
Parameter(TopPanel,TopPanel,title,String,declaration);
Parameter(TopPanel,TopPanel,topPanelJPanel,local);
Parameter(TopPanel,TopPanel,vbBox,local);
Parameter(TopPanel,paint,g,Graphics,declaration);
Parameter(TopPanel,paintComponent,g,Graphics,declaration);
Parameter(WizardImpl,show,titlePanelTopPanel,local);
Relation(TopPanel;TopPanel;add,Container,Component);
Relation(TopPanel;TopPanel;add,Container,Component-Object);
Relation(TopPanel;TopPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(TopPanel;TopPanel;createVerticalBox,Box,N);
Relation(TopPanel;TopPanel;drawRect,Graphics,int-int-int-int);
Relation(TopPanel;TopPanel;getBackground,Component,N);
Relation(TopPanel;TopPanel;getComponentOrientation,GanttLanguage,N);
Relation(TopPanel;TopPanel;getFont,Component,N);
Relation(TopPanel;TopPanel;getFontName,Font,N);
Relation(TopPanel;TopPanel;getInstance,GanttLanguage,N);
Relation(TopPanel;TopPanel;getSize,Font,N);
Relation(TopPanel;TopPanel;setBackground,JComponent,Color);
Relation(TopPanel;TopPanel;setColor,Graphics,Color);
Relation(TopPanel;TopPanel;setDragEnabled,JTextComponent,boolean);
Relation(TopPanel;TopPanel;setEditable,JTextComponent,boolean);
Relation(TopPanel;TopPanel;setFont,JComponent,Font);
Relation(TopPanel;TopPanel;setLineWrap,JTextArea,boolean);
Relation(TopPanel;TopPanel;setMargin,JTextComponent,Insets);
Relation(TopPanel;TopPanel;setPreferredSize,JComponent,Dimension);
Relation(TopPanel;TopPanel;setWrapStyleWord,JTextArea,boolean);
Relation(TopPanel;myIconPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(TopPanel;myIconPanel;getClass,Object,N);
Relation(TopPanel;myIconPanel;getComponentOrientation,GanttLanguage,N);
Relation(TopPanel;myIconPanel;getInstance,GanttLanguage,N);
Relation(TopPanel;myIconPanel;getResource,Class<>,String);
Relation(TopPanel;paintComponent;paintIcon,Icon,Component-Graphics-int-int);
end b249
start b250
Attribute(RoleImpl,myRoleSet,RoleSet,N,private);
Attribute(RoleSet,DEFAULT,String,N,package);
Attribute(RoleSet,SOFTWARE_DEVELOPMENT,String,N,package);
Attribute(RoleTagHandler,myRoleSet,RoleSet,N,private);
Class(RoleSet,N,N,public);
Method(RoleManager,createRoleSet,RoleSet,Y,N,N,public);
Method(RoleManager,getProjectRoleSet,RoleSet,N,N,N,public);
Method(RoleManager,getRoleSet,RoleSet,Y,N,N,public);
Method(RoleManagerImpl,createRoleSet,RoleSet,Y,N,N,public);
Method(RoleManagerImpl,getProjectRoleSet,RoleSet,N,N,N,public);
Method(RoleManagerImpl,getRoleSet,RoleSet,Y,N,N,public);
Method(RoleSet,clear,void,N,N,N,package);
Method(RoleSet,createRole,Role,Y,N,N,package);
Method(RoleSet,deleteRole,void,Y,N,N,package);
Method(RoleSet,findRole,Role,Y,N,N,package);
Method(RoleSet,getName,String,N,N,N,package);
Method(RoleSet,getRoles,Role[],N,N,N,package);
Method(RoleSet,isEmpty,boolean,N,N,N,package);
Method(RoleSet,isEnabled,boolean,N,N,N,package);
Method(RoleSet,setEnabled,void,Y,N,N,package);
Parameter(GanttOptions,saveRoles,roleSet,RoleSet,declaration);
Parameter(GanttXMLSaver,saveRoles,nextRoleSet,local);
Parameter(GanttXMLSaver,saveRoles,projectRoleSetRoleSet,local);
Parameter(ResourceTagHandler,findRole,roleSetRoleSet,local);
Parameter(RoleImpl,RoleImpl,roleSet,RoleSet,declaration);
Parameter(RoleManagerImpl,clear,nextRoleSet,local);
Parameter(RoleManagerImpl,createRoleSet,resultRoleSet,local);
Parameter(RoleManagerImpl,getRoleSet,resultRoleSet,local);
Parameter(RoleSet,createRole,name,String,declaration);
Parameter(RoleSet,createRole,persistentID,int,declaration);
Parameter(RoleSet,deleteRole,role,Role,declaration);
Parameter(RoleSet,findRole,roleID,int,declaration);
Parameter(RoleSet,setEnabled,isEnabled,boolean,declaration);
Parameter(RoleSetPage,createTooltipText,roleSet,RoleSet,declaration);
Parameter(RoleSetPage,getListCellRendererComponent,roleSetRoleSet,local);
Parameter(RoleSetPage,isTheOnlyEnabled,roleSet,RoleSet,declaration);
Relation(GanttOptions;saveRoleSets;getName,RoleSet,N);
Relation(GanttOptions;saveRoleSets;saveRoles,GanttOptions,RoleSet-TransformerHandler);
Relation(GanttOptions;saveRoles;getRoles,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;getName,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;getRoles,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;isEmpty,RoleSet,N);
Relation(GanttXMLSaver;saveRoles;isEnabled,RoleSet,N);
Relation(ResourceTagHandler;findRole;findRole,RoleSet,int);
Relation(ResourceTagHandler;findRole;setEnabled,RoleSet,boolean);
Relation(RoleImpl;getPersistentID;getName,RoleSet,N);
Relation(RoleManagerImpl;clear;setEnabled,RoleSet,boolean);
Relation(RoleManagerImpl;getEnabledRoles;getRoles,RoleSet,N);
Relation(RoleManagerImpl;getEnabledRoles;isEnabled,RoleSet,N);
Relation(RoleManagerImpl;getRoleSet;getName,RoleSet,N);
Relation(RoleSetPage;createTooltipText;getName,RoleSet,N);
Relation(RoleSetPage;createTooltipText;getRoles,RoleSet,N);
Relation(RoleSetPage;getListCellRendererComponent;createTooltipText,RoleSetListModel,RoleSet);
Relation(RoleSetPage;getListCellRendererComponent;getName,RoleSet,N);
Relation(RoleSetPage;getListCellRendererComponent;isEnabled,RoleSet,N);
Relation(RoleSetPage;getListCellRendererComponent;isTheOnlyEnabled,RoleSetListModel,RoleSet);
Relation(RoleSetPage;isTheOnlyEnabled;isEnabled,RoleSet,N);
Relation(RoleSetPage;toggle;isEnabled,RoleSet,N);
Relation(RoleSetPage;toggle;setEnabled,RoleSet,boolean);
Relation(RoleTagHandler;findRoleSet;setEnabled,RoleSet,boolean);
Relation(RoleTagHandler;loadRoles;createRole,RoleSet,String-int);
Relation(RoleTagHandler;loadRoles;findRole,RoleSet,int);
Relation(RolesTableModel;applyChanges;clear,RoleSet,N);
end b250
start b251
Attribute(GanttPreviewPrint,_x,int,N,public);
Attribute(GanttPreviewPrint,_y,int,N,public);
Attribute(GanttPreviewPrint,bClose,JButton,N,package);
Attribute(GanttPreviewPrint,bLandscape,JButton,N,package);
Attribute(GanttPreviewPrint,bPortrait,JButton,N,package);
Attribute(GanttPreviewPrint,bPrint,JButton,N,package);
Attribute(GanttPreviewPrint,bZoomM,JButton,N,package);
Attribute(GanttPreviewPrint,bZoomP,JButton,N,package);
Attribute(GanttPreviewPrint,factorSpinner,JSpinner,N,package);
Attribute(GanttPreviewPrint,haveto,boolean,N,package);
Attribute(GanttPreviewPrint,image,BufferedImage,N,public);
Attribute(GanttPreviewPrint,index,int,N,package);
Attribute(GanttPreviewPrint,language,GanttLanguage,N,private);
Attribute(GanttPreviewPrint,nbx,int,N,package);
Attribute(GanttPreviewPrint,nby,int,N,package);
Attribute(GanttPreviewPrint,orientation,int,N,public);
Attribute(GanttPreviewPrint,pageHeight,int,N,package);
Attribute(GanttPreviewPrint,pageWidth,int,N,package);
Attribute(GanttPreviewPrint,panel,PreviewPanel,N,package);
Attribute(GanttPreviewPrint,rendering,BufferedImage,N,public);
Attribute(GanttPreviewPrint,save,BufferedImage,N,public);
Attribute(GanttPreviewPrint,sizex,int,N,package);
Attribute(GanttPreviewPrint,sizey,int,N,package);
Attribute(GanttPreviewPrint,spinnerModel,SpinnerNumberModel,N,package);
Attribute(GanttPreviewPrint,zoomX,int[],N,package);
Attribute(GanttPreviewPrint,zoomY,int[],N,package);
Class(GanttPreviewPrint,N,N,public);
Generalisation(GanttPreviewPrint,JDialog);
Generalisation(GanttPreviewPrint,JPanel);
Method(GanttPreviewPrint,GanttPreviewPrint,N,Y,N,N,public);
Method(GanttPreviewPrint,PreviewPanel,N,Y,N,N,public);
Method(GanttPreviewPrint,actionPerformed,void,Y,N,N,public);
Method(GanttPreviewPrint,changeState,void,Y,N,N,public);
Method(GanttPreviewPrint,paint,void,Y,N,N,public);
Method(GanttPreviewPrint,scale,void,Y,N,N,public);
Method(GanttPreviewPrint,stateChanged,void,Y,N,N,public);
Parameter(GanttPreviewPrint,GanttPreviewPrint,image,BufferedImage,declaration);
Parameter(GanttPreviewPrint,GanttPreviewPrint,parent,GanttProject,declaration);
Parameter(GanttPreviewPrint,GanttPreviewPrint,tmppanelJPanel,local);
Parameter(GanttPreviewPrint,GanttPreviewPrint,topJToolBar,local);
Parameter(GanttPreviewPrint,PreviewPanel,img,BufferedImage,declaration);
Parameter(GanttPreviewPrint,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttPreviewPrint,actionPerformed,pageFormatPageFormat,local);
Parameter(GanttPreviewPrint,actionPerformed,printJobPrinterJob,local);
Parameter(GanttPreviewPrint,changeState,orientation,int,declaration);
Parameter(GanttPreviewPrint,changeState,pageFormatPageFormat,local);
Parameter(GanttPreviewPrint,changeState,x,int,declaration);
Parameter(GanttPreviewPrint,changeState,y,int,declaration);
Parameter(GanttPreviewPrint,paint,g,Graphics,declaration);
Parameter(GanttPreviewPrint,paint,image2BufferedImage,local);
Parameter(GanttPreviewPrint,paint,imageHeightint,local);
Parameter(GanttPreviewPrint,paint,imageWidthint,local);
Parameter(GanttPreviewPrint,paint,xint,local);
Parameter(GanttPreviewPrint,paint,yint,local);
Parameter(GanttPreviewPrint,scale,_imgImage,local);
Parameter(GanttPreviewPrint,scale,gGraphics,local);
Parameter(GanttPreviewPrint,scale,scale,double,declaration);
Parameter(GanttPreviewPrint,stateChanged,e,ChangeEvent,declaration);
Parameter(GanttPreviewPrint,stateChanged,scaleDouble,local);
Parameter(GanttProject,previewPrint,previewGanttPreviewPrint,local);
Relation(GanttPreviewPrint;GanttPreviewPrint;add,Container,Component);
Relation(GanttPreviewPrint;GanttPreviewPrint;add,Container,Component-Object);
Relation(GanttPreviewPrint;GanttPreviewPrint;addActionListener,AbstractButton,ActionListener);
Relation(GanttPreviewPrint;GanttPreviewPrint;addChangeListener,JSpinner,ChangeListener);
Relation(GanttPreviewPrint;GanttPreviewPrint;addSeparator,JToolBar,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttPreviewPrint;GanttPreviewPrint;center,DialogAligner,JDialog-Container);
Relation(GanttPreviewPrint;GanttPreviewPrint;correctLabel,GanttProject,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;getClass,Object,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getComponentOrientation,GanttLanguage,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getContentPane,JDialog,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getInstance,GanttLanguage,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getParent,Component,N);
Relation(GanttPreviewPrint;GanttPreviewPrint;getResource,Class<>,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;getText,GanttLanguage,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;getToolTip,GanttProject,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;setEnabled,AbstractButton,boolean);
Relation(GanttPreviewPrint;GanttPreviewPrint;setFloatable,JToolBar,boolean);
Relation(GanttPreviewPrint;GanttPreviewPrint;setSize,Window,int-int);
Relation(GanttPreviewPrint;GanttPreviewPrint;setToolTipText,JComponent,String);
Relation(GanttPreviewPrint;PreviewPanel;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;PreviewPanel;scale,PreviewPanel,double);
Relation(GanttPreviewPrint;actionPerformed;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;actionPerformed;defaultPage,PrinterJob,PageFormat);
Relation(GanttPreviewPrint;actionPerformed;dispose,Window,N);
Relation(GanttPreviewPrint;actionPerformed;getPrinterJob,PrinterJob,N);
Relation(GanttPreviewPrint;actionPerformed;getSource,EventObject,N);
Relation(GanttPreviewPrint;actionPerformed;print,PrinterJob,N);
Relation(GanttPreviewPrint;actionPerformed;printDialog,PrinterJob,N);
Relation(GanttPreviewPrint;actionPerformed;printStackTrace,Throwable,N);
Relation(GanttPreviewPrint;actionPerformed;println,PrintStream,String);
Relation(GanttPreviewPrint;actionPerformed;setEnabled,AbstractButton,boolean);
Relation(GanttPreviewPrint;actionPerformed;setOrientation,PageFormat,int);
Relation(GanttPreviewPrint;actionPerformed;setPrintable,PrinterJob,Printable);
Relation(GanttPreviewPrint;actionPerformed;setVisible,Dialog,boolean);
Relation(GanttPreviewPrint;changeState;add,Container,Component-Object);
Relation(GanttPreviewPrint;changeState;getGraphics,BufferedImage,N);
Relation(GanttPreviewPrint;changeState;getHeight,BufferedImage,N);
Relation(GanttPreviewPrint;changeState;getImageableHeight,PageFormat,N);
Relation(GanttPreviewPrint;changeState;getImageableWidth,PageFormat,N);
Relation(GanttPreviewPrint;changeState;getWidth,BufferedImage,N);
Relation(GanttPreviewPrint;changeState;paint,PreviewPanel,Graphics);
Relation(GanttPreviewPrint;changeState;setOrientation,PageFormat,int);
Relation(GanttPreviewPrint;changeState;setPreferredSize,JComponent,Dimension);
Relation(GanttPreviewPrint;changeState;setSize,Component,int-int);
Relation(GanttPreviewPrint;paint;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(GanttPreviewPrint;paint;drawLine,Graphics,int-int-int-int);
Relation(GanttPreviewPrint;paint;drawRect,Graphics,int-int-int-int);
Relation(GanttPreviewPrint;paint;fillRect,Graphics,int-int-int-int);
Relation(GanttPreviewPrint;paint;getHeight,BufferedImage,N);
Relation(GanttPreviewPrint;paint;getHeight,JComponent,N);
Relation(GanttPreviewPrint;paint;getScaledInstance,Image,int-int-int);
Relation(GanttPreviewPrint;paint;getSubimage,BufferedImage,int-int-int-int);
Relation(GanttPreviewPrint;paint;getWidth,BufferedImage,N);
Relation(GanttPreviewPrint;paint;getWidth,JComponent,N);
Relation(GanttPreviewPrint;paint;setColor,Graphics,Color);
Relation(GanttPreviewPrint;scale;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(GanttPreviewPrint;scale;getGraphics,BufferedImage,N);
Relation(GanttPreviewPrint;scale;getHeight,BufferedImage,N);
Relation(GanttPreviewPrint;scale;getScaledInstance,Image,int-int-int);
Relation(GanttPreviewPrint;scale;getWidth,BufferedImage,N);
Relation(GanttPreviewPrint;stateChanged;changeState,PreviewPanel,int-int-int);
Relation(GanttPreviewPrint;stateChanged;doubleValue,Double,N);
Relation(GanttPreviewPrint;stateChanged;getValue,SpinnerNumberModel,N);
Relation(GanttPreviewPrint;stateChanged;println,PrintStream,String);
Relation(GanttPreviewPrint;stateChanged;repaint,Component,N);
Relation(GanttPreviewPrint;stateChanged;scale,PreviewPanel,double);
end b251
start b252
Class(LibraryInfo,N,N,package);
Parameter(AboutLibraryPanel,addField,w,LibraryInfo,declaration);
Parameter(AboutLibraryPanel,getValueAt,infoLibraryInfo,local);
Relation(AboutLibraryPanel;AboutLibraryPanel;addField,LibraryFieldTableModel,LibraryInfo);
Relation(AboutLibraryPanel;getValueAt;getComment,LibraryInfo,N);
Relation(AboutLibraryPanel;getValueAt;getName,LibraryInfo,N);
Relation(AboutLibraryPanel;getValueAt;getWeb,LibraryInfo,N);
end b252
start b253
Attribute(GanttDialogInfo,CANCEL,int,static,public);
Attribute(GanttDialogInfo,ERROR,int,static,public);
Attribute(GanttDialogInfo,INFO,int,static,public);
Attribute(GanttDialogInfo,NO,int,static,public);
Attribute(GanttDialogInfo,QUESTION,int,static,public);
Attribute(GanttDialogInfo,WARNING,int,static,public);
Attribute(GanttDialogInfo,YES,int,static,public);
Attribute(GanttDialogInfo,YES_NO_CANCEL_OPTION,int,static,public);
Attribute(GanttDialogInfo,YES_NO_OPTION,int,static,public);
Attribute(GanttDialogInfo,YES_OPTION,int,static,public);
Attribute(GanttDialogInfo,res,int,N,public);
Class(GanttDialogInfo,N,N,public);
Generalisation(GanttDialogInfo,JDialog);
Method(GanttDialogInfo,GanttDialogInfo,N,Y,N,N,public);
Method(GanttDialogInfo,actionPerformed,void,Y,N,N,public);
Parameter(DeleteHumanAction,actionPerformed,gdiGanttDialogInfo,local);
Parameter(GanttDialogInfo,GanttDialogInfo,b1Box,local);
Parameter(GanttDialogInfo,GanttDialogInfo,b2Box,local);
Parameter(GanttDialogInfo,GanttDialogInfo,button,int,declaration);
Parameter(GanttDialogInfo,GanttDialogInfo,cancelJButton,local);
Parameter(GanttDialogInfo,GanttDialogInfo,languageGanttLanguage,local);
Parameter(GanttDialogInfo,GanttDialogInfo,message,String,declaration);
Parameter(GanttDialogInfo,GanttDialogInfo,msgtype,int,declaration);
Parameter(GanttDialogInfo,GanttDialogInfo,noJButton,local);
Parameter(GanttDialogInfo,GanttDialogInfo,pJPanel,local);
Parameter(GanttDialogInfo,GanttDialogInfo,parent,Frame,declaration);
Parameter(GanttDialogInfo,GanttDialogInfo,textAreaJTextArea,local);
Parameter(GanttDialogInfo,GanttDialogInfo,title,String,declaration);
Parameter(GanttDialogInfo,GanttDialogInfo,yesJButton,local);
Parameter(GanttDialogInfo,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogProperties,actionPerformed,gdiErrorGanttDialogInfo,local);
Parameter(GanttProject,actionPerformed,gdiGanttDialogInfo,local);
Parameter(GanttProject,addButtons,gdiGanttDialogInfo,local);
Parameter(GanttProject,checkCurrentProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,checkCurrentProject,gdiSaveErrorGanttDialogInfo,local);
Parameter(GanttProject,deleteTasks,gdiGanttDialogInfo,local);
Parameter(GanttProject,doExport,gdiGanttDialogInfo,local);
Parameter(GanttProject,importcbk,gdiGanttDialogInfo,local);
Parameter(GanttProject,openDocument,gdiGanttDialogInfo,local);
Parameter(GanttProject,openStartupDocument,gdiGanttDialogInfo,local);
Parameter(GanttProject,openURL,gdiGanttDialogInfo,local);
Parameter(GanttProject,openWebPage,gdiGanttDialogInfo,local);
Parameter(GanttProject,openXMLStream,gdiGanttDialogInfo,local);
Parameter(GanttProject,saveAsProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,saveProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,selectExportFile,gdiGanttDialogInfo,local);
Parameter(GanttResourcePanel,deleteHuman,gdiGanttDialogInfo,local);
Parameter(GanttTaskPropertiesBean,constructGeneralPanel,gdiGanttDialogInfo,local);
Parameter(GanttXMLOpen,load,gdiGanttDialogInfo,local);
Parameter(GeneralOptionPanel,askForApplyChanges,gdiGanttDialogInfo,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,gdiGanttDialogInfo,local);
Relation(GanttDialogInfo;GanttDialogInfo;add,Container,Component);
Relation(GanttDialogInfo;GanttDialogInfo;add,Container,Component-Object);
Relation(GanttDialogInfo;GanttDialogInfo;addActionListener,AbstractButton,ActionListener);
Relation(GanttDialogInfo;GanttDialogInfo;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogInfo;GanttDialogInfo;center,DialogAligner,JDialog-Container);
Relation(GanttDialogInfo;GanttDialogInfo;createVerticalBox,Box,N);
Relation(GanttDialogInfo;GanttDialogInfo;dispose,Window,N);
Relation(GanttDialogInfo;GanttDialogInfo;getBackground,Component,N);
Relation(GanttDialogInfo;GanttDialogInfo;getClass,Object,N);
Relation(GanttDialogInfo;GanttDialogInfo;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogInfo;GanttDialogInfo;getContentPane,JDialog,N);
Relation(GanttDialogInfo;GanttDialogInfo;getInstance,GanttLanguage,N);
Relation(GanttDialogInfo;GanttDialogInfo;getParent,Component,N);
Relation(GanttDialogInfo;GanttDialogInfo;getResource,Class<>,String);
Relation(GanttDialogInfo;GanttDialogInfo;getRootPane,JDialog,N);
Relation(GanttDialogInfo;GanttDialogInfo;getText,GanttLanguage,String);
Relation(GanttDialogInfo;GanttDialogInfo;pack,Window,N);
Relation(GanttDialogInfo;GanttDialogInfo;setBackground,JComponent,Color);
Relation(GanttDialogInfo;GanttDialogInfo;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogInfo;GanttDialogInfo;setEditable,JTextComponent,boolean);
Relation(GanttDialogInfo;GanttDialogInfo;setResizable,Dialog,boolean);
Relation(GanttDialogInfo;GanttDialogInfo;setVisible,Dialog,boolean);
end b253
start b254
Class(RolloverAction,N,N,public);
Method(RolloverAction,getIconOnMouseOver,Icon,N,N,N,package);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;getIconOnMouseOver,RolloverAction,N);
end b254
start b255
Class(FacadeFactoryImpl,N,N,private);
end b255
start b256
Class(ColorConvertion,N,N,public);
Method(ColorConvertion,determineColor,Color,Y,N,static,public);
Method(ColorConvertion,getColor,String,Y,N,static,public);
Parameter(ColorConvertion,determineColor,bint,local);
Parameter(ColorConvertion,determineColor,gint,local);
Parameter(ColorConvertion,determineColor,hexString,String,declaration);
Parameter(ColorConvertion,determineColor,rint,local);
Parameter(ColorConvertion,getColor,color,Color,declaration);
Parameter(ColorConvertion,getColor,resString,local);
Relation(ColorConvertion;determineColor;intValue,Integer,N);
Relation(ColorConvertion;determineColor;matches,Pattern,String-CharSequence);
Relation(ColorConvertion;determineColor;substring,String,int-int);
Relation(ColorConvertion;determineColor;valueOf,Integer,String-int);
Relation(ColorConvertion;getColor;getBlue,Color,N);
Relation(ColorConvertion;getColor;getGreen,Color,N);
Relation(ColorConvertion;getColor;getRed,Color,N);
Relation(ColorConvertion;getColor;toHexString,Integer,int);
Relation(GanttOptions;save;getColor,ColorConvertion,Color);
Relation(GanttOptions;startElement;determineColor,ColorConvertion,String);
Relation(GanttXMLSaver;_save;getColor,ColorConvertion,Color);
Relation(GanttXMLSaver;writeTask;getColor,ColorConvertion,Color);
end b256
start b257
Class(TagHandler,N,N,public);
Method(GanttXMLOpen,getDefaultTagHandler,TagHandler,N,N,N,public);
Method(TagHandler,endElement,void,Y,N,N,public);
Method(TagHandler,startElement,void,Y,N,N,public);
Parameter(GanttXMLOpen,addTagHandler,handler,TagHandler,declaration);
Parameter(GanttXMLOpen,endElement,nextTagHandler,local);
Parameter(GanttXMLOpen,startElement,nextTagHandler,local);
Parameter(TagHandler,endElement,namespaceURI,String,declaration);
Parameter(TagHandler,endElement,qName,String,declaration);
Parameter(TagHandler,endElement,sName,String,declaration);
Parameter(TagHandler,startElement,attrs,Attributes,declaration);
Parameter(TagHandler,startElement,namespaceURI,String,declaration);
Parameter(TagHandler,startElement,qName,String,declaration);
Parameter(TagHandler,startElement,sName,String,declaration);
Relation(GanttOptions;loadRoleSets;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;importcbk;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openDocument;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openXMLStream;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttXMLOpen;endElement;endElement,TagHandler,String-String-String);
Relation(GanttXMLOpen;startElement;startElement,TagHandler,String-String-String-Attributes);
Relation(ImportResources;actionPerformed;addTagHandler,GanttXMLOpen,TagHandler);
end b257
start b258
Attribute(GanttTaskPropertiesBean,myHumanResourceManager,HumanResourceManager,N,private);
Attribute(HumanResourceManager,myDefaultRole,Role,N,private);
Attribute(HumanResourceManager,myViews,List,N,private);
Attribute(HumanResourceManager,nextFreeId,int,N,private);
Attribute(HumanResourceManager,resources,ArrayList,N,private);
Attribute(ProjectExportData,myResourceManager,HumanResourceManager,N,package);
Attribute(TaskAllocationsPanel,myHRManager,HumanResourceManager,N,private);
Class(HumanResourceManager,N,N,public);
Method(HumanResourceManager,HumanResourceManager,N,Y,N,N,public);
Method(HumanResourceManager,add,void,Y,N,N,public);
Method(HumanResourceManager,addView,void,Y,N,N,public);
Method(HumanResourceManager,clear,void,N,N,N,public);
Method(HumanResourceManager,create,ProjectResource,Y,N,N,public);
Method(HumanResourceManager,down,void,Y,N,N,public);
Method(HumanResourceManager,fireCleanup,void,N,N,N,private);
Method(HumanResourceManager,fireResourceAdded,void,Y,N,N,private);
Method(HumanResourceManager,fireResourcesRemoved,void,Y,N,N,private);
Method(HumanResourceManager,getById,ProjectResource,Y,N,N,public);
Method(HumanResourceManager,getResources,ArrayList,N,N,N,public);
Method(HumanResourceManager,newHumanResource,HumanResource,N,N,N,public);
Method(HumanResourceManager,remove,void,Y,N,N,public);
Method(HumanResourceManager,removeById,void,Y,N,N,public);
Method(HumanResourceManager,save,void,Y,N,N,public);
Method(HumanResourceManager,up,void,Y,N,N,public);
Parameter(GanttHTMLExport,writeResources,resManHumanResourceManager,local);
Parameter(GanttPDFExport,save,resourceManager,HumanResourceManager,declaration);
Parameter(GanttPDFExport,writeResources,resMan,HumanResourceManager,declaration);
Parameter(GanttResourcePanel,downResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,upResource,resManHumanResourceManager,local);
Parameter(HumanResourceManager,HumanResourceManager,defaultRole,Role,declaration);
Parameter(HumanResourceManager,add,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,addView,view,ResourceView,declaration);
Parameter(HumanResourceManager,create,hrHumanResource,local);
Parameter(HumanResourceManager,create,i,int,declaration);
Parameter(HumanResourceManager,create,name,String,declaration);
Parameter(HumanResourceManager,down,humanHumanResource,local);
Parameter(HumanResourceManager,down,index,int,declaration);
Parameter(HumanResourceManager,fireResourceAdded,eResourceEvent,local);
Parameter(HumanResourceManager,fireResourceAdded,nextViewResourceView,local);
Parameter(HumanResourceManager,fireResourceAdded,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,fireResourcesRemoved,eResourceEvent,local);
Parameter(HumanResourceManager,fireResourcesRemoved,nextViewResourceView,local);
Parameter(HumanResourceManager,fireResourcesRemoved,resources,ProjectResource[],declaration);
Parameter(HumanResourceManager,getById,id,int,declaration);
Parameter(HumanResourceManager,getById,prProjectResource,local);
Parameter(HumanResourceManager,newHumanResource,resultHumanResource,local);
Parameter(HumanResourceManager,remove,resource,ProjectResource,declaration);
Parameter(HumanResourceManager,removeById,id,int,declaration);
Parameter(HumanResourceManager,removeById,prProjectResource,local);
Parameter(HumanResourceManager,save,target,OutputStream,declaration);
Parameter(HumanResourceManager,up,humanHumanResource,local);
Parameter(HumanResourceManager,up,index,int,declaration);
Parameter(PDFExportData,PDFExportData,myResourceManager,HumanResourceManager,declaration);
Parameter(ProjectExportData,ProjectExportData,myResourceManager,HumanResourceManager,declaration);
Parameter(ResourceLoadGraphicArea,paintLoads,resManHumanResourceManager,local);
Parameter(TaskAllocationsPanel,TaskAllocationsPanel,hrManager,HumanResourceManager,declaration);
Relation(GanttHTMLExport;writeResources;getResources,HumanResourceManager,N);
Relation(GanttPDFExport;save;writeResources,GanttPDFExport,HumanResourceManager);
Relation(GanttPDFExport;writeResources;getResources,HumanResourceManager,N);
Relation(GanttResourcePanel;downResource;down,HumanResourceManager,int);
Relation(GanttResourcePanel;upResource;up,HumanResourceManager,int);
Relation(HumanResourceManager;add;add,ArrayList,Object);
Relation(HumanResourceManager;add;fireResourceAdded,HumanResourceManager,ProjectResource);
Relation(HumanResourceManager;add;getId,ProjectResource,N);
Relation(HumanResourceManager;add;setId,ProjectResource,int);
Relation(HumanResourceManager;addView;add,List,Object);
Relation(HumanResourceManager;clear;clear,ArrayList,N);
Relation(HumanResourceManager;clear;fireCleanup,HumanResourceManager,N);
Relation(HumanResourceManager;create;add,HumanResourceManager,ProjectResource);
Relation(HumanResourceManager;create;setRole,HumanResource,Role);
Relation(HumanResourceManager;down;add,ArrayList,int-Object);
Relation(HumanResourceManager;down;remove,ArrayList,int);
Relation(HumanResourceManager;fireCleanup;fireResourcesRemoved,HumanResourceManager,ProjectResource[]);
Relation(HumanResourceManager;fireCleanup;size,ArrayList,N);
Relation(HumanResourceManager;fireCleanup;toArray,ArrayList,Object[]);
Relation(HumanResourceManager;fireResourceAdded;hasNext,Iterator,N);
Relation(HumanResourceManager;fireResourceAdded;iterator,List,N);
Relation(HumanResourceManager;fireResourceAdded;next,Iterator,N);
Relation(HumanResourceManager;fireResourceAdded;resourceAdded,ResourceView,ResourceEvent);
Relation(HumanResourceManager;fireResourcesRemoved;get,List,int);
Relation(HumanResourceManager;fireResourcesRemoved;resourcesRemoved,ResourceView,ResourceEvent);
Relation(HumanResourceManager;fireResourcesRemoved;size,List,N);
Relation(HumanResourceManager;getById;get,ArrayList,int);
Relation(HumanResourceManager;getById;getId,ProjectResource,N);
Relation(HumanResourceManager;getById;size,ArrayList,N);
Relation(HumanResourceManager;newHumanResource;setRole,HumanResource,Role);
Relation(HumanResourceManager;remove;fireResourcesRemoved,HumanResourceManager,ProjectResource[]);
Relation(HumanResourceManager;remove;remove,ArrayList,Object);
Relation(HumanResourceManager;removeById;getById,HumanResourceManager,int);
Relation(HumanResourceManager;removeById;remove,HumanResourceManager,ProjectResource);
Relation(HumanResourceManager;up;add,ArrayList,int-Object);
Relation(HumanResourceManager;up;remove,ArrayList,int);
Relation(NewHumanAction;actionPerformed;newHumanResource,HumanResourceManager,N);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
Relation(ResourceLoadGraphicArea;paintLoads;getResources,HumanResourceManager,N);
Relation(TaskAllocationsPanel;setUpResourcesComboColumn;getResources,HumanResourceManager,N);
end b258
start b259
Attribute(GanttMetalTheme,font,FontUIResource,N,private);
Class(GanttMetalTheme,N,N,public);
Generalisation(GanttMetalTheme,DefaultMetalTheme);
Method(GanttMetalTheme,GanttMetalTheme,N,Y,N,N,public);
Method(GanttMetalTheme,getControlTextFont,FontUIResource,N,N,N,public);
Method(GanttMetalTheme,getMenuTextFont,FontUIResource,N,N,N,public);
Method(GanttMetalTheme,getSystemTextFont,FontUIResource,N,N,N,public);
Method(GanttMetalTheme,getUserTextFont,FontUIResource,N,N,N,public);
Method(GanttMetalTheme,getWindowTitleFont,FontUIResource,N,N,N,public);
Parameter(GanttMetalTheme,GanttMetalTheme,config,UIConfiguration,declaration);
Relation(GanttMetalTheme;GanttMetalTheme;getMenuFont,UIConfiguration,N);
end b259
start b260
Attribute(TaskScheduleEvent,myNewFinishDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myNewStartDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myOldFinishDate,GanttCalendar,N,private);
Attribute(TaskScheduleEvent,myOldStartDate,GanttCalendar,N,private);
Class(TaskScheduleEvent,N,N,public);
Generalisation(TaskScheduleEvent,EventObject);
Method(TaskScheduleEvent,TaskScheduleEvent,N,Y,N,N,public);
Method(TaskScheduleEvent,getNewFinishDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getNewStartDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getOldFinishDate,GanttCalendar,N,N,N,public);
Method(TaskScheduleEvent,getOldStartDate,GanttCalendar,N,N,N,public);
Parameter(GanttGraphicArea,taskScheduleChanged,e,TaskScheduleEvent,declaration);
Parameter(TaskListener,taskScheduleChanged,e,TaskScheduleEvent,declaration);
Parameter(TaskListenerAdapter,taskScheduleChanged,e,TaskScheduleEvent,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,eTaskScheduleEvent,local);
Parameter(TaskScheduleEvent,TaskScheduleEvent,newFinishDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,newStartDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,oldFinishDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,oldStartDate,GanttCalendar,declaration);
Parameter(TaskScheduleEvent,TaskScheduleEvent,source,Task,declaration);
Relation(TaskManagerImpl;fireTaskScheduleChanged;taskScheduleChanged,TaskListener,TaskScheduleEvent);
end b260
start b261
Class(GanttXMLFileFilter,N,N,public);
Generalisation(GanttXMLFileFilter,FileFilter);
Method(GanttXMLFileFilter,accept,boolean,Y,N,N,public);
Method(GanttXMLFileFilter,getDescription,String,N,N,N,public);
Method(GanttXMLFileFilter,getExtension,String,Y,N,static,public);
Parameter(GanttXMLFileFilter,accept,extensionString,local);
Parameter(GanttXMLFileFilter,accept,f,File,declaration);
Parameter(GanttXMLFileFilter,getExtension,extString,local);
Parameter(GanttXMLFileFilter,getExtension,f,File,declaration);
Parameter(GanttXMLFileFilter,getExtension,iint,local);
Parameter(GanttXMLFileFilter,getExtension,sString,local);
Relation(GanttXMLFileFilter;accept;equals,String,Object);
Relation(GanttXMLFileFilter;accept;getExtension,GanttXMLFileFilter,File);
Relation(GanttXMLFileFilter;accept;isDirectory,File,N);
Relation(GanttXMLFileFilter;getExtension;getName,File,N);
Relation(GanttXMLFileFilter;getExtension;lastIndexOf,String,int);
Relation(GanttXMLFileFilter;getExtension;length,String,N);
Relation(GanttXMLFileFilter;getExtension;substring,String,int);
Relation(GanttXMLFileFilter;getExtension;toLowerCase,String,N);
end b261
start b262
Attribute(FindPossibleDependeesAlgorithmImpl,myContainmentFacade,TaskContainmentHierarchyFacade,N,private);
Class(FindPossibleDependeesAlgorithmImpl,abstract,N,public);
Method(FindPossibleDependeesAlgorithmImpl,FindPossibleDependeesAlgorithmImpl,N,N,N,N,public);
Method(FindPossibleDependeesAlgorithmImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,abstract,N,protected);
Method(FindPossibleDependeesAlgorithmImpl,processTask,void,Y,N,N,private);
Method(FindPossibleDependeesAlgorithmImpl,run,Task[],Y,N,N,public);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,dependant,Task,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,nestedTask[],local);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,nextTask,local);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,result,ArrayList,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,processTask,taskList,Task[],declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,run,dependant,Task,declaration);
Parameter(FindPossibleDependeesAlgorithmImpl,run,nestedTasksTask[],local);
Parameter(FindPossibleDependeesAlgorithmImpl,run,resultArrayList,local);
Parameter(FindPossibleDependeesAlgorithmImpl,run,rootTask,local);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;add,ArrayList,Object);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;equals,Object,Object);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;processTask;processTask,FindPossibleDependeesAlgorithmImpl,Task[]-Task-ArrayList);
Relation(FindPossibleDependeesAlgorithmImpl;run;createContainmentFacade,FindPossibleDependeesAlgorithmImpl,N);
Relation(FindPossibleDependeesAlgorithmImpl;run;getNestedTasks,TaskContainmentHierarchyFacade,Task);
Relation(FindPossibleDependeesAlgorithmImpl;run;getRoot,TaskContainmentHierarchyFacade,N);
Relation(FindPossibleDependeesAlgorithmImpl;run;processTask,FindPossibleDependeesAlgorithmImpl,Task[]-Task-ArrayList);
Relation(FindPossibleDependeesAlgorithmImpl;run;toArray,ArrayList,Object[]);
end b262
start b263
Attribute(ColorConstants,ALICE_BLUE,Color,static,public);
Attribute(ColorConstants,ANTIQUE_WHITE,Color,static,public);
Attribute(ColorConstants,AQUAMARINE,Color,static,public);
Attribute(ColorConstants,AZURE,Color,static,public);
Attribute(ColorConstants,BEIGE,Color,static,public);
Attribute(ColorConstants,BISQUE,Color,static,public);
Attribute(ColorConstants,BLACK,Color,static,public);
Attribute(ColorConstants,BLANCHED_ALMOND,Color,static,public);
Attribute(ColorConstants,BLUE,Color,static,public);
Attribute(ColorConstants,BLUE_VIOLET,Color,static,public);
Attribute(ColorConstants,BROWN,Color,static,public);
Attribute(ColorConstants,BURLY_WOOD,Color,static,public);
Attribute(ColorConstants,CADET_BLUE,Color,static,public);
Attribute(ColorConstants,CHARTREUSE,Color,static,public);
Attribute(ColorConstants,CHOCOLATE,Color,static,public);
Attribute(ColorConstants,CORAL,Color,static,public);
Attribute(ColorConstants,CORNFLOWER_BLUE,Color,static,public);
Attribute(ColorConstants,CORNSILK,Color,static,public);
Attribute(ColorConstants,CYAN,Color,static,public);
Attribute(ColorConstants,DARK_GOLDENROD,Color,static,public);
Attribute(ColorConstants,DARK_GREEN,Color,static,public);
Attribute(ColorConstants,DARK_KHAKI,Color,static,public);
Attribute(ColorConstants,DARK_OLIVE_GREEN,Color,static,public);
Attribute(ColorConstants,DARK_ORANGE,Color,static,public);
Attribute(ColorConstants,DARK_ORCHID,Color,static,public);
Attribute(ColorConstants,DARK_SALMON,Color,static,public);
Attribute(ColorConstants,DARK_SEA_GREEN,Color,static,public);
Attribute(ColorConstants,DARK_SLATE_BLUE,Color,static,public);
Attribute(ColorConstants,DARK_SLATE_GRAY,Color,static,public);
Attribute(ColorConstants,DARK_TURQUOISE,Color,static,public);
Attribute(ColorConstants,DARK_VIOLET,Color,static,public);
Attribute(ColorConstants,DEEP_PINK,Color,static,public);
Attribute(ColorConstants,DEEP_SKY_BLUE,Color,static,public);
Attribute(ColorConstants,DIM_GRAY,Color,static,public);
Attribute(ColorConstants,DODGER_BLUE,Color,static,public);
Attribute(ColorConstants,FIRE_BRICK,Color,static,public);
Attribute(ColorConstants,FLORAL_WHITE,Color,static,public);
Attribute(ColorConstants,FOREST_GREEN,Color,static,public);
Attribute(ColorConstants,GAINSBORO,Color,static,public);
Attribute(ColorConstants,GHOST_WHITE,Color,static,public);
Attribute(ColorConstants,GOLD,Color,static,public);
Attribute(ColorConstants,GOLDENROD,Color,static,public);
Attribute(ColorConstants,GRAY,Color,static,public);
Attribute(ColorConstants,GREEN,Color,static,public);
Attribute(ColorConstants,HONEYDEW,Color,static,public);
Attribute(ColorConstants,HOT_PINK,Color,static,public);
Attribute(ColorConstants,INDIAN_RED,Color,static,public);
Attribute(ColorConstants,IVORY,Color,static,public);
Attribute(ColorConstants,KHAKI,Color,static,public);
Attribute(ColorConstants,LAVENDER,Color,static,public);
Attribute(ColorConstants,LAVENDER_BLUSH,Color,static,public);
Attribute(ColorConstants,LAWN_GREEN,Color,static,public);
Attribute(ColorConstants,LEMON_CHIFFON,Color,static,public);
Attribute(ColorConstants,LIGHT_BLUE,Color,static,public);
Attribute(ColorConstants,LIGHT_CORAL,Color,static,public);
Attribute(ColorConstants,LIGHT_CYAN,Color,static,public);
Attribute(ColorConstants,LIGHT_GOLDENROD,Color,static,public);
Attribute(ColorConstants,LIGHT_GOLDENROD_YELLOW,Color,static,public);
Attribute(ColorConstants,LIGHT_GRAY,Color,static,public);
Attribute(ColorConstants,LIGHT_GREY,Color,static,public);
Attribute(ColorConstants,LIGHT_PINK,Color,static,public);
Attribute(ColorConstants,LIGHT_SALMON,Color,static,public);
Attribute(ColorConstants,LIGHT_SEA_GREEN,Color,static,public);
Attribute(ColorConstants,LIGHT_SKY_BLUE,Color,static,public);
Attribute(ColorConstants,LIGHT_SLATE_BLUE,Color,static,public);
Attribute(ColorConstants,LIGHT_SLATE_GRAY,Color,static,public);
Attribute(ColorConstants,LIGHT_SLATE_GREY,Color,static,public);
Attribute(ColorConstants,LIGHT_STEEL_BLUE,Color,static,public);
Attribute(ColorConstants,LIGHT_YELLOW,Color,static,public);
Attribute(ColorConstants,LIME_GREEN,Color,static,public);
Attribute(ColorConstants,LINEN,Color,static,public);
Attribute(ColorConstants,LONG_LIST,Color[],static,public);
Attribute(ColorConstants,MAGENTA,Color,static,public);
Attribute(ColorConstants,MAROON,Color,static,public);
Attribute(ColorConstants,MEDIUM_AQUAMARINE,Color,static,public);
Attribute(ColorConstants,MEDIUM_BLUE,Color,static,public);
Attribute(ColorConstants,MEDIUM_LIST,Color[],static,public);
Attribute(ColorConstants,MEDIUM_ORCHID,Color,static,public);
Attribute(ColorConstants,MEDIUM_PURPLE,Color,static,public);
Attribute(ColorConstants,MEDIUM_SEA_GREEN,Color,static,public);
Attribute(ColorConstants,MEDIUM_SLATE_BLUE,Color,static,public);
Attribute(ColorConstants,MEDIUM_SPRING_GREEN,Color,static,public);
Attribute(ColorConstants,MEDIUM_TURQUOISE,Color,static,public);
Attribute(ColorConstants,MEDIUM_VIOLET_RED,Color,static,public);
Attribute(ColorConstants,MIDNIGHT_BLUE,Color,static,public);
Attribute(ColorConstants,MINT_CREAM,Color,static,public);
Attribute(ColorConstants,MISTY_ROSE,Color,static,public);
Attribute(ColorConstants,MOCCASIN,Color,static,public);
Attribute(ColorConstants,NAVAJO_WHITE,Color,static,public);
Attribute(ColorConstants,NAVY,Color,static,public);
Attribute(ColorConstants,NAVY_BLUE,Color,static,public);
Attribute(ColorConstants,OLD_LACE,Color,static,public);
Attribute(ColorConstants,OLIVE_DRAB,Color,static,public);
Attribute(ColorConstants,ORANGE,Color,static,public);
Attribute(ColorConstants,ORANGE_RED,Color,static,public);
Attribute(ColorConstants,ORCHID,Color,static,public);
Attribute(ColorConstants,PALE_GOLDENROD,Color,static,public);
Attribute(ColorConstants,PALE_GREEN,Color,static,public);
Attribute(ColorConstants,PALE_TURQUOISE,Color,static,public);
Attribute(ColorConstants,PALE_VIOLET_RED,Color,static,public);
Attribute(ColorConstants,PAPAYA_WHIP,Color,static,public);
Attribute(ColorConstants,PEACH_PUFF,Color,static,public);
Attribute(ColorConstants,PERU,Color,static,public);
Attribute(ColorConstants,PINK,Color,static,public);
Attribute(ColorConstants,PLUM,Color,static,public);
Attribute(ColorConstants,POWDER_BLUE,Color,static,public);
Attribute(ColorConstants,PURPLE,Color,static,public);
Attribute(ColorConstants,RED,Color,static,public);
Attribute(ColorConstants,ROSY_BROWN,Color,static,public);
Attribute(ColorConstants,ROYAL_BLUE,Color,static,public);
Attribute(ColorConstants,SADDLE_BROWN,Color,static,public);
Attribute(ColorConstants,SALMON,Color,static,public);
Attribute(ColorConstants,SANDY_BROWN,Color,static,public);
Attribute(ColorConstants,SEASHELL,Color,static,public);
Attribute(ColorConstants,SEA_GREEN,Color,static,public);
Attribute(ColorConstants,SHORT_LIST,Color[],static,public);
Attribute(ColorConstants,SIENNA,Color,static,public);
Attribute(ColorConstants,SKY_BLUE,Color,static,public);
Attribute(ColorConstants,SLATE_BLUE,Color,static,public);
Attribute(ColorConstants,SLATE_GRAY,Color,static,public);
Attribute(ColorConstants,SNOW,Color,static,public);
Attribute(ColorConstants,SPRING_GREEN,Color,static,public);
Attribute(ColorConstants,STEEL_BLUE,Color,static,public);
Attribute(ColorConstants,TAN,Color,static,public);
Attribute(ColorConstants,THISTLE,Color,static,public);
Attribute(ColorConstants,TOMATO,Color,static,public);
Attribute(ColorConstants,TURQUOISE,Color,static,public);
Attribute(ColorConstants,VIOLET,Color,static,public);
Attribute(ColorConstants,VIOLET_RED,Color,static,public);
Attribute(ColorConstants,WHEAT,Color,static,public);
Attribute(ColorConstants,WHITE,Color,static,public);
Attribute(ColorConstants,WHITE_SMOKE,Color,static,public);
Attribute(ColorConstants,YELLOW,Color,static,public);
Attribute(ColorConstants,YELLOW_GREEN,Color,static,public);
Class(ColorConstants,N,N,public);
end b263
start b264
Class(DayTextFormatter,N,N,public);
Method(DayTextFormatter,format,String,Y,N,N,public);
Parameter(DayTextFormatter,format,adjustedLeftDate,local);
Parameter(DayTextFormatter,format,baseDate,Date,declaration);
Parameter(DayTextFormatter,format,resultString,local);
Parameter(DayTextFormatter,format,timeUnit,TimeUnit,declaration);
Relation(DayTextFormatter;format;adjustLeft,DateFrameable,Date);
Relation(DayTextFormatter;format;format,MessageFormat,String-Object[]);
Relation(DayTextFormatter;format;getDate,Date,N);
end b264
start b265
Attribute(AllocationTagHandler,myTaskManager,TaskManager,N,private);
Attribute(DependencyTagHandler,myTaskManager,TaskManager,N,private);
Attribute(GanttGraphicArea,myTaskManager,TaskManager,N,private);
Attribute(GanttProject,myTaskManager,TaskManager,N,private);
Attribute(GanttTXTOpen,myTaskManager,TaskManager,N,private);
Attribute(GanttTaskRelationship,myTaskManager,TaskManager,N,private);
Attribute(GanttTree,myTaskManager,TaskManager,N,private);
Attribute(GanttXMLOpen,myTaskManager,TaskManager,N,private);
Attribute(ImportResources,myTaskManager,TaskManager,N,private);
Attribute(TaskDependenciesPanel,myTaskManager,TaskManager,N,private);
Attribute(TaskManager,ourInstance,TaskManager,static,private);
Attribute(TaskTagHandler,myManager,TaskManager,N,private);
Class(TaskManager,N,N,public);
Method(AllocationTagHandler,getTaskManager,TaskManager,N,N,N,private);
Method(GanttDialogProperties,getTaskManager,TaskManager,N,N,N,private);
Method(GanttGraphicArea,getTaskManager,TaskManager,N,N,N,private);
Method(GanttProject,getTaskManager,TaskManager,N,N,N,public);
Method(GanttTaskRelationship,getManager,TaskManager,N,N,N,private);
Method(GanttTree,getTaskManager,TaskManager,N,N,N,private);
Method(IGanttProject,getTaskManager,TaskManager,N,N,N,package);
Method(Task,getManager,TaskManager,N,N,N,package);
Method(TaskImpl,getManager,TaskManager,N,N,N,public);
Method(TaskManager,addTaskListener,void,Y,N,N,package);
Method(TaskManager,clear,void,N,N,N,public);
Method(TaskManager,createConstraint,TaskDependencyConstraint,Y,N,N,package);
Method(TaskManager,createLength,TaskLength,Y,N,N,package);
Method(TaskManager,createTask,GanttTask,N,N,N,public);
Method(TaskManager,createTask,GanttTask,Y,N,N,public);
Method(TaskManager,getAlgorithmCollection,AlgorithmCollection,N,N,N,package);
Method(TaskManager,getDependencyCollection,TaskDependencyCollection,N,N,N,package);
Method(TaskManager,getInstance,TaskManager,N,N,static,public);
Method(TaskManager,getRootTask,Task,N,N,N,public);
Method(TaskManager,getTask,GanttTask,Y,N,N,public);
Method(TaskManager,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TaskManager,newInstance,TaskManager,N,N,static,public);
Method(TaskManager,newInstance,TaskManager,Y,N,static,public);
Method(TaskManager,registerTask,void,Y,N,N,public);
Method(TaskTagHandler,getManager,TaskManager,N,N,N,private);
Parameter(AllocationTagHandler,AllocationTagHandler,taskMgr,TaskManager,declaration);
Parameter(DependencyTagHandler,DependencyTagHandler,taskManager,TaskManager,declaration);
Parameter(GanttGraphicArea,GanttGraphicArea,taskManager,TaskManager,declaration);
Parameter(GanttProject,openDocument,taskManagerTaskManager,local);
Parameter(GanttTXTOpen,GanttTXTOpen,taskManager,TaskManager,declaration);
Parameter(GanttTask,GanttTask,taskManager,TaskManager,declaration);
Parameter(GanttTaskRelationship,GanttTaskRelationship,taskManager,TaskManager,declaration);
Parameter(GanttTree,GanttTree,taskManager,TaskManager,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,taskManager,TaskManager,declaration);
Parameter(ImportResources,ImportResources,taskManager,TaskManager,declaration);
Parameter(TaskImpl,TaskImpl,taskManager,TaskManager,declaration);
Parameter(TaskManager,addTaskListener,listener,TaskListener,declaration);
Parameter(TaskManager,createConstraint,constraintID,int,declaration);
Parameter(TaskManager,createLength,count,long,declaration);
Parameter(TaskManager,createLength,unit,TimeUnit,declaration);
Parameter(TaskManager,createTask,taskId,int,declaration);
Parameter(TaskManager,getTask,taskId,int,declaration);
Parameter(TaskManager,newInstance,config,TaskManagerConfig,declaration);
Parameter(TaskManager,newInstance,containmentFacadeFactory,Factory,declaration);
Parameter(TaskManager,registerTask,task,Task,declaration);
Parameter(TaskTagHandler,TaskTagHandler,mgr,TaskManager,declaration);
Relation(AllocationTagHandler;loadAllocation;getTask,TaskManager,int);
Relation(DependencyTableModel;DependencyTableModel;getDependencyCollection,TaskManager,N);
Relation(DependencyTagHandler;parsingFinished;createConstraint,TaskManager,int);
Relation(DependencyTagHandler;parsingFinished;getDependencyCollection,TaskManager,N);
Relation(DependencyTagHandler;parsingFinished;getTask,TaskManager,int);
Relation(GanttGraphicArea;GanttGraphicArea;addTaskListener,TaskManager,TaskListener);
Relation(GanttGraphicArea;GanttGraphicArea;getAlgorithmCollection,TaskManager,N);
Relation(GanttGraphicArea;GanttGraphicArea;getDependencyCollection,TaskManager,N);
Relation(GanttGraphicArea;GanttGraphicArea;getTask,TaskManager,int);
Relation(GanttGraphicArea;setTaskToMove;getTask,TaskManager,int);
Relation(GanttHTMLExport;writeTasks;getRootTask,TaskManager,N);
Relation(GanttPDFExport;writeTasks;getRootTask,TaskManager,N);
Relation(GanttProject;closeProject;clear,TaskManager,N);
Relation(GanttProject;deleteTasks;getAlgorithmCollection,TaskManager,N);
Relation(GanttProject;linkRelationships;getDependencyCollection,TaskManager,N);
Relation(GanttProject;newTask;createTask,TaskManager,N);
Relation(GanttProject;newTask;getAlgorithmCollection,TaskManager,N);
Relation(GanttProject;newTask;registerTask,TaskManager,Task);
Relation(GanttProject;openXMLStream;clear,TaskManager,N);
Relation(GanttTXTOpen;load;createTask,TaskManager,N);
Relation(GanttTXTOpen;load;registerTask,TaskManager,Task);
Relation(GanttTask;GanttTask;createLength,TaskManager,TimeUnit-long);
Relation(GanttTask;setLength;createLength,TaskManager,TimeUnit-long);
Relation(GanttTaskRelationship;getPredecessorTask;getTask,TaskManager,int);
Relation(GanttTaskRelationship;getSuccessorTask;getTask,TaskManager,int);
Relation(GanttTree;checkDepend;getTask,TaskManager,int);
Relation(GanttTree;cutSelectedNode;getAlgorithmCollection,TaskManager,N);
Relation(GanttTree;forwardScheduling;getAlgorithmCollection,TaskManager,N);
Relation(GanttTree;initRootNode;getRootTask,TaskManager,N);
Relation(GanttTree;insertClonedNode;registerTask,TaskManager,Task);
Relation(GanttXMLOpen;load;getAlgorithmCollection,TaskManager,N);
Relation(GanttXMLOpen;startElement;createTask,TaskManager,N);
Relation(GanttXMLOpen;startElement;registerTask,TaskManager,Task);
Relation(TaskDependenciesPanel;setUpPredecessorComboColumn;getAlgorithmCollection,TaskManager,N);
Relation(TaskImpl;setEnd;createLength,TaskManager,TimeUnit-long);
Relation(TaskManager;NnewInstance,Access,N);
Relation(TaskTagHandler;loadTask;createTask,TaskManager,N);
Relation(TaskTagHandler;loadTask;createTask,TaskManager,int);
Relation(TaskTagHandler;loadTask;registerTask,TaskManager,Task);
end b265
start b266
Attribute(TaskDependencySliceImpl,myDependencyCollection,TaskDependencyCollection,N,private);
Class(TaskDependencyCollection,N,N,public);
Method(TaskDependencyCollection,createMutator,TaskDependencyCollectionMutator,N,N,N,package);
Method(TaskDependencyCollection,getDependencies,TaskDependency[],Y,N,N,package);
Method(TaskDependencyCollection,getDependenciesAsDependant,TaskDependency[],Y,N,N,package);
Method(TaskDependencyCollection,getDependenciesAsDependee,TaskDependency[],Y,N,N,package);
Method(TaskDependencySliceImpl,getDependencyCollection,TaskDependencyCollection,N,N,N,protected);
Method(TaskManager,getDependencyCollection,TaskDependencyCollection,N,N,N,package);
Method(TaskManagerImpl,getDependencyCollection,TaskDependencyCollection,N,N,N,public);
Parameter(TaskDependencyCollection,getDependencies,task,Task,declaration);
Parameter(TaskDependencyCollection,getDependenciesAsDependant,dependant,Task,declaration);
Parameter(TaskDependencyCollection,getDependenciesAsDependee,dependee,Task,declaration);
Parameter(TaskDependencyEvent,TaskDependencyEvent,source,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceAsDependant,TaskDependencySliceAsDependant,dependencyCollection,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceAsDependee,TaskDependencySliceAsDependee,dependencyCollection,TaskDependencyCollection,declaration);
Parameter(TaskDependencySliceImpl,TaskDependencySliceImpl,dependencyCollection,TaskDependencyCollection,declaration);
Relation(DependencyTableModel;DependencyTableModel;createMutator,TaskDependencyCollection,N);
Relation(TaskDependencySliceAsDependant;toArray;getDependenciesAsDependant,TaskDependencyCollection,Task);
Relation(TaskDependencySliceAsDependee;toArray;getDependenciesAsDependee,TaskDependencyCollection,Task);
Relation(TaskDependencySliceImpl;toArray;getDependencies,TaskDependencyCollection,Task);
end b266
start b267
Attribute(GanttTaskRelationship,FF,int,static,public);
Attribute(GanttTaskRelationship,FS,int,static,public);
Attribute(GanttTaskRelationship,SF,int,static,public);
Attribute(GanttTaskRelationship,SS,int,static,public);
Attribute(GanttTaskRelationship,myTaskManager,TaskManager,N,private);
Attribute(GanttTaskRelationship,predecessorTaskID,int,N,private);
Attribute(GanttTaskRelationship,relationshipType,int,N,private);
Attribute(GanttTaskRelationship,successorTaskID,int,N,private);
Class(GanttTaskRelationship,N,N,public);
Method(GanttTaskRelationship,GanttTaskRelationship,N,N,N,N,public);
Method(GanttTaskRelationship,GanttTaskRelationship,N,Y,N,N,public);
Method(GanttTaskRelationship,clone,Object,N,N,N,public);
Method(GanttTaskRelationship,equals,boolean,Y,N,N,public);
Method(GanttTaskRelationship,getManager,TaskManager,N,N,N,private);
Method(GanttTaskRelationship,getPredecessorTask,GanttTask,N,N,N,public);
Method(GanttTaskRelationship,getPredecessorTaskID,int,N,N,N,public);
Method(GanttTaskRelationship,getRelationshipType,int,N,N,N,public);
Method(GanttTaskRelationship,getSuccessorTask,Task,N,N,N,public);
Method(GanttTaskRelationship,getSuccessorTaskID,int,N,N,N,public);
Method(GanttTaskRelationship,setPredecessorTask,void,Y,N,N,public);
Method(GanttTaskRelationship,setRelationshipType,void,Y,N,N,public);
Method(GanttTaskRelationship,setSuccessorTask,void,Y,N,N,public);
Method(GanttTaskRelationship,toString,String,N,N,N,public);
Parameter(GanttGraphicArea,paintDepend,relationshipGanttTaskRelationship,local);
Parameter(GanttTask,getPredecessorsOld,relGanttTaskRelationship,local);
Parameter(GanttTask,getSuccessorsOld,relGanttTaskRelationship,local);
Parameter(GanttTaskRelationship,GanttTaskRelationship,predecessorTaskID,int,declaration);
Parameter(GanttTaskRelationship,GanttTaskRelationship,relationshipType,int,declaration);
Parameter(GanttTaskRelationship,GanttTaskRelationship,successorTaskID,int,declaration);
Parameter(GanttTaskRelationship,GanttTaskRelationship,taskManager,TaskManager,declaration);
Parameter(GanttTaskRelationship,clone,copyRelGanttTaskRelationship,local);
Parameter(GanttTaskRelationship,equals,compareRel,GanttTaskRelationship,declaration);
Parameter(GanttTaskRelationship,setPredecessorTask,predecessorTask,Task,declaration);
Parameter(GanttTaskRelationship,setPredecessorTask,predecessorTaskID,int,declaration);
Parameter(GanttTaskRelationship,setRelationshipType,relationshipType,int,declaration);
Parameter(GanttTaskRelationship,setSuccessorTask,seccessorTaskID,int,declaration);
Parameter(GanttTaskRelationship,setSuccessorTask,successorTask,Task,declaration);
Parameter(GanttTaskRelationship,toString,resString,local);
Parameter(GanttXMLSaver,writeTask,relationshipGanttTaskRelationship,local);
Relation(GanttGraphicArea;paintDepend;getRelationshipType,GanttTaskRelationship,N);
Relation(GanttGraphicArea;paintDepend;getSuccessorTask,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;getPredecessorTask;getManager,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;getPredecessorTask;getTask,TaskManager,int);
Relation(GanttTaskRelationship;getSuccessorTask;getManager,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;getSuccessorTask;getTask,TaskManager,int);
Relation(GanttTaskRelationship;setPredecessorTask;getTaskID,Task,N);
Relation(GanttTaskRelationship;setSuccessorTask;getTaskID,Task,N);
Relation(GanttTaskRelationship;toString;getPredecessorTask,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;toString;getPredecessorTaskID,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;toString;getSuccessorTask,GanttTaskRelationship,N);
Relation(GanttTaskRelationship;toString;getSuccessorTaskID,GanttTaskRelationship,N);
Relation(GanttTree;checkDepend;getSuccessorTaskID,GanttTaskRelationship,N);
Relation(GanttXMLSaver;writeTask;getRelationshipType,GanttTaskRelationship,N);
Relation(GanttXMLSaver;writeTask;getSuccessorTaskID,GanttTaskRelationship,N);
end b267
start b268
Class(TimeFrameImpl,N,static,private);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateHighestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLowestFrameableUnit,TimeFrameImpl,TimeUnit-TimeUnit);
Relation(GregorianTimeUnitStack;calculateLines;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;createHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;calculateLines;fillLine,TimeFrameImpl,LineHeader-LineHeader);
Relation(GregorianTimeUnitStack;fillLine;createLineItem,TimeFrameImpl,Date-Date);
Relation(GregorianTimeUnitStack;fillLine;getUnitCount,TimeFrameImpl,LineHeader-LineHeader-LineItem);
Relation(GregorianTimeUnitStack;getFinishDate;calculateEndDate,TimeFrameImpl,N);
Relation(GregorianTimeUnitStack;getUnitCount;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;getLineHeader,TimeFrameImpl,TimeUnit);
Relation(GregorianTimeUnitStack;getUnitText;getUnitText,TimeFrameImpl,TimeUnit-Date);
end b268
start b269
Attribute(JDKFontLocator,myFontMetricsStorage,FontMetricsStorage,N,private);
Class(JDKFontLocator,N,N,public);
Method(JDKFontLocator,accept,boolean,Y,N,N,public);
Method(JDKFontLocator,getFontRecords,FontRecord[],N,N,N,public);
Method(JDKFontLocator,populateWithTriplets,void,Y,N,N,private);
Parameter(GanttPDFExport,createOptions,locatorJDKFontLocator,local);
Parameter(JDKFontLocator,accept,dir,File,declaration);
Parameter(JDKFontLocator,accept,name,String,declaration);
Parameter(JDKFontLocator,getFontRecords,childrenFile[],local);
Parameter(JDKFontLocator,getFontRecords,fontDirectoryFile,local);
Parameter(JDKFontLocator,getFontRecords,javaHomeString,local);
Parameter(JDKFontLocator,getFontRecords,recordFontRecord,local);
Parameter(JDKFontLocator,getFontRecords,resultArrayList,local);
Parameter(JDKFontLocator,populateWithTriplets,isBoldboolean,local);
Parameter(JDKFontLocator,populateWithTriplets,isItalicboolean,local);
Parameter(JDKFontLocator,populateWithTriplets,monospaceTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,nameString,local);
Parameter(JDKFontLocator,populateWithTriplets,record,FontRecord,declaration);
Parameter(JDKFontLocator,populateWithTriplets,sansTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,serifTripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,tripletFontTriplet,local);
Parameter(JDKFontLocator,populateWithTriplets,ttfFileTTFFileExt,local);
Relation(GanttPDFExport;createOptions;getFontRecords,JDKFontLocator,N);
Relation(JDKFontLocator;getFontRecords;add,ArrayList,Object);
Relation(JDKFontLocator;getFontRecords;endsWith,String,String);
Relation(JDKFontLocator;getFontRecords;getMetricsLocation,FontRecord,N);
Relation(JDKFontLocator;getFontRecords;getProperty,System,String);
Relation(JDKFontLocator;getFontRecords;listFiles,File,FilenameFilter);
Relation(JDKFontLocator;getFontRecords;populateWithTriplets,JDKFontLocator,FontRecord);
Relation(JDKFontLocator;getFontRecords;printStackTrace,Throwable,N);
Relation(JDKFontLocator;getFontRecords;toArray,ArrayList,Object[]);
Relation(JDKFontLocator;getFontRecords;toLowerCase,String,N);
Relation(JDKFontLocator;populateWithTriplets;addTriplet,FontRecord,FontTriplet);
Relation(JDKFontLocator;populateWithTriplets;getFamilyName,TTFFile,N);
Relation(JDKFontLocator;populateWithTriplets;getTTFFile,FontRecord,N);
Relation(JDKFontLocator;populateWithTriplets;indexOf,String,String);
Relation(JDKFontLocator;populateWithTriplets;isBold,TTFFileExt,N);
Relation(JDKFontLocator;populateWithTriplets;isItalic,TTFFileExt,N);
Relation(JDKFontLocator;populateWithTriplets;toLowerCase,String,N);
end b269
start b270
Attribute(CSVSettingsPanel,appli,GanttProject,N,private);
Attribute(ColorSettingsPanel,appli,GanttProject,N,private);
Attribute(DeleteHumanAction,myProjectFrame,GanttProject,N,private);
Attribute(DeprecatedProjectExportData,myProject,GanttProject,N,package);
Attribute(ExportSettingsPanel,appli,GanttProject,N,private);
Attribute(GanttGraphicArea,appli,GanttProject,N,private);
Attribute(GanttProject,EMPTY,ExportFileInfo,static,public);
Attribute(GanttProject,FORMAT_CSV,int,static,public);
Attribute(GanttProject,FORMAT_HTML,int,static,public);
Attribute(GanttProject,FORMAT_JPG,int,static,public);
Attribute(GanttProject,FORMAT_PDF,int,static,public);
Attribute(GanttProject,FORMAT_PNG,int,static,public);
Attribute(GanttProject,FORMAT_XFIG,int,static,public);
Attribute(GanttProject,HUMAN_RESOURCE_MANAGER_ID,String,static,private);
Attribute(GanttProject,area,GanttGraphicArea,N,private);
Attribute(GanttProject,askForSave,boolean,N,public);
Attribute(GanttProject,bDelete,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bDown,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bExport,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bImport,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bInd,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bLink,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNew,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNewTask,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNext,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bOpen,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bPrev,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bPrint,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bProperties,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bSave,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bSaveAs,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUnind,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUnlink,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUp,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomFit,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomIn,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomOut,TestGanttRolloverButton,N,public);
Attribute(GanttProject,byCommandLine,boolean,static,public);
Attribute(GanttProject,documentsMRU,DocumentsMRU,N,private);
Attribute(GanttProject,helpFrame,JFrame,N,private);
Attribute(GanttProject,isApplet,boolean,N,private);
Attribute(GanttProject,isValid,boolean,N,private);
Attribute(GanttProject,language,GanttLanguage,N,private);
Attribute(GanttProject,listOfCalendar,ArrayList,N,private);
Attribute(GanttProject,lookAndFeel,GanttLookAndFeelInfo,N,public);
Attribute(GanttProject,mCalendar,JMenu,N,public);
Attribute(GanttProject,mEdit,JMenu,N,public);
Attribute(GanttProject,mHelp,JMenu,N,public);
Attribute(GanttProject,mHuman,JMenu,N,public);
Attribute(GanttProject,mMRU,JMenu,N,public);
Attribute(GanttProject,mProject,JMenu,N,public);
Attribute(GanttProject,mServer,JMenu,N,public);
Attribute(GanttProject,mTask,JMenu,N,public);
Attribute(GanttProject,managerHash,Hashtable,N,private);
Attribute(GanttProject,maxSizeMRU,int,static,private);
Attribute(GanttProject,miAbout,JMenuItem,N,public);
Attribute(GanttProject,miCopy,JMenuItem,N,public);
Attribute(GanttProject,miCut,JMenuItem,N,public);
Attribute(GanttProject,miDelHuman,JMenuItem,N,public);
Attribute(GanttProject,miDeleteTask,JMenuItem,N,public);
Attribute(GanttProject,miDown,JMenuItem,N,public);
Attribute(GanttProject,miEditCalendar,JMenuItem,N,public);
Attribute(GanttProject,miExport,JMenuItem,N,public);
Attribute(GanttProject,miImport,JMenuItem,N,public);
Attribute(GanttProject,miManual,JMenuItem,N,public);
Attribute(GanttProject,miNew,JMenuItem,N,public);
Attribute(GanttProject,miOpen,JMenuItem,N,public);
Attribute(GanttProject,miOpenURL,JMenuItem,N,public);
Attribute(GanttProject,miOptions,JMenuItem,N,public);
Attribute(GanttProject,miPaste,JMenuItem,N,public);
Attribute(GanttProject,miPreview,JMenuItem,N,public);
Attribute(GanttProject,miPrint,JMenuItem,N,public);
Attribute(GanttProject,miPrjCal,JMenuItem,N,public);
Attribute(GanttProject,miPropHuman,JMenuItem,N,public);
Attribute(GanttProject,miPropertiesTask,JMenuItem,N,public);
Attribute(GanttProject,miQuit,JMenuItem,N,public);
Attribute(GanttProject,miSave,JMenuItem,N,public);
Attribute(GanttProject,miSaveAs,JMenuItem,N,public);
Attribute(GanttProject,miSaveAsURL,JMenuItem,N,public);
Attribute(GanttProject,miSendMailHuman,JMenuItem,N,public);
Attribute(GanttProject,miTips,JMenuItem,N,public);
Attribute(GanttProject,miUp,JMenuItem,N,public);
Attribute(GanttProject,miWebPage,JMenuItem,N,public);
Attribute(GanttProject,myCachedFacade,TaskContainmentHierarchyFacadeImpl,N,private);
Attribute(GanttProject,myFacadeInvalidator,FacadeInvalidator,N,private);
Attribute(GanttProject,myFile,File,N,public);
Attribute(GanttProject,myFormat,int,N,public);
Attribute(GanttProject,myNewArtefactAction,NewArtefactAction,N,private);
Attribute(GanttProject,myNewHumanAction,NewHumanAction,N,private);
Attribute(GanttProject,myNewTaskAction,NewTaskAction,N,private);
Attribute(GanttProject,myResourceActions,ResourceActionSet,N,private);
Attribute(GanttProject,myRootTask,Task,N,private);
Attribute(GanttProject,myStorageOptions,GanttExportSettings,N,public);
Attribute(GanttProject,myTask2treeNode,Map,N,private);
Attribute(GanttProject,myTaskManager,TaskManager,N,private);
Attribute(GanttProject,myUIConfiguration,UIConfiguration,N,private);
Attribute(GanttProject,options,GanttOptions,N,private);
Attribute(GanttProject,prjInfos,PrjInfos,N,public);
Attribute(GanttProject,projectDocument,Document,N,public);
Attribute(GanttProject,resp,GanttResourcePanel,N,private);
Attribute(GanttProject,statusBar,GanttStatusBar,N,private);
Attribute(GanttProject,tabpane,JTabbedPane,N,public);
Attribute(GanttProject,toolBar,JToolBar,N,private);
Attribute(GanttProject,tree,GanttTree,N,private);
Attribute(GanttProject,version,String,static,public);
Attribute(GanttResourcePanel,appli,GanttProject,N,package);
Attribute(GanttTXTOpen,prj,GanttProject,N,package);
Attribute(GanttTree,appli,GanttProject,N,private);
Attribute(GanttXMLOpen,prj,GanttProject,N,package);
Attribute(GeneralDialog,appli,GanttProject,N,protected);
Attribute(HTMLSettingsPanel,appli,GanttProject,N,private);
Attribute(ImportResources,myproject,GanttProject,N,private);
Attribute(LanguageSettingsPanel,appli,GanttProject,N,private);
Attribute(LnFSettingsPanel,appli,GanttProject,N,private);
Attribute(OpenFileDialog,myproject,GanttProject,N,private);
Attribute(PDFSettingsPanel,appli,GanttProject,N,private);
Attribute(ParametersSettingsPanel,appli,GanttProject,N,private);
Attribute(ResourceActionSet,myProjectFrame,GanttProject,N,private);
Attribute(ResourceLoadGraphicArea,appli,GanttProject,N,private);
Attribute(RolesSettingsPanel,appli,GanttProject,N,private);
Attribute(TipsDialog,appli,GanttProject,N,package);
Class(GanttProject,N,N,public);
Generalisation(GanttProject,JFrame);
Method(DeleteHumanAction,getProjectFrame,GanttProject,N,N,N,private);
Method(GanttProject,ExportFileInfo,N,Y,N,N,public);
Method(GanttProject,FacadeInvalidator,N,Y,N,N,public);
Method(GanttProject,GanttProject,N,Y,N,N,public);
Method(GanttProject,TaskContainmentHierarchyFacadeImpl,N,Y,N,N,public);
Method(GanttProject,actionPerformed,void,Y,N,N,public);
Method(GanttProject,addButtons,void,Y,N,N,public);
Method(GanttProject,applyButtonOptions,void,N,N,N,public);
Method(GanttProject,changeLanguage,void,N,N,N,public);
Method(GanttProject,changeLanguageOfMenu,void,N,N,N,private);
Method(GanttProject,changeLookAndFeel,void,Y,N,N,public);
Method(GanttProject,changeMenuLabel,JMenu,Y,N,N,public);
Method(GanttProject,changeMenuLabel,JMenuItem,Y,N,N,public);
Method(GanttProject,changeWorkingDirectory,void,Y,N,N,public);
Method(GanttProject,checkCurrentProject,boolean,N,N,N,private);
Method(GanttProject,checkProjectFile,boolean,Y,N,static,package);
Method(GanttProject,closeProject,void,N,N,N,private);
Method(GanttProject,correctLabel,String,Y,N,static,public);
Method(GanttProject,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Method(GanttProject,createNewItem,JMenuItem,Y,N,N,public);
Method(GanttProject,createNewItemText,JMenuItem,Y,N,N,public);
Method(GanttProject,deleteTasks,void,N,N,N,public);
Method(GanttProject,doExport,void,Y,N,N,private);
Method(GanttProject,downDatas,void,N,N,N,private);
Method(GanttProject,exitForm,void,Y,N,N,private);
Method(GanttProject,export,void,N,N,N,public);
Method(GanttProject,exportCSV,void,Y,N,static,private);
Method(GanttProject,exportJPG,void,Y,N,static,private);
Method(GanttProject,exportPDF,void,Y,N,static,private);
Method(GanttProject,exportPNG,void,Y,N,static,private);
Method(GanttProject,exportProject,void,Y,N,static,private);
Method(GanttProject,exportXFIG,void,Y,N,static,private);
Method(GanttProject,getActiveAction,AbstractAction,N,N,N,public);
Method(GanttProject,getArea,GanttGraphicArea,N,N,N,public);
Method(GanttProject,getContainer,Task,Y,N,N,public);
Method(GanttProject,getDefaultColor,Color,N,N,N,public);
Method(GanttProject,getDescription,String,N,N,N,public);
Method(GanttProject,getDisplayName,String,Y,N,N,private);
Method(GanttProject,getExceptionReport,String,Y,N,static,private);
Method(GanttProject,getHumanResourceManager,ResourceManager,N,N,N,public);
Method(GanttProject,getI18n,GanttLanguage,N,N,N,public);
Method(GanttProject,getLanguage,GanttLanguage,N,N,N,private);
Method(GanttProject,getNestedTasks,Task[],Y,N,N,public);
Method(GanttProject,getOptions,GanttOptions,N,N,N,public);
Method(GanttProject,getOrganization,String,N,N,N,public);
Method(GanttProject,getProjectName,String,N,N,N,public);
Method(GanttProject,getResourceActions,ResourceActionSet,N,N,N,private);
Method(GanttProject,getResourcePanel,GanttResourcePanel,N,N,N,public);
Method(GanttProject,getRoleManager,RoleManager,N,N,N,public);
Method(GanttProject,getRoot,Task,N,N,N,public);
Method(GanttProject,getStatusBar,GanttStatusBar,N,N,N,public);
Method(GanttProject,getTaskManager,TaskManager,N,N,N,public);
Method(GanttProject,getToolTip,String,Y,N,static,public);
Method(GanttProject,getTree,GanttTree,N,N,N,private);
Method(GanttProject,getUIConfiguration,UIConfiguration,N,N,N,public);
Method(GanttProject,getWebLink,String,N,N,N,public);
Method(GanttProject,getXslDir,String,N,N,N,public);
Method(GanttProject,getXslFo,String,N,N,N,public);
Method(GanttProject,importcbk,void,N,N,N,public);
Method(GanttProject,isValid,boolean,N,N,N,package);
Method(GanttProject,launchOptionsDialog,void,N,N,N,public);
Method(GanttProject,linkRelationships,void,N,N,N,public);
Method(GanttProject,main,void,Y,N,static,public);
Method(GanttProject,newProject,void,N,N,N,public);
Method(GanttProject,newTask,Task,N,N,N,public);
Method(GanttProject,openDocument,void,Y,N,N,private);
Method(GanttProject,openFile,void,N,N,N,public);
Method(GanttProject,openStartupDocument,void,Y,N,N,public);
Method(GanttProject,openURL,void,N,N,N,public);
Method(GanttProject,openURL,void,Y,N,N,public);
Method(GanttProject,openWebPage,void,N,N,N,public);
Method(GanttProject,openXMLStream,void,Y,N,N,public);
Method(GanttProject,previewPrint,void,N,N,N,public);
Method(GanttProject,printProject,void,N,N,N,public);
Method(GanttProject,propertiesTask,void,N,N,N,public);
Method(GanttProject,propertiesTask,void,Y,N,N,public);
Method(GanttProject,quitApplication,void,N,N,N,public);
Method(GanttProject,refreshProjectInfos,void,N,N,N,public);
Method(GanttProject,reset,void,N,N,N,package);
Method(GanttProject,resourceAdded,void,Y,N,N,public);
Method(GanttProject,resourcesRemoved,void,Y,N,N,public);
Method(GanttProject,restoreOptions,void,N,N,N,public);
Method(GanttProject,saveAsProject,boolean,N,N,N,public);
Method(GanttProject,saveAsURLProject,boolean,N,N,N,public);
Method(GanttProject,saveAsURLProject,boolean,Y,N,N,public);
Method(GanttProject,saveProject,void,N,N,N,public);
Method(GanttProject,saveProject,void,Y,N,N,public);
Method(GanttProject,selectExportFile,ExportFileInfo,Y,N,N,private);
Method(GanttProject,setAskForSave,void,Y,N,N,public);
Method(GanttProject,setButtonText,void,N,N,N,public);
Method(GanttProject,setDescription,void,Y,N,N,public);
Method(GanttProject,setMemonic,void,N,N,N,public);
Method(GanttProject,setOrganization,void,Y,N,N,public);
Method(GanttProject,setProjectName,void,Y,N,N,public);
Method(GanttProject,setResourcePanelToGraphicArea,void,N,N,N,public);
Method(GanttProject,setWebLink,void,Y,N,N,public);
Method(GanttProject,showNewProjectWizard,void,N,N,N,private);
Method(GanttProject,stateChanged,void,Y,N,N,public);
Method(GanttProject,treeNodesChanged,void,Y,N,N,public);
Method(GanttProject,treeNodesInserted,void,Y,N,N,public);
Method(GanttProject,treeNodesRemoved,void,Y,N,N,public);
Method(GanttProject,treeStructureChanged,void,Y,N,N,public);
Method(GanttProject,unlinkRelationships,void,N,N,N,public);
Method(GanttProject,upDatas,void,N,N,N,private);
Method(GanttProject,updateMenuMRU,void,N,N,N,private);
Method(GanttProject,usage,void,N,N,static,private);
Method(GanttProject,windowClosing,void,Y,N,N,public);
Parameter(AboutAuthorPanel,AboutAuthorPanel,parent,GanttProject,declaration);
Parameter(AboutDialog,AboutDialog,parent,GanttProject,declaration);
Parameter(AboutJavaInfosPanel,AboutJavaInfosPanel,parent,GanttProject,declaration);
Parameter(AboutLibraryPanel,AboutLibraryPanel,parent,GanttProject,declaration);
Parameter(AboutLicensePanel,AboutLicensePanel,parent,GanttProject,declaration);
Parameter(AboutPanel,AboutPanel,parent,GanttProject,declaration);
Parameter(CSVSettingsPanel,CSVSettingsPanel,parent,GanttProject,declaration);
Parameter(ColorSettingsPanel,ColorSettingsPanel,parent,GanttProject,declaration);
Parameter(ConnectionPanel,ConnectionPanel,parent,GanttProject,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,projectFrame,GanttProject,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myProject,GanttProject,declaration);
Parameter(ExportSettingsPanel,ExportSettingsPanel,parent,GanttProject,declaration);
Parameter(GanttApplet,actionPerformed,ganttFrameGanttProject,local);
Parameter(GanttGraphicArea,GanttGraphicArea,app,GanttProject,declaration);
Parameter(GanttHTMLExport,save,prj,GanttProject,declaration);
Parameter(GanttHTMLExport,writeResources,appli,GanttProject,declaration);
Parameter(GanttPreviewPrint,GanttPreviewPrint,parent,GanttProject,declaration);
Parameter(GanttProject,ExportFileInfo,file,File,declaration);
Parameter(GanttProject,ExportFileInfo,format,int,declaration);
Parameter(GanttProject,ExportFileInfo,options,GanttExportSettings,declaration);
Parameter(GanttProject,FacadeInvalidator,treeModel,TreeModel,declaration);
Parameter(GanttProject,GanttProject,barJMenuBar,local);
Parameter(GanttProject,GanttProject,butGanttImagePanel,local);
Parameter(GanttProject,GanttProject,documentDocument,local);
Parameter(GanttProject,GanttProject,filename,String,declaration);
Parameter(GanttProject,GanttProject,iconImageIcon,local);
Parameter(GanttProject,GanttProject,isApplet,boolean,declaration);
Parameter(GanttProject,GanttProject,leftJPanel,local);
Parameter(GanttProject,GanttProject,screenSizeDimension,local);
Parameter(GanttProject,GanttProject,splitPaneJSplitPane,local);
Parameter(GanttProject,GanttProject,taskConfigTaskManagerConfig,local);
Parameter(GanttProject,GanttProject,tipsTipsDialog,local);
Parameter(GanttProject,GanttProject,windowSizeDimension,local);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,allTasksArrayList,local);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,taskTask,local);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,tree,GanttTree,declaration);
Parameter(GanttProject,TaskContainmentHierarchyFacadeImpl,treeNodeDefaultMutableTreeNode,local);
Parameter(GanttProject,actionPerformed,agpAboutDialog,local);
Parameter(GanttProject,actionPerformed,argString,local);
Parameter(GanttProject,actionPerformed,dialogCalendarGanttDialogCalendar,local);
Parameter(GanttProject,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttProject,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttProject,actionPerformed,gdiGanttDialogInfo,local);
Parameter(GanttProject,actionPerformed,iconImageIcon,local);
Parameter(GanttProject,actionPerformed,tTask,local);
Parameter(GanttProject,actionPerformed,tipsTipsDialog,local);
Parameter(GanttProject,addButtons,contextProjectResource[],local);
Parameter(GanttProject,addButtons,gdiGanttDialogInfo,local);
Parameter(GanttProject,addButtons,toolBar,JToolBar,declaration);
Parameter(GanttProject,changeLookAndFeel,infoGanttLookAndFeelInfo,local);
Parameter(GanttProject,changeLookAndFeel,lookAndFeel,GanttLookAndFeelInfo,declaration);
Parameter(GanttProject,changeMenuLabel,indexint,local);
Parameter(GanttProject,changeMenuLabel,label,String,declaration);
Parameter(GanttProject,changeMenuLabel,menu,JMenu,declaration);
Parameter(GanttProject,changeMenuLabel,menu,JMenuItem,declaration);
Parameter(GanttProject,changeWorkingDirectory,newWorkDir,String,declaration);
Parameter(GanttProject,checkCurrentProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,checkCurrentProject,gdiSaveErrorGanttDialogInfo,local);
Parameter(GanttProject,checkCurrentProject,trySaveboolean,local);
Parameter(GanttProject,checkProjectFile,arg,String[],declaration);
Parameter(GanttProject,correctLabel,indexint,local);
Parameter(GanttProject,correctLabel,label,String,declaration);
Parameter(GanttProject,createNewItem,icon,String,declaration);
Parameter(GanttProject,createNewItem,itemJMenuItem,local);
Parameter(GanttProject,createNewItem,label,String,declaration);
Parameter(GanttProject,createNewItemText,itemJMenuItem,local);
Parameter(GanttProject,createNewItemText,label,String,declaration);
Parameter(GanttProject,deleteTasks,algAdjustTaskBoundsAlgorithm,local);
Parameter(GanttProject,deleteTasks,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttProject,deleteTasks,fatherDefaultMutableTreeNode,local);
Parameter(GanttProject,deleteTasks,gdiGanttDialogInfo,local);
Parameter(GanttProject,deleteTasks,taskFatherGanttTask,local);
Parameter(GanttProject,deleteTasks,ttaskTask,local);
Parameter(GanttProject,doExport,boolGanttExportSettings,local);
Parameter(GanttProject,doExport,exceptionReportString,local);
Parameter(GanttProject,doExport,exportDataDeprecatedProjectExportData,local);
Parameter(GanttProject,doExport,filenameString,local);
Parameter(GanttProject,doExport,gdiGanttDialogInfo,local);
Parameter(GanttProject,doExport,info,ExportFileInfo,declaration);
Parameter(GanttProject,doExport,processorProjectExportProcessor,local);
Parameter(GanttProject,doExport,saverGanttCSVExport,local);
Parameter(GanttProject,doExport,saverGanttXFIGSaver,local);
Parameter(GanttProject,exitForm,evt,WindowEvent,declaration);
Parameter(GanttProject,export,infoExportFileInfo,local);
Parameter(GanttProject,exportCSV,args,String[],declaration);
Parameter(GanttProject,exportCSV,infoExportFileInfo,local);
Parameter(GanttProject,exportCSV,projectGanttProject,local);
Parameter(GanttProject,exportCSV,targetFileFile,local);
Parameter(GanttProject,exportJPG,args,String[],declaration);
Parameter(GanttProject,exportJPG,infoExportFileInfo,local);
Parameter(GanttProject,exportJPG,projectGanttProject,local);
Parameter(GanttProject,exportJPG,targetFileFile,local);
Parameter(GanttProject,exportPDF,args,String[],declaration);
Parameter(GanttProject,exportPDF,exportFileString,local);
Parameter(GanttProject,exportPDF,infoExportFileInfo,local);
Parameter(GanttProject,exportPDF,projectGanttProject,local);
Parameter(GanttProject,exportPDF,targetFileFile,local);
Parameter(GanttProject,exportPNG,args,String[],declaration);
Parameter(GanttProject,exportPNG,infoExportFileInfo,local);
Parameter(GanttProject,exportPNG,projectGanttProject,local);
Parameter(GanttProject,exportPNG,targetFileFile,local);
Parameter(GanttProject,exportProject,args,String[],declaration);
Parameter(GanttProject,exportProject,exportPathString,local);
Parameter(GanttProject,exportProject,indexString,local);
Parameter(GanttProject,exportProject,infoExportFileInfo,local);
Parameter(GanttProject,exportProject,projectGanttProject,local);
Parameter(GanttProject,exportProject,targetDirFile,local);
Parameter(GanttProject,exportProject,targetFileFile,local);
Parameter(GanttProject,exportXFIG,args,String[],declaration);
Parameter(GanttProject,exportXFIG,infoExportFileInfo,local);
Parameter(GanttProject,exportXFIG,projectGanttProject,local);
Parameter(GanttProject,exportXFIG,targetFileFile,local);
Parameter(GanttProject,getContainer,containerNodeDefaultMutableTreeNode,local);
Parameter(GanttProject,getContainer,nestedTask,Task,declaration);
Parameter(GanttProject,getContainer,treeNodeDefaultMutableTreeNode,local);
Parameter(GanttProject,getDisplayName,resources,ProjectResource[],declaration);
Parameter(GanttProject,getDisplayName,resultStringBuffer,local);
Parameter(GanttProject,getExceptionReport,e,Exception,declaration);
Parameter(GanttProject,getExceptionReport,resultStringBuffer,local);
Parameter(GanttProject,getExceptionReport,stringWriterStringWriter,local);
Parameter(GanttProject,getExceptionReport,writerPrintWriter,local);
Parameter(GanttProject,getHumanResourceManager,resultResourceManager,local);
Parameter(GanttProject,getNestedTasks,container,Task,declaration);
Parameter(GanttProject,getNestedTasks,listArrayList,local);
Parameter(GanttProject,getNestedTasks,nextDefaultMutableTreeNode,local);
Parameter(GanttProject,getNestedTasks,resultTask[],local);
Parameter(GanttProject,getNestedTasks,treeNodeDefaultMutableTreeNode,local);
Parameter(GanttProject,getToolTip,msg,String,declaration);
Parameter(GanttProject,importcbk,allocationHandlerAllocationTagHandler,local);
Parameter(GanttProject,importcbk,bMergeboolean,local);
Parameter(GanttProject,importcbk,dependencyHandlerDependencyTagHandler,local);
Parameter(GanttProject,importcbk,documentDocument,local);
Parameter(GanttProject,importcbk,fcJFileChooser,local);
Parameter(GanttProject,importcbk,filefiltersFileFilter[],local);
Parameter(GanttProject,importcbk,ganFilterFileFilter,local);
Parameter(GanttProject,importcbk,gdiGanttDialogInfo,local);
Parameter(GanttProject,importcbk,hrManagerResourceManager,local);
Parameter(GanttProject,importcbk,openerGanttTXTOpen,local);
Parameter(GanttProject,importcbk,openerGanttXMLOpen,local);
Parameter(GanttProject,importcbk,resourceHandlerResourceTagHandler,local);
Parameter(GanttProject,importcbk,returnValint,local);
Parameter(GanttProject,importcbk,roleManagerRoleManager,local);
Parameter(GanttProject,importcbk,selectedFilterFileFilter,local);
Parameter(GanttProject,importcbk,txtFilterFileFilter,local);
Parameter(GanttProject,launchOptionsDialog,dialogOptionsSettingsDialog,local);
Parameter(GanttProject,linkRelationships,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttProject,linkRelationships,firstTaskGanttTask,local);
Parameter(GanttProject,linkRelationships,secondTaskGanttTask,local);
Parameter(GanttProject,main,arg,String[],declaration);
Parameter(GanttProject,main,ganttFrameGanttProject,local);
Parameter(GanttProject,main,optionsGanttOptions,local);
Parameter(GanttProject,main,splashGanttSplash,local);
Parameter(GanttProject,newTask,alg2RecalculateTaskCompletionPercentageAlgorithm,local);
Parameter(GanttProject,newTask,algAdjustTaskBoundsAlgorithm,local);
Parameter(GanttProject,newTask,calGanttCalendar,local);
Parameter(GanttProject,newTask,currentGanttTask,local);
Parameter(GanttProject,newTask,langGanttLanguage,local);
Parameter(GanttProject,newTask,nameOfTaskString,local);
Parameter(GanttProject,newTask,nodeDefaultMutableTreeNode,local);
Parameter(GanttProject,newTask,taskGanttTask,local);
Parameter(GanttProject,newTask,taskNodeDefaultMutableTreeNode,local);
Parameter(GanttProject,openDocument,allocationHandlerAllocationTagHandler,local);
Parameter(GanttProject,openDocument,dependencyHandlerDependencyTagHandler,local);
Parameter(GanttProject,openDocument,document,Document,declaration);
Parameter(GanttProject,openDocument,gdiGanttDialogInfo,local);
Parameter(GanttProject,openDocument,hrManagerResourceManager,local);
Parameter(GanttProject,openDocument,inputStreamInputStream,local);
Parameter(GanttProject,openDocument,lockedboolean,local);
Parameter(GanttProject,openDocument,openerGanttXMLOpen,local);
Parameter(GanttProject,openDocument,resourceHandlerResourceTagHandler,local);
Parameter(GanttProject,openDocument,roleManagerRoleManager,local);
Parameter(GanttProject,openDocument,rolesHandlerRoleTagHandler,local);
Parameter(GanttProject,openDocument,taskManagerTaskManager,local);
Parameter(GanttProject,openFile,fcJFileChooser,local);
Parameter(GanttProject,openFile,filefiltersFileFilter[],local);
Parameter(GanttProject,openFile,ganttFilterFileFilter,local);
Parameter(GanttProject,openFile,returnValint,local);
Parameter(GanttProject,openStartupDocument,document,Document,declaration);
Parameter(GanttProject,openStartupDocument,documentDocument,local);
Parameter(GanttProject,openStartupDocument,gdiGanttDialogInfo,local);
Parameter(GanttProject,openStartupDocument,path,String,declaration);
Parameter(GanttProject,openURL,gdiGanttDialogInfo,local);
Parameter(GanttProject,openURL,lastDocument,Document,declaration);
Parameter(GanttProject,openURL,openDocDocument,local);
Parameter(GanttProject,openURL,ucGanttURLChooser,local);
Parameter(GanttProject,openWebPage,gdiGanttDialogInfo,local);
Parameter(GanttProject,openXMLStream,allocationHandlerAllocationTagHandler,local);
Parameter(GanttProject,openXMLStream,dependencyHandlerDependencyTagHandler,local);
Parameter(GanttProject,openXMLStream,gdiGanttDialogInfo,local);
Parameter(GanttProject,openXMLStream,hrManagerResourceManager,local);
Parameter(GanttProject,openXMLStream,ins,InputStream,declaration);
Parameter(GanttProject,openXMLStream,openerGanttXMLOpen,local);
Parameter(GanttProject,openXMLStream,path,String,declaration);
Parameter(GanttProject,openXMLStream,resourceHandlerResourceTagHandler,local);
Parameter(GanttProject,openXMLStream,roleManagerRoleManager,local);
Parameter(GanttProject,previewPrint,previewGanttPreviewPrint,local);
Parameter(GanttProject,printProject,boolGanttExportSettings,local);
Parameter(GanttProject,propertiesTask,node,DefaultMutableTreeNode,declaration);
Parameter(GanttProject,propertiesTask,pdGanttDialogProperties,local);
Parameter(GanttProject,propertiesTask,tGanttTask,local);
Parameter(GanttProject,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttProject,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(GanttProject,saveAsProject,fcJFileChooser,local);
Parameter(GanttProject,saveAsProject,filefiltersFileFilter[],local);
Parameter(GanttProject,saveAsProject,ganttFilterFileFilter,local);
Parameter(GanttProject,saveAsProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,saveAsProject,projectfileString,local);
Parameter(GanttProject,saveAsProject,returnValint,local);
Parameter(GanttProject,saveAsURLProject,document,Document,declaration);
Parameter(GanttProject,saveAsURLProject,saveDocumentDocument,local);
Parameter(GanttProject,saveAsURLProject,ucGanttURLChooser,local);
Parameter(GanttProject,saveProject,document,Document,declaration);
Parameter(GanttProject,saveProject,filepathString,local);
Parameter(GanttProject,saveProject,gdiGanttDialogInfo,local);
Parameter(GanttProject,saveProject,saverGanttXMLSaver,local);
Parameter(GanttProject,selectExportFile,csvFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,currentFilter,FileFilter,declaration);
Parameter(GanttProject,selectExportFile,fcJFileChooser,local);
Parameter(GanttProject,selectExportFile,figFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,fileFile,local);
Parameter(GanttProject,selectExportFile,filefiltersFileFilter[],local);
Parameter(GanttProject,selectExportFile,filenameString,local);
Parameter(GanttProject,selectExportFile,gdiGanttDialogInfo,local);
Parameter(GanttProject,selectExportFile,htmlFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,jpgFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,pdfFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,pngFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,resultExportFileInfo,local);
Parameter(GanttProject,selectExportFile,returnValint,local);
Parameter(GanttProject,selectExportFile,selectedFilterFileFilter,local);
Parameter(GanttProject,selectExportFile,typeint,local);
Parameter(GanttProject,setAskForSave,afs,boolean,declaration);
Parameter(GanttProject,setAskForSave,titleString,local);
Parameter(GanttProject,setDescription,description,String,declaration);
Parameter(GanttProject,setMemonic,MENU_MASKint,local);
Parameter(GanttProject,setOrganization,organization,String,declaration);
Parameter(GanttProject,setProjectName,projectName,String,declaration);
Parameter(GanttProject,setWebLink,webLink,String,declaration);
Parameter(GanttProject,showNewProjectWizard,wizardNewProjectWizard,local);
Parameter(GanttProject,stateChanged,e,ChangeEvent,declaration);
Parameter(GanttProject,treeNodesChanged,e,TreeModelEvent,declaration);
Parameter(GanttProject,treeNodesInserted,e,TreeModelEvent,declaration);
Parameter(GanttProject,treeNodesRemoved,e,TreeModelEvent,declaration);
Parameter(GanttProject,treeStructureChanged,e,TreeModelEvent,declaration);
Parameter(GanttProject,unlinkRelationships,cdmtnDefaultMutableTreeNode[],local);
Parameter(GanttProject,unlinkRelationships,tGanttTask,local);
Parameter(GanttProject,updateMenuMRU,documentDocument,local);
Parameter(GanttProject,updateMenuMRU,indexint,local);
Parameter(GanttProject,updateMenuMRU,iteratorIterator,local);
Parameter(GanttProject,updateMenuMRU,miJMenuItem,local);
Parameter(GanttProject,windowClosing,evt,WindowEvent,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,prj,GanttProject,declaration);
Parameter(GanttResourcePanel,deleteHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,propertiesHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,sendMail,parent,GanttProject,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,appli,GanttProject,declaration);
Parameter(GanttTree,GanttTree,app,GanttProject,declaration);
Parameter(GanttURLChooser,GanttURLChooser,parent,GanttProject,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,appli,GanttProject,declaration);
Parameter(GeneralDialog,GeneralDialog,parent,GanttProject,declaration);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,parent,GanttProject,declaration);
Parameter(ImportResources,ImportResources,project,GanttProject,declaration);
Parameter(LanguageSettingsPanel,LanguageSettingsPanel,parent,GanttProject,declaration);
Parameter(LnFSettingsPanel,LnFSettingsPanel,parent,GanttProject,declaration);
Parameter(OpenFileDialog,OpenFileDialog,project,GanttProject,declaration);
Parameter(PDFSettingsPanel,PDFSettingsPanel,parent,GanttProject,declaration);
Parameter(ParametersSettingsPanel,ParametersSettingsPanel,parent,GanttProject,declaration);
Parameter(ResourceActionSet,ResourceActionSet,projectFrame,GanttProject,declaration);
Parameter(ResourceLoadGraphicArea,ResourceLoadGraphicArea,app,GanttProject,declaration);
Parameter(RolesSettingsPanel,RolesSettingsPanel,parent,GanttProject,declaration);
Parameter(ServerDialog,ServerDialog,parent,GanttProject,declaration);
Parameter(SettingsDialog,SettingsDialog,parent,GanttProject,declaration);
Parameter(WelcomeSettingsPanel,WelcomeSettingsPanel,parent,GanttProject,declaration);
Relation(AboutDialog;AboutDialog;correctLabel,GanttProject,String);
Relation(AboutDialog;constructSections;correctLabel,GanttProject,String);
Relation(AboutDialog;valueChanged;correctLabel,GanttProject,String);
Relation(AboutPanel;AboutPanel;correctLabel,GanttProject,String);
Relation(AboutPanel;AboutPanel;getToolTip,GanttProject,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;correctLabel,GanttProject,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;separatCharHasChange;getOptions,GanttProject,N);
Relation(ColorSettingsPanel;ColorSettingsPanel;correctLabel,GanttProject,String);
Relation(ColorSettingsPanel;applyChanges;getUIConfiguration,GanttProject,N);
Relation(ColorSettingsPanel;initialize;getUIConfiguration,GanttProject,N);
Relation(ConnectionPanel;ConnectionPanel;correctLabel,GanttProject,String);
Relation(DeleteHumanAction;DeleteHumanAction;correctLabel,GanttProject,String);
Relation(DeleteHumanAction;actionPerformed;refreshProjectInfos,GanttProject,N);
Relation(DeleteHumanAction;actionPerformed;setAskForSave,GanttProject,boolean);
Relation(ExportSettingsPanel;ExportSettingsPanel;correctLabel,GanttProject,String);
Relation(ExportSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(ExportSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(GanttApplet;actionPerformed;openXMLStream,GanttProject,InputStream-String);
Relation(GanttDialogCalendar;GanttDialogCalendar;correctLabel,GanttProject,String);
Relation(GanttDialogCalendar;GanttDialogCalendar;getToolTip,GanttProject,String);
Relation(GanttDialogPerson;GanttDialogPerson;correctLabel,GanttProject,String);
Relation(GanttGraphicArea;GanttGraphicArea;getOptions,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;getResourcePanel,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;propertiesTask,GanttProject,N);
Relation(GanttGraphicArea;GanttGraphicArea;setAskForSave,GanttProject,boolean);
Relation(GanttGraphicArea;calcProjectBegAndEnd;getResourcePanel,GanttProject,N);
Relation(GanttHTMLExport;save;correctLabel,GanttProject,String);
Relation(GanttHTMLExport;save;getXslDir,GanttProject,N);
Relation(GanttHTMLExport;save;writeResources,GanttHTMLExport,GanttProject);
Relation(GanttHTMLExport;writeResources;getHumanResourceManager,GanttProject,N);
Relation(GanttPDFExport;save;correctLabel,GanttProject,String);
Relation(GanttPanelDate;GanttPanelDate;getToolTip,GanttProject,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;correctLabel,GanttProject,String);
Relation(GanttPreviewPrint;GanttPreviewPrint;getToolTip,GanttProject,String);
Relation(GanttProject;FacadeInvalidator;addTreeModelListener,TreeModel,TreeModelListener);
Relation(GanttProject;GanttProject;add,Container,Component-Object);
Relation(GanttProject;GanttProject;add,JMenu,Action);
Relation(GanttProject;GanttProject;add,JMenu,JMenuItem);
Relation(GanttProject;GanttProject;add,JMenuBar,JMenu);
Relation(GanttProject;GanttProject;addButtons,GanttProject,JToolBar);
Relation(GanttProject;GanttProject;addChangeListener,JTabbedPane,ChangeListener);
Relation(GanttProject;GanttProject;addSeparator,JMenu,N);
Relation(GanttProject;GanttProject;addTab,JTabbedPane,String-Icon-Component);
Relation(GanttProject;GanttProject;addWindowListener,Window,WindowListener);
Relation(GanttProject;GanttProject;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttProject;GanttProject;changeLanguage,GanttProject,N);
Relation(GanttProject;GanttProject;changeLookAndFeel,GanttProject,GanttLookAndFeelInfo);
Relation(GanttProject;GanttProject;correctLabel,GanttProject,String);
Relation(GanttProject;GanttProject;createDocument,DocumentCreator,String);
Relation(GanttProject;GanttProject;createNewItem,GanttProject,String);
Relation(GanttProject;GanttProject;exitForm,GanttProject,WindowEvent);
Relation(GanttProject;GanttProject;forName,Class,String);
Relation(GanttProject;GanttProject;getButtonShow,GanttOptions,N);
Relation(GanttProject;GanttProject;getClass,Object,N);
Relation(GanttProject;GanttProject;getComponentOrientation,GanttLanguage,N);
Relation(GanttProject;GanttProject;getContentPane,JFrame,N);
Relation(GanttProject;GanttProject;getDefaultColor,GanttOptions,N);
Relation(GanttProject;GanttProject;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttProject;GanttProject;getDefaultToolkit,Toolkit,N);
Relation(GanttProject;GanttProject;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(GanttProject;GanttProject;getHeight,GanttOptions,N);
Relation(GanttProject;GanttProject;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;GanttProject;getImage,ImageIcon,N);
Relation(GanttProject;GanttProject;getInstance,GanttLanguage,N);
Relation(GanttProject;GanttProject;getJTree,GanttTree,N);
Relation(GanttProject;GanttProject;getKeyStroke,KeyStroke,String);
Relation(GanttProject;GanttProject;getLanguage,GanttOptions,N);
Relation(GanttProject;GanttProject;getLnfInfos,GanttOptions,N);
Relation(GanttProject;GanttProject;getLockDAVMinutes,GanttOptions,N);
Relation(GanttProject;GanttProject;getMessage,Throwable,N);
Relation(GanttProject;GanttProject;getModel,JTree,N);
Relation(GanttProject;GanttProject;getOpenTips,GanttOptions,N);
Relation(GanttProject;GanttProject;getOrientation,JToolBar,N);
Relation(GanttProject;GanttProject;getPreferredSize,Container,N);
Relation(GanttProject;GanttProject;getPreferredSize,JComponent,N);
Relation(GanttProject;GanttProject;getResource,Class<>,String);
Relation(GanttProject;GanttProject;getResourcePanel,GanttProject,N);
Relation(GanttProject;GanttProject;getRoleManager,GanttProject,N);
Relation(GanttProject;GanttProject;getScreenSize,Toolkit,N);
Relation(GanttProject;GanttProject;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;GanttProject;getShowStatusBar,GanttOptions,N);
Relation(GanttProject;GanttProject;getTaskColor,UIConfiguration,N);
Relation(GanttProject;GanttProject;getTaskManager,GanttProject,N);
Relation(GanttProject;GanttProject;getText,GanttLanguage,String);
Relation(GanttProject;GanttProject;getToolBarPosition,GanttOptions,N);
Relation(GanttProject;GanttProject;getToolTip,GanttProject,String);
Relation(GanttProject;GanttProject;getUIConfiguration,GanttOptions,N);
Relation(GanttProject;GanttProject;getWidth,Dimension,N);
Relation(GanttProject;GanttProject;getWidth,GanttOptions,N);
Relation(GanttProject;GanttProject;getX,GanttOptions,N);
Relation(GanttProject;GanttProject;getY,GanttOptions,N);
Relation(GanttProject;GanttProject;isLoaded,GanttOptions,N);
Relation(GanttProject;GanttProject;isValid,FacadeInvalidator,N);
Relation(GanttProject;GanttProject;load,GanttOptions,N);
Relation(GanttProject;GanttProject;newInstance,Access,Factory-TaskManagerConfig);
Relation(GanttProject;GanttProject;newInstance,Class<>,N);
Relation(GanttProject;GanttProject;openDocument,GanttProject,Document);
Relation(GanttProject;GanttProject;pack,Window,N);
Relation(GanttProject;GanttProject;println,PrintStream,String);
Relation(GanttProject;GanttProject;reset,FacadeInvalidator,N);
Relation(GanttProject;GanttProject;setAccelerator,JMenuItem,KeyStroke);
Relation(GanttProject;GanttProject;setBackground,JComponent,Color);
Relation(GanttProject;GanttProject;setBorderPainted,JToolBar,boolean);
Relation(GanttProject;GanttProject;setBounds,Window,int-int-int-int);
Relation(GanttProject;GanttProject;setDefaultCloseOperation,JFrame,int);
Relation(GanttProject;GanttProject;setDividerLocation,JSplitPane,int);
Relation(GanttProject;GanttProject;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;GanttProject;setEnabled,JMenuItem,boolean);
Relation(GanttProject;GanttProject;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;GanttProject;setFloatable,JToolBar,boolean);
Relation(GanttProject;GanttProject;setGraphicArea,GanttTree,GanttGraphicArea);
Relation(GanttProject;GanttProject;setIcon,AbstractButton,Icon);
Relation(GanttProject;GanttProject;setIconImage,JFrame,Image);
Relation(GanttProject;GanttProject;setJMenuBar,JFrame,JMenuBar);
Relation(GanttProject;GanttProject;setLeftComponent,JSplitPane,Component);
Relation(GanttProject;GanttProject;setLocation,Component,int-int);
Relation(GanttProject;GanttProject;setLockDAVMinutes,HttpDocument,int);
Relation(GanttProject;GanttProject;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(GanttProject;GanttProject;setMemonic,GanttProject,N);
Relation(GanttProject;GanttProject;setOneTouchExpandable,JSplitPane,boolean);
Relation(GanttProject;GanttProject;setPreferredSize,JComponent,Dimension);
Relation(GanttProject;GanttProject;setRightComponent,JSplitPane,Component);
Relation(GanttProject;GanttProject;setRollover,JToolBar,boolean);
Relation(GanttProject;GanttProject;setTabLayoutPolicy,JTabbedPane,int);
Relation(GanttProject;GanttProject;setText,AbstractButton,String);
Relation(GanttProject;GanttProject;setTitle,Frame,String);
Relation(GanttProject;GanttProject;setToolTipText,JComponent,String);
Relation(GanttProject;GanttProject;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(GanttProject;GanttProject;setVisible,JComponent,boolean);
Relation(GanttProject;GanttProject;show,Dialog,N);
Relation(GanttProject;GanttProject;toFront,Window,N);
Relation(GanttProject;GanttProject;updateMenuMRU,GanttProject,N);
Relation(GanttProject;NgetInstance,GanttLanguage,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;getAllTasks,GanttTree,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;hasNext,Iterator,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;isRoot,DefaultMutableTreeNode,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;iterator,ArrayList,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;next,Iterator,N);
Relation(GanttProject;TaskContainmentHierarchyFacadeImpl;put,Map,Object-Object);
Relation(GanttProject;actionPerformed;checkCurrentProject,GanttProject,N);
Relation(GanttProject;actionPerformed;copySelectedNode,GanttTree,N);
Relation(GanttProject;actionPerformed;correctLabel,GanttProject,String);
Relation(GanttProject;actionPerformed;cutSelectedNode,GanttTree,N);
Relation(GanttProject;actionPerformed;dedentCurrentNodes,GanttTree,N);
Relation(GanttProject;actionPerformed;deleteTasks,GanttProject,N);
Relation(GanttProject;actionPerformed;downDatas,GanttProject,N);
Relation(GanttProject;actionPerformed;equals,String,Object);
Relation(GanttProject;actionPerformed;export,GanttProject,N);
Relation(GanttProject;actionPerformed;getActionCommand,ActionEvent,N);
Relation(GanttProject;actionPerformed;getClass,Object,N);
Relation(GanttProject;actionPerformed;getImage,ImageIcon,N);
Relation(GanttProject;actionPerformed;getOpenTips,GanttOptions,N);
Relation(GanttProject;actionPerformed;getResource,Class<>,String);
Relation(GanttProject;actionPerformed;getResourcePanel,GanttProject,N);
Relation(GanttProject;actionPerformed;getSelectedTask,GanttTree,N);
Relation(GanttProject;actionPerformed;getSource,EventObject,N);
Relation(GanttProject;actionPerformed;getText,GanttLanguage,String);
Relation(GanttProject;actionPerformed;importcbk,GanttProject,N);
Relation(GanttProject;actionPerformed;indentCurrentNodes,GanttTree,N);
Relation(GanttProject;actionPerformed;isVisible,Component,N);
Relation(GanttProject;actionPerformed;launchOptionsDialog,GanttProject,N);
Relation(GanttProject;actionPerformed;linkRelationships,GanttProject,N);
Relation(GanttProject;actionPerformed;newProject,GanttProject,N);
Relation(GanttProject;actionPerformed;openFile,GanttProject,N);
Relation(GanttProject;actionPerformed;openStartupDocument,GanttProject,Document);
Relation(GanttProject;actionPerformed;openURL,GanttProject,N);
Relation(GanttProject;actionPerformed;openWebPage,GanttProject,N);
Relation(GanttProject;actionPerformed;pasteNode,GanttTree,N);
Relation(GanttProject;actionPerformed;previewPrint,GanttProject,N);
Relation(GanttProject;actionPerformed;printProject,GanttProject,N);
Relation(GanttProject;actionPerformed;printStackTrace,Throwable,N);
Relation(GanttProject;actionPerformed;println,PrintStream,Object);
Relation(GanttProject;actionPerformed;println,PrintStream,String);
Relation(GanttProject;actionPerformed;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;actionPerformed;propertiesTask,GanttProject,N);
Relation(GanttProject;actionPerformed;quitApplication,GanttProject,N);
Relation(GanttProject;actionPerformed;saveAsProject,GanttProject,N);
Relation(GanttProject;actionPerformed;saveAsURLProject,GanttProject,N);
Relation(GanttProject;actionPerformed;saveProject,GanttProject,N);
Relation(GanttProject;actionPerformed;sendMail,GanttResourcePanel,GanttProject);
Relation(GanttProject;actionPerformed;setAskForSave,GanttProject,boolean);
Relation(GanttProject;actionPerformed;setIconImage,JFrame,Image);
Relation(GanttProject;actionPerformed;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;actionPerformed;setTitle,Frame,String);
Relation(GanttProject;actionPerformed;setVisible,Window,boolean);
Relation(GanttProject;actionPerformed;show,Dialog,N);
Relation(GanttProject;actionPerformed;unlinkRelationships,GanttProject,N);
Relation(GanttProject;actionPerformed;upDatas,GanttProject,N);
Relation(GanttProject;addButtons;add,Container,Component);
Relation(GanttProject;addButtons;addActionListener,AbstractButton,ActionListener);
Relation(GanttProject;addButtons;addSeparator,JToolBar,Dimension);
Relation(GanttProject;addButtons;applyButtonOptions,GanttProject,N);
Relation(GanttProject;addButtons;changeDate,GanttGraphicArea,boolean);
Relation(GanttProject;addButtons;changeDate,ResourceLoadGraphicArea,boolean);
Relation(GanttProject;addButtons;dedentCurrentNodes,GanttTree,N);
Relation(GanttProject;addButtons;deleteTasks,GanttProject,N);
Relation(GanttProject;addButtons;downDatas,GanttProject,N);
Relation(GanttProject;addButtons;getClass,Object,N);
Relation(GanttProject;addButtons;getContext,GanttResourcePanel,N);
Relation(GanttProject;addButtons;getDisplayName,GanttProject,ProjectResource[]);
Relation(GanttProject;addButtons;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;addButtons;getIconSize,GanttOptions,N);
Relation(GanttProject;addButtons;getLanguage,GanttProject,N);
Relation(GanttProject;addButtons;getResource,Class<>,String);
Relation(GanttProject;addButtons;getResourcePanel,GanttProject,N);
Relation(GanttProject;addButtons;getResources,ResourceContext,N);
Relation(GanttProject;addButtons;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;addButtons;getText,GanttLanguage,String);
Relation(GanttProject;addButtons;getZoom,GanttGraphicArea,N);
Relation(GanttProject;addButtons;indentCurrentNodes,GanttTree,N);
Relation(GanttProject;addButtons;linkRelationships,GanttProject,N);
Relation(GanttProject;addButtons;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;addButtons;propertiesTask,GanttProject,N);
Relation(GanttProject;addButtons;refreshProjectInfos,GanttProject,N);
Relation(GanttProject;addButtons;remove,ResourceManager,ProjectResource);
Relation(GanttProject;addButtons;repaint,Component,N);
Relation(GanttProject;addButtons;setAskForSave,GanttProject,boolean);
Relation(GanttProject;addButtons;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;addButtons;show,Dialog,N);
Relation(GanttProject;addButtons;unlinkRelationships,GanttProject,N);
Relation(GanttProject;addButtons;upDatas,GanttProject,N);
Relation(GanttProject;addButtons;zoomLess,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomLess,ResourceLoadGraphicArea,N);
Relation(GanttProject;addButtons;zoomMore,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomMore,ResourceLoadGraphicArea,N);
Relation(GanttProject;addButtons;zoomToBegin,GanttGraphicArea,N);
Relation(GanttProject;addButtons;zoomToBegin,ResourceLoadGraphicArea,N);
Relation(GanttProject;applyButtonOptions;getButtonShow,GanttOptions,N);
Relation(GanttProject;applyButtonOptions;getClass,Object,N);
Relation(GanttProject;applyButtonOptions;getIconSize,GanttOptions,N);
Relation(GanttProject;applyButtonOptions;getResource,Class<>,String);
Relation(GanttProject;applyButtonOptions;setButtonText,GanttProject,N);
Relation(GanttProject;applyButtonOptions;setDefaultIcon,TestGanttRolloverButton,Icon);
Relation(GanttProject;changeLanguage;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttProject;changeLanguage;changeLanguageOfMenu,GanttProject,N);
Relation(GanttProject;changeLanguage;getComponentOrientation,GanttLanguage,N);
Relation(GanttProject;changeLanguage;getResourcePanel,GanttProject,N);
Relation(GanttProject;changeLanguage;refresh,GanttResourcePanel,GanttLanguage);
Relation(GanttProject;changeLanguage;repaint,Component,N);
Relation(GanttProject;changeLanguageOfMenu;changeMenuLabel,GanttProject,JMenu-String);
Relation(GanttProject;changeLanguageOfMenu;changeMenuLabel,GanttProject,JMenuItem-String);
Relation(GanttProject;changeLanguageOfMenu;correctLabel,GanttProject,String);
Relation(GanttProject;changeLanguageOfMenu;getItem,JMenu,int);
Relation(GanttProject;changeLanguageOfMenu;getText,GanttLanguage,String);
Relation(GanttProject;changeLanguageOfMenu;getToolTip,GanttProject,String);
Relation(GanttProject;changeLanguageOfMenu;insert,JMenu,JMenuItem-int);
Relation(GanttProject;changeLanguageOfMenu;setButtonText,GanttProject,N);
Relation(GanttProject;changeLanguageOfMenu;setTitleAt,JTabbedPane,int-String);
Relation(GanttProject;changeLanguageOfMenu;setToolTipText,JComponent,String);
Relation(GanttProject;changeLookAndFeel;getClassName,LookAndFeelInfo,N);
Relation(GanttProject;changeLookAndFeel;getDefaultInfo,GanttLookAndFeels,N);
Relation(GanttProject;changeLookAndFeel;getGanttLookAndFeels,GanttLookAndFeels,N);
Relation(GanttProject;changeLookAndFeel;getJTree,GanttTree,N);
Relation(GanttProject;changeLookAndFeel;getName,LookAndFeelInfo,N);
Relation(GanttProject;changeLookAndFeel;println,PrintStream,String);
Relation(GanttProject;changeLookAndFeel;setLookAndFeel,UIManager,String);
Relation(GanttProject;changeLookAndFeel;setRowHeight,JTree,int);
Relation(GanttProject;changeLookAndFeel;updateComponentTreeUI,SwingUtilities,Component);
Relation(GanttProject;changeMenuLabel;charAt,String,int);
Relation(GanttProject;changeMenuLabel;concat,String,String);
Relation(GanttProject;changeMenuLabel;indexOf,String,int);
Relation(GanttProject;changeMenuLabel;length,String,N);
Relation(GanttProject;changeMenuLabel;setMnemonic,AbstractButton,char);
Relation(GanttProject;changeMenuLabel;setText,AbstractButton,String);
Relation(GanttProject;changeMenuLabel;substring,String,int);
Relation(GanttProject;changeMenuLabel;substring,String,int-int);
Relation(GanttProject;changeMenuLabel;toLowerCase,Character,char);
Relation(GanttProject;changeWorkingDirectory;setWorkingDirectory,GanttOptions,String);
Relation(GanttProject;checkCurrentProject;getText,GanttLanguage,String);
Relation(GanttProject;checkCurrentProject;println,PrintStream,Object);
Relation(GanttProject;checkCurrentProject;saveProject,GanttProject,N);
Relation(GanttProject;checkCurrentProject;show,Dialog,N);
Relation(GanttProject;checkProjectFile;println,PrintStream,String);
Relation(GanttProject;closeProject;clear,ResourceManager,N);
Relation(GanttProject;closeProject;clear,RoleManager,N);
Relation(GanttProject;closeProject;clear,TaskManager,N);
Relation(GanttProject;closeProject;clearTree,GanttTree,N);
Relation(GanttProject;closeProject;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;closeProject;getInstance,Access,N);
Relation(GanttProject;closeProject;getResourcePanel,GanttProject,N);
Relation(GanttProject;closeProject;getTaskManager,GanttProject,N);
Relation(GanttProject;closeProject;getText,GanttLanguage,String);
Relation(GanttProject;closeProject;releaseLock,Document,N);
Relation(GanttProject;closeProject;repaint,Component,N);
Relation(GanttProject;closeProject;reset,GanttResourcePanel,N);
Relation(GanttProject;closeProject;setAskForSave,GanttProject,boolean);
Relation(GanttProject;closeProject;setProjectLevelTaskColor,GanttGraphicArea,Color);
Relation(GanttProject;closeProject;setTitle,Frame,String);
Relation(GanttProject;correctLabel;concat,String,String);
Relation(GanttProject;correctLabel;indexOf,String,int);
Relation(GanttProject;correctLabel;length,String,N);
Relation(GanttProject;correctLabel;substring,String,int);
Relation(GanttProject;correctLabel;substring,String,int-int);
Relation(GanttProject;createNewItem;addActionListener,AbstractButton,ActionListener);
Relation(GanttProject;createNewItem;getClass,Object,N);
Relation(GanttProject;createNewItem;getResource,Class<>,String);
Relation(GanttProject;createNewItemText;addActionListener,AbstractButton,ActionListener);
Relation(GanttProject;deleteTasks;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;deleteTasks;getAlgorithmCollection,TaskManager,N);
Relation(GanttProject;deleteTasks;getFatherNode,GanttTree,Task);
Relation(GanttProject;deleteTasks;getResourcePanel,GanttProject,N);
Relation(GanttProject;deleteTasks;getSelectedNodes,GanttTree,N);
Relation(GanttProject;deleteTasks;getTaskManager,GanttProject,N);
Relation(GanttProject;deleteTasks;getText,GanttLanguage,String);
Relation(GanttProject;deleteTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;deleteTasks;refreshProjectInfos,GanttProject,N);
Relation(GanttProject;deleteTasks;removeCurrentNode,GanttTree,N);
Relation(GanttProject;deleteTasks;repaint,Component,N);
Relation(GanttProject;deleteTasks;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttProject;deleteTasks;setAskForSave,GanttProject,boolean);
Relation(GanttProject;deleteTasks;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;deleteTasks;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;deleteTasks;setUserObject,DefaultMutableTreeNode,Object);
Relation(GanttProject;deleteTasks;show,Dialog,N);
Relation(GanttProject;doExport;doExport,ProjectExportProcessor,DeprecatedProjectExportData);
Relation(GanttProject;doExport;endsWith,String,String);
Relation(GanttProject;doExport;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttProject;doExport;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttProject;doExport;getCSVOptions,GanttOptions,N);
Relation(GanttProject;doExport;getExceptionReport,GanttProject,Exception);
Relation(GanttProject;doExport;getResourcePanel,GanttProject,N);
Relation(GanttProject;doExport;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;doExport;getText,GanttLanguage,String);
Relation(GanttProject;doExport;getXslFo,GanttProject,N);
Relation(GanttProject;doExport;isVisible,Component,N);
Relation(GanttProject;doExport;println,PrintStream,String);
Relation(GanttProject;doExport;save,GanttCSVExport,OutputStream);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;doExport;save,GanttXFIGSaver,OutputStream-String);
Relation(GanttProject;doExport;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;doExport;show,Dialog,N);
Relation(GanttProject;doExport;toString,File,N);
Relation(GanttProject;doExport;toUpperCase,String,N);
Relation(GanttProject;downDatas;downCurrentNodes,GanttTree,N);
Relation(GanttProject;downDatas;downResource,GanttResourcePanel,N);
Relation(GanttProject;downDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;downDatas;getResourcePanel,GanttProject,N);
Relation(GanttProject;downDatas;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;downDatas;repaint,Component,N);
Relation(GanttProject;downDatas;setAskForSave,GanttProject,boolean);
Relation(GanttProject;downDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;exitForm;quitApplication,GanttProject,N);
Relation(GanttProject;export;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;export;equals,Object,Object);
Relation(GanttProject;export;selectExportFile,GanttProject,FileFilter);
Relation(GanttProject;exportCSV;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportJPG;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportPDF;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportPNG;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportProject;createNewFile,File,N);
Relation(GanttProject;exportProject;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportProject;exists,File,N);
Relation(GanttProject;exportProject;getAbsolutePath,File,N);
Relation(GanttProject;exportProject;getProjectName,GanttProject,N);
Relation(GanttProject;exportProject;isDirectory,File,N);
Relation(GanttProject;exportProject;length,String,N);
Relation(GanttProject;exportProject;mkdir,File,N);
Relation(GanttProject;exportProject;println,PrintStream,String);
Relation(GanttProject;exportProject;toLowerCase,String,N);
Relation(GanttProject;exportXFIG;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;getContainer;get,Map,Object);
Relation(GanttProject;getContainer;getParent,DefaultMutableTreeNode,N);
Relation(GanttProject;getContainer;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;getDescription;getDescription,PrjInfos,N);
Relation(GanttProject;getDisplayName;append,StringBuffer,String);
Relation(GanttProject;getDisplayName;toString,ProjectResource,N);
Relation(GanttProject;getDisplayName;toString,StringBuffer,N);
Relation(GanttProject;getExceptionReport;append,StringBuffer,String);
Relation(GanttProject;getExceptionReport;close,PrintWriter,N);
Relation(GanttProject;getExceptionReport;getBuffer,StringWriter,N);
Relation(GanttProject;getExceptionReport;getMessage,Throwable,N);
Relation(GanttProject;getExceptionReport;printStackTrace,Throwable,PrintWriter);
Relation(GanttProject;getExceptionReport;toString,StringBuffer,N);
Relation(GanttProject;getHumanResourceManager;addView,ResourceManager,ResourceView);
Relation(GanttProject;getHumanResourceManager;get,Hashtable,Object);
Relation(GanttProject;getHumanResourceManager;getDefaultRole,RoleManager,N);
Relation(GanttProject;getHumanResourceManager;getResourcePanel,GanttProject,N);
Relation(GanttProject;getHumanResourceManager;getRoleManager,GanttProject,N);
Relation(GanttProject;getHumanResourceManager;put,Hashtable,Object-Object);
Relation(GanttProject;getI18n;getLanguage,GanttProject,N);
Relation(GanttProject;getNestedTasks;add,ArrayList,Object);
Relation(GanttProject;getNestedTasks;children,DefaultMutableTreeNode,N);
Relation(GanttProject;getNestedTasks;get,Map,Object);
Relation(GanttProject;getNestedTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;getNestedTasks;hasMoreElements,Enumeration,N);
Relation(GanttProject;getNestedTasks;nextElement,Enumeration,N);
Relation(GanttProject;getNestedTasks;toArray,ArrayList,Object[]);
Relation(GanttProject;getOrganization;getOrganization,PrjInfos,N);
Relation(GanttProject;getResourceActions;getResourcePanel,GanttProject,N);
Relation(GanttProject;getResourcePanel;getResourceActions,GanttProject,N);
Relation(GanttProject;getResourcePanel;getTree,GanttProject,N);
Relation(GanttProject;getResourcePanel;setResourceActions,GanttResourcePanel,ResourceActionSet);
Relation(GanttProject;getRoleManager;getInstance,Access,N);
Relation(GanttProject;getWebLink;getWebLink,PrjInfos,N);
Relation(GanttProject;getXslDir;getXslDir,GanttOptions,N);
Relation(GanttProject;getXslFo;exists,File,N);
Relation(GanttProject;getXslFo;getResource,Class<GanttProject>,String);
Relation(GanttProject;getXslFo;getXslFo,GanttOptions,N);
Relation(GanttProject;getXslFo;toString,URL,N);
Relation(GanttProject;importcbk;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;importcbk;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;importcbk;changeWorkingDirectory,GanttProject,String);
Relation(GanttProject;importcbk;checkCurrentProject,GanttProject,N);
Relation(GanttProject;importcbk;closeProject,GanttProject,N);
Relation(GanttProject;importcbk;equals,Object,Object);
Relation(GanttProject;importcbk;getChoosableFileFilters,JFileChooser,N);
Relation(GanttProject;importcbk;getContext,GanttXMLOpen,N);
Relation(GanttProject;importcbk;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;importcbk;getDescription,Document,N);
Relation(GanttProject;importcbk;getFileFilter,JFileChooser,N);
Relation(GanttProject;importcbk;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;importcbk;getInputStream,Document,N);
Relation(GanttProject;importcbk;getLanguage,GanttProject,N);
Relation(GanttProject;importcbk;getParent,File,N);
Relation(GanttProject;importcbk;getResourcePanel,GanttProject,N);
Relation(GanttProject;importcbk;getRoleManager,GanttProject,N);
Relation(GanttProject;importcbk;getSelectedFile,JFileChooser,N);
Relation(GanttProject;importcbk;getTaskManager,GanttProject,N);
Relation(GanttProject;importcbk;getText,GanttLanguage,String);
Relation(GanttProject;importcbk;getWorkingDir,GanttOptions,N);
Relation(GanttProject;importcbk;load,GanttTXTOpen,File);
Relation(GanttProject;importcbk;load,GanttXMLOpen,InputStream);
Relation(GanttProject;importcbk;removeChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;importcbk;setAskForSave,GanttProject,boolean);
Relation(GanttProject;importcbk;show,Dialog,N);
Relation(GanttProject;importcbk;showOpenDialog,JFileChooser,Component);
Relation(GanttProject;launchOptionsDialog;getText,GanttLanguage,String);
Relation(GanttProject;launchOptionsDialog;repaint,Component,N);
Relation(GanttProject;launchOptionsDialog;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;launchOptionsDialog;show,Dialog,N);
Relation(GanttProject;linkRelationships;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttProject;linkRelationships;getDependencyCollection,TaskManager,N);
Relation(GanttProject;linkRelationships;getSelectedNodes,GanttTree,N);
Relation(GanttProject;linkRelationships;getTaskManager,GanttProject,N);
Relation(GanttProject;linkRelationships;getText,GanttLanguage,String);
Relation(GanttProject;linkRelationships;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;linkRelationships;repaint,Component,N);
Relation(GanttProject;linkRelationships;setAskForSave,GanttProject,boolean);
Relation(GanttProject;linkRelationships;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;linkRelationships;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;main;checkProjectFile,GanttProject,String[]);
Relation(GanttProject;main;close,GanttSplash,N);
Relation(GanttProject;main;equals,String,Object);
Relation(GanttProject;main;exit,System,int);
Relation(GanttProject;main;exportCSV,GanttProject,String[]);
Relation(GanttProject;main;exportJPG,GanttProject,String[]);
Relation(GanttProject;main;exportPDF,GanttProject,String[]);
Relation(GanttProject;main;exportPNG,GanttProject,String[]);
Relation(GanttProject;main;exportProject,GanttProject,String[]);
Relation(GanttProject;main;exportXFIG,GanttProject,String[]);
Relation(GanttProject;main;openStartupDocument,GanttProject,String);
Relation(GanttProject;main;setVisible,Window,boolean);
Relation(GanttProject;main;setXslDir,GanttOptions,String);
Relation(GanttProject;main;setXslFo,GanttOptions,String);
Relation(GanttProject;main;usage,GanttProject,N);
Relation(GanttProject;newProject;checkCurrentProject,GanttProject,N);
Relation(GanttProject;newProject;closeProject,GanttProject,N);
Relation(GanttProject;newProject;getText,GanttLanguage,String);
Relation(GanttProject;newProject;refreshProjectInfos,GanttProject,N);
Relation(GanttProject;newProject;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;newProject;showNewProjectWizard,GanttProject,N);
Relation(GanttProject;newTask;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttProject;newTask;colorDefined,TaskImpl,N);
Relation(GanttProject;newTask;createTask,TaskManager,N);
Relation(GanttProject;newTask;getAdjustTaskBoundsAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;newTask;getAlgorithmCollection,TaskManager,N);
Relation(GanttProject;newTask;getAutomatic,GanttOptions,N);
Relation(GanttProject;newTask;getColor,TaskImpl,N);
Relation(GanttProject;newTask;getInstance,GanttLanguage,N);
Relation(GanttProject;newTask;getRecalculateTaskCompletionPercentageAlgorithm,AlgorithmCollection,N);
Relation(GanttProject;newTask;getSelectedNode,GanttTree,N);
Relation(GanttProject;newTask;getSelectedTask,GanttTree,N);
Relation(GanttProject;newTask;getShape,TaskImpl,N);
Relation(GanttProject;newTask;getStart,TaskImpl,N);
Relation(GanttProject;newTask;getTaskColor,GanttGraphicArea,N);
Relation(GanttProject;newTask;getTaskID,TaskImpl,N);
Relation(GanttProject;newTask;getTaskManager,GanttProject,N);
Relation(GanttProject;newTask;getTaskNamePrefix,GanttOptions,N);
Relation(GanttProject;newTask;getText,GanttLanguage,String);
Relation(GanttProject;newTask;hasTasks,GanttTree,N);
Relation(GanttProject;newTask;propertiesTask,GanttProject,DefaultMutableTreeNode);
Relation(GanttProject;newTask;refreshAllChild,GanttTree,String);
Relation(GanttProject;newTask;registerTask,TaskManager,Task);
Relation(GanttProject;newTask;repaint,Component,N);
Relation(GanttProject;newTask;run,AdjustTaskBoundsAlgorithm,Task);
Relation(GanttProject;newTask;run,RecalculateTaskCompletionPercentageAlgorithm,Task);
Relation(GanttProject;newTask;setAskForSave,GanttProject,boolean);
Relation(GanttProject;newTask;setColor,TaskImpl,Color);
Relation(GanttProject;newTask;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;newTask;setLength,GanttTask,int);
Relation(GanttProject;newTask;setMilestone,TaskImpl,boolean);
Relation(GanttProject;newTask;setName,TaskImpl,String);
Relation(GanttProject;newTask;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;newTask;setShape,TaskImpl,ShapePaint);
Relation(GanttProject;newTask;setStart,TaskImpl,GanttCalendar);
Relation(GanttProject;newTask;shapeDefined,TaskImpl,N);
Relation(GanttProject;newTask;toString,GanttTask,N);
Relation(GanttProject;openDocument;acquireLock,Document,N);
Relation(GanttProject;openDocument;add,DocumentsMRU,Document);
Relation(GanttProject;openDocument;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttProject;openDocument;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openDocument;closeProject,GanttProject,N);
Relation(GanttProject;openDocument;endsWith,String,String);
Relation(GanttProject;openDocument;getContext,GanttXMLOpen,N);
Relation(GanttProject;openDocument;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;openDocument;getDescription,Document,N);
Relation(GanttProject;openDocument;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;openDocument;getInputStream,Document,N);
Relation(GanttProject;openDocument;getPath,Document,N);
Relation(GanttProject;openDocument;getResourcePanel,GanttProject,N);
Relation(GanttProject;openDocument;getRoleManager,GanttProject,N);
Relation(GanttProject;openDocument;getTaskManager,GanttProject,N);
Relation(GanttProject;openDocument;getText,GanttLanguage,String);
Relation(GanttProject;openDocument;getZoom,GanttGraphicArea,N);
Relation(GanttProject;openDocument;isVisible,Component,N);
Relation(GanttProject;openDocument;load,GanttXMLOpen,InputStream);
Relation(GanttProject;openDocument;println,PrintStream,String);
Relation(GanttProject;openDocument;setAskForSave,GanttProject,boolean);
Relation(GanttProject;openDocument;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;openDocument;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;openDocument;setResourcePanelToGraphicArea,GanttProject,N);
Relation(GanttProject;openDocument;setTitle,Frame,String);
Relation(GanttProject;openDocument;show,Dialog,N);
Relation(GanttProject;openDocument;updateMenuMRU,GanttProject,N);
Relation(GanttProject;openFile;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;openFile;changeWorkingDirectory,GanttProject,String);
Relation(GanttProject;openFile;getChoosableFileFilters,JFileChooser,N);
Relation(GanttProject;openFile;getParent,File,N);
Relation(GanttProject;openFile;getSelectedFile,JFileChooser,N);
Relation(GanttProject;openFile;getWorkingDir,GanttOptions,N);
Relation(GanttProject;openFile;openDocument,GanttProject,Document);
Relation(GanttProject;openFile;println,PrintStream,boolean);
Relation(GanttProject;openFile;removeChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;openFile;showOpenDialog,JFileChooser,Component);
Relation(GanttProject;openStartupDocument;createDocument,DocumentCreator,String);
Relation(GanttProject;openStartupDocument;getDescription,Document,N);
Relation(GanttProject;openStartupDocument;getText,GanttLanguage,String);
Relation(GanttProject;openStartupDocument;openDocument,GanttProject,Document);
Relation(GanttProject;openStartupDocument;openStartupDocument,GanttProject,Document);
Relation(GanttProject;openStartupDocument;openURL,GanttProject,Document);
Relation(GanttProject;openStartupDocument;show,Dialog,N);
Relation(GanttProject;openURL;createDocument,DocumentCreator,String-String-String);
Relation(GanttProject;openURL;equals,String,Object);
Relation(GanttProject;openURL;getPassword,Document,N);
Relation(GanttProject;openURL;getText,GanttLanguage,String);
Relation(GanttProject;openURL;getURLPath,Document,N);
Relation(GanttProject;openURL;getUsername,Document,N);
Relation(GanttProject;openURL;isVisible,Component,N);
Relation(GanttProject;openURL;openDocument,GanttProject,Document);
Relation(GanttProject;openURL;openURL,GanttProject,Document);
Relation(GanttProject;openURL;println,PrintStream,String);
Relation(GanttProject;openURL;setUserInfo,Document,String-String);
Relation(GanttProject;openURL;show,Dialog,N);
Relation(GanttProject;openWebPage;displayURL,BrowserControl,String);
Relation(GanttProject;openWebPage;getInstance,GanttLanguage,N);
Relation(GanttProject;openWebPage;getText,GanttLanguage,String);
Relation(GanttProject;openWebPage;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;openWebPage;show,Dialog,N);
Relation(GanttProject;openXMLStream;addParsingListener,GanttXMLOpen,ParsingListener);
Relation(GanttProject;openXMLStream;addTagHandler,GanttXMLOpen,TagHandler);
Relation(GanttProject;openXMLStream;clear,ResourceManager,N);
Relation(GanttProject;openXMLStream;clear,RoleManager,N);
Relation(GanttProject;openXMLStream;clear,TaskManager,N);
Relation(GanttProject;openXMLStream;clearTree,GanttTree,N);
Relation(GanttProject;openXMLStream;getContext,GanttXMLOpen,N);
Relation(GanttProject;openXMLStream;getDefaultTagHandler,GanttXMLOpen,N);
Relation(GanttProject;openXMLStream;getHumanResourceManager,GanttProject,N);
Relation(GanttProject;openXMLStream;getInstance,Access,N);
Relation(GanttProject;openXMLStream;getResourcePanel,GanttProject,N);
Relation(GanttProject;openXMLStream;getRoleManager,GanttProject,N);
Relation(GanttProject;openXMLStream;getTaskManager,GanttProject,N);
Relation(GanttProject;openXMLStream;getText,GanttLanguage,String);
Relation(GanttProject;openXMLStream;load,GanttXMLOpen,InputStream);
Relation(GanttProject;openXMLStream;reset,GanttResourcePanel,N);
Relation(GanttProject;openXMLStream;setAskForSave,GanttProject,boolean);
Relation(GanttProject;openXMLStream;show,Dialog,N);
Relation(GanttProject;previewPrint;getChart,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;previewPrint;getChart,ResourceLoadGraphicArea,GanttExportSettings);
Relation(GanttProject;previewPrint;getResourcePanel,GanttProject,N);
Relation(GanttProject;previewPrint;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;previewPrint;setVisible,Dialog,boolean);
Relation(GanttProject;printProject;getExportSettings,GanttOptions,N);
Relation(GanttProject;printProject;getResourcePanel,GanttProject,N);
Relation(GanttProject;printProject;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;printProject;printProject,GanttGraphicArea,GanttExportSettings);
Relation(GanttProject;printProject;printProject,ResourceLoadGraphicArea,GanttExportSettings);
Relation(GanttProject;propertiesTask;getSelectedNode,GanttTree,N);
Relation(GanttProject;propertiesTask;getText,GanttLanguage,String);
Relation(GanttProject;propertiesTask;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;propertiesTask;isRoot,DefaultMutableTreeNode,N);
Relation(GanttProject;propertiesTask;propertiesTask,GanttProject,DefaultMutableTreeNode);
Relation(GanttProject;propertiesTask;setAskForSave,GanttProject,boolean);
Relation(GanttProject;propertiesTask;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;propertiesTask;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;propertiesTask;show,Dialog,N);
Relation(GanttProject;quitApplication;checkCurrentProject,GanttProject,N);
Relation(GanttProject;quitApplication;closeProject,GanttProject,N);
Relation(GanttProject;quitApplication;dispose,Window,N);
Relation(GanttProject;quitApplication;exit,System,int);
Relation(GanttProject;quitApplication;getHeight,Component,N);
Relation(GanttProject;quitApplication;getOrientation,JToolBar,N);
Relation(GanttProject;quitApplication;getWidth,Component,N);
Relation(GanttProject;quitApplication;getX,Component,N);
Relation(GanttProject;quitApplication;getY,Component,N);
Relation(GanttProject;quitApplication;save,GanttOptions,N);
Relation(GanttProject;quitApplication;setDocumentsMRU,GanttOptions,DocumentsMRU);
Relation(GanttProject;quitApplication;setLookAndFeel,GanttOptions,GanttLookAndFeelInfo);
Relation(GanttProject;quitApplication;setToolBarPosition,GanttOptions,int);
Relation(GanttProject;quitApplication;setUIConfiguration,GanttOptions,UIConfiguration);
Relation(GanttProject;quitApplication;setVisible,Window,boolean);
Relation(GanttProject;quitApplication;setWindowPosition,GanttOptions,int-int);
Relation(GanttProject;quitApplication;setWindowSize,GanttOptions,int-int);
Relation(GanttProject;refreshProjectInfos;correctLabel,GanttProject,String);
Relation(GanttProject;refreshProjectInfos;getText,GanttLanguage,String);
Relation(GanttProject;refreshProjectInfos;nbPeople,GanttResourcePanel,N);
Relation(GanttProject;refreshProjectInfos;setSecondText,GanttStatusBar,String);
Relation(GanttProject;resourceAdded;correctLabel,GanttProject,String);
Relation(GanttProject;resourceAdded;getInstance,GanttLanguage,N);
Relation(GanttProject;resourceAdded;getStatusBar,GanttProject,N);
Relation(GanttProject;resourceAdded;getText,GanttLanguage,String);
Relation(GanttProject;resourceAdded;refreshProjectInfos,GanttProject,N);
Relation(GanttProject;resourceAdded;setAskForSave,GanttProject,boolean);
Relation(GanttProject;resourceAdded;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;resourceAdded;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;restoreOptions;getUIConfiguration,GanttOptions,N);
Relation(GanttProject;restoreOptions;initByDefault,GanttOptions,N);
Relation(GanttProject;restoreOptions;repaint,Component,N);
Relation(GanttProject;saveAsProject;accept,FileFilter,File);
Relation(GanttProject;saveAsProject;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;saveAsProject;exists,File,N);
Relation(GanttProject;saveAsProject;getChoosableFileFilters,JFileChooser,N);
Relation(GanttProject;saveAsProject;getFileFilter,JFileChooser,N);
Relation(GanttProject;saveAsProject;getSelectedFile,JFileChooser,N);
Relation(GanttProject;saveAsProject;getText,GanttLanguage,String);
Relation(GanttProject;saveAsProject;getWorkingDir,GanttOptions,N);
Relation(GanttProject;saveAsProject;removeChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;saveAsProject;saveAsProject,GanttProject,N);
Relation(GanttProject;saveAsProject;saveProject,GanttProject,Document);
Relation(GanttProject;saveAsProject;show,Dialog,N);
Relation(GanttProject;saveAsProject;showSaveDialog,JFileChooser,Component);
Relation(GanttProject;saveAsProject;toString,File,N);
Relation(GanttProject;saveAsURLProject;createDocument,DocumentCreator,String-String-String);
Relation(GanttProject;saveAsURLProject;equals,String,Object);
Relation(GanttProject;saveAsURLProject;getPassword,Document,N);
Relation(GanttProject;saveAsURLProject;getURLPath,Document,N);
Relation(GanttProject;saveAsURLProject;getUsername,Document,N);
Relation(GanttProject;saveAsURLProject;saveAsURLProject,GanttProject,Document);
Relation(GanttProject;saveAsURLProject;saveProject,GanttProject,Document);
Relation(GanttProject;saveAsURLProject;show,Dialog,N);
Relation(GanttProject;saveProject;acquireLock,Document,N);
Relation(GanttProject;saveProject;add,DocumentsMRU,Document);
Relation(GanttProject;saveProject;canWrite,Document,N);
Relation(GanttProject;saveProject;changeWorkingDirectory,GanttProject,String);
Relation(GanttProject;saveProject;endsWith,String,String);
Relation(GanttProject;saveProject;getDescription,Document,N);
Relation(GanttProject;saveProject;getFilePath,Document,N);
Relation(GanttProject;saveProject;getInstance,GanttLanguage,N);
Relation(GanttProject;saveProject;getOutputStream,Document,N);
Relation(GanttProject;saveProject;getParent,File,N);
Relation(GanttProject;saveProject;getPath,Document,N);
Relation(GanttProject;saveProject;getResourcePanel,GanttProject,N);
Relation(GanttProject;saveProject;getText,GanttLanguage,String);
Relation(GanttProject;saveProject;releaseLock,Document,N);
Relation(GanttProject;saveProject;save,GanttXMLSaver,OutputStream-String);
Relation(GanttProject;saveProject;saveAsProject,GanttProject,N);
Relation(GanttProject;saveProject;saveAsURLProject,GanttProject,Document);
Relation(GanttProject;saveProject;saveProject,GanttProject,Document);
Relation(GanttProject;saveProject;setAskForSave,GanttProject,boolean);
Relation(GanttProject;saveProject;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;saveProject;setTitle,Frame,String);
Relation(GanttProject;saveProject;show,Dialog,N);
Relation(GanttProject;saveProject;updateMenuMRU,GanttProject,N);
Relation(GanttProject;selectExportFile;accept,FileFilter,File);
Relation(GanttProject;selectExportFile;addChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;selectExportFile;changeWorkingDirectory,GanttProject,String);
Relation(GanttProject;selectExportFile;equals,Object,Object);
Relation(GanttProject;selectExportFile;exists,File,N);
Relation(GanttProject;selectExportFile;getChoosableFileFilters,JFileChooser,N);
Relation(GanttProject;selectExportFile;getExportSettings,GanttOptions,N);
Relation(GanttProject;selectExportFile;getFileFilter,JFileChooser,N);
Relation(GanttProject;selectExportFile;getParent,File,N);
Relation(GanttProject;selectExportFile;getSelectedFile,JFileChooser,N);
Relation(GanttProject;selectExportFile;getText,GanttLanguage,String);
Relation(GanttProject;selectExportFile;getWorkingDir,GanttOptions,N);
Relation(GanttProject;selectExportFile;println,PrintStream,boolean);
Relation(GanttProject;selectExportFile;removeChoosableFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;selectExportFile;selectExportFile,GanttProject,FileFilter);
Relation(GanttProject;selectExportFile;setFileFilter,JFileChooser,FileFilter);
Relation(GanttProject;selectExportFile;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;selectExportFile;show,Dialog,N);
Relation(GanttProject;selectExportFile;showSaveDialog,JFileChooser,Component);
Relation(GanttProject;selectExportFile;toString,File,N);
Relation(GanttProject;setAskForSave;endsWith,String,String);
Relation(GanttProject;setAskForSave;getMessage,Throwable,N);
Relation(GanttProject;setAskForSave;getProperty,System,String);
Relation(GanttProject;setAskForSave;getTitle,Frame,N);
Relation(GanttProject;setAskForSave;println,PrintStream,String);
Relation(GanttProject;setAskForSave;putClientProperty,JComponent,Object-Object);
Relation(GanttProject;setAskForSave;setEnabled,JMenuItem,boolean);
Relation(GanttProject;setAskForSave;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;setAskForSave;setTitle,Frame,String);
Relation(GanttProject;setAskForSave;valueOf,Boolean,boolean);
Relation(GanttProject;setButtonText;correctLabel,GanttProject,String);
Relation(GanttProject;setButtonText;getButtonShow,GanttOptions,N);
Relation(GanttProject;setButtonText;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;setButtonText;getText,GanttLanguage,String);
Relation(GanttProject;setButtonText;setText,AbstractButton,String);
Relation(GanttProject;setDescription;setAskForSave,GanttProject,boolean);
Relation(GanttProject;setMemonic;getDefaultToolkit,Toolkit,N);
Relation(GanttProject;setMemonic;getKeyStroke,KeyStroke,int-int);
Relation(GanttProject;setMemonic;getMenuShortcutKeyMask,Toolkit,N);
Relation(GanttProject;setMemonic;setAccelerator,JMenuItem,KeyStroke);
Relation(GanttProject;setOrganization;setAskForSave,GanttProject,boolean);
Relation(GanttProject;setProjectName;setAskForSave,GanttProject,boolean);
Relation(GanttProject;setResourcePanelToGraphicArea;getDate,GanttGraphicArea,N);
Relation(GanttProject;setResourcePanelToGraphicArea;getResourcePanel,GanttProject,N);
Relation(GanttProject;setResourcePanelToGraphicArea;getZoom,GanttGraphicArea,N);
Relation(GanttProject;setResourcePanelToGraphicArea;repaint,Component,N);
Relation(GanttProject;setResourcePanelToGraphicArea;setDate,ResourceLoadGraphicArea,GanttCalendar);
Relation(GanttProject;setResourcePanelToGraphicArea;setZoom,ResourceLoadGraphicArea,int);
Relation(GanttProject;setWebLink;setAskForSave,GanttProject,boolean);
Relation(GanttProject;showNewProjectWizard;createNewProject,NewProjectWizard,IGanttProject);
Relation(GanttProject;unlinkRelationships;getSelectedNodes,GanttTree,N);
Relation(GanttProject;unlinkRelationships;getText,GanttLanguage,String);
Relation(GanttProject;unlinkRelationships;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttProject;unlinkRelationships;isRoot,DefaultMutableTreeNode,N);
Relation(GanttProject;unlinkRelationships;repaint,Component,N);
Relation(GanttProject;unlinkRelationships;setAskForSave,GanttProject,boolean);
Relation(GanttProject;unlinkRelationships;setFirstText,GanttStatusBar,String-int);
Relation(GanttProject;unlinkRelationships;setSelectedIndex,JTabbedPane,int);
Relation(GanttProject;unlinkRelationships;unlink,GanttTask,N);
Relation(GanttProject;upDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;upDatas;getResourcePanel,GanttProject,N);
Relation(GanttProject;upDatas;getSelectedIndex,JTabbedPane,N);
Relation(GanttProject;upDatas;repaint,Component,N);
Relation(GanttProject;upDatas;setAskForSave,GanttProject,boolean);
Relation(GanttProject;upDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;upDatas;upCurrentNodes,GanttTree,N);
Relation(GanttProject;upDatas;upResource,GanttResourcePanel,N);
Relation(GanttProject;updateMenuMRU;add,JMenu,JMenuItem);
Relation(GanttProject;updateMenuMRU;hasNext,Iterator,N);
Relation(GanttProject;updateMenuMRU;iterator,DocumentsMRU,N);
Relation(GanttProject;updateMenuMRU;next,Iterator,N);
Relation(GanttProject;updateMenuMRU;removeAll,JMenu,N);
Relation(GanttProject;usage;println,PrintStream,N);
Relation(GanttProject;usage;println,PrintStream,String);
Relation(GanttResourcePanel;GanttResourcePanel;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttResourcePanel;createPopupMenu;correctLabel,GanttProject,String);
Relation(GanttResourcePanel;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(GanttResourcePanel;deleteHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;downResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;propertiesHuman;getStatusBar,GanttProject,N);
Relation(GanttResourcePanel;propertiesHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;upResource;getHumanResourceManager,GanttProject,N);
Relation(GanttTaskPropertiesBean;constructGeneralPanel;getToolTip,GanttProject,String);
Relation(GanttTaskPropertiesBean;constructNotesPanel;getToolTip,GanttProject,String);
Relation(GanttTaskPropertiesBean;init;correctLabel,GanttProject,String);
Relation(GanttTree;GanttTree;propertiesTask,GanttProject,N);
Relation(GanttTree;addObject;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;addObjectWithExpand;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;createPopupMenu;correctLabel,GanttProject,String);
Relation(GanttTree;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(GanttTree;dedentCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;downCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;drop;setAskForSave,GanttProject,boolean);
Relation(GanttTree;getCellEditorValue;setAskForSave,GanttProject,boolean);
Relation(GanttTree;indentCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttTree;removeCurrentNode;refreshProjectInfos,GanttProject,N);
Relation(GanttTree;treeCollapsed;setAskForSave,GanttProject,boolean);
Relation(GanttTree;treeExpanded;setAskForSave,GanttProject,boolean);
Relation(GanttTree;upCurrentNodes;getStatusBar,GanttProject,N);
Relation(GanttURLChooser;GanttURLChooser;correctLabel,GanttProject,String);
Relation(GeneralDialog;GeneralDialog;correctLabel,GanttProject,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;correctLabel,GanttProject,String);
Relation(HTMLSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(HTMLSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(LanguageSettingsPanel;changeLanguage;changeLanguage,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;applyButtonOptions,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;changeLookAndFeel,GanttProject,GanttLookAndFeelInfo);
Relation(LnFSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(LnFSettingsPanel;applyChanges;getStatusBar,GanttProject,N);
Relation(LnFSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(NewHumanAction;NewHumanAction;correctLabel,GanttProject,String);
Relation(NewHumanAction;languageChanged;correctLabel,GanttProject,String);
Relation(NewTaskAction;setText;correctLabel,GanttProject,String);
Relation(PDFExportProcessor;doExport;getHumanResourceManager,GanttProject,N);
Relation(PDFSettingsPanel;PDFSettingsPanel;correctLabel,GanttProject,String);
Relation(PDFSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(PDFSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(ParametersSettingsPanel;ParametersSettingsPanel;correctLabel,GanttProject,String);
Relation(ParametersSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(ParametersSettingsPanel;applyChanges;getUIConfiguration,GanttProject,N);
Relation(ParametersSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(ParametersSettingsPanel;initialize;getUIConfiguration,GanttProject,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;correctLabel,GanttProject,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getToolTip,GanttProject,String);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;getChart;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;getChart;getHumanResourceManager,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintCalendar1;getArea,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintLoads;getHumanResourceManager,GanttProject,N);
Relation(ResourceLoadGraphicArea;paintLoads;getUIConfiguration,GanttProject,N);
Relation(ResourceLoadGraphicArea;printResources;getHumanResourceManager,GanttProject,N);
Relation(RolesSettingsPanel;RolesSettingsPanel;correctLabel,GanttProject,String);
Relation(RolesSettingsPanel;applyChanges;setAskForSave,GanttProject,boolean);
Relation(ServerDialog;ServerDialog;correctLabel,GanttProject,String);
Relation(ServerDialog;constructSections;correctLabel,GanttProject,String);
Relation(ServerDialog;valueChanged;correctLabel,GanttProject,String);
Relation(SettingsDialog;SettingsDialog;correctLabel,GanttProject,String);
Relation(SettingsDialog;actionPerformed;restoreOptions,GanttProject,N);
Relation(SettingsDialog;constructSections;correctLabel,GanttProject,String);
Relation(SettingsDialog;valueChanged;correctLabel,GanttProject,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;correctLabel,GanttProject,String);
Relation(TaskAllocationsPanel;constructResourcesPanel;getToolTip,GanttProject,String);
Relation(TaskDependenciesPanel;constructPredecessorsPanel;getToolTip,GanttProject,String);
Relation(TipsDialog;TipsDialog;correctLabel,GanttProject,String);
Relation(TipsDialog;TipsDialog;getOptions,GanttProject,N);
Relation(WelcomeSettingsPanel;WelcomeSettingsPanel;correctLabel,GanttProject,String);
end b270
start b271
Attribute(GregorianTimeUnitStack,DAY_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,HOUR_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,MINUTE_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,MONTH_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,SECOND_FRAMER,DateFrameable,static,private);
Attribute(GregorianTimeUnitStack,myHighestFrameable,DateFrameable,N,private);
Attribute(GregorianTimeUnitStack,myLowestFrameable,DateFrameable,N,private);
Attribute(TimeUnitDateFrameableImpl,myFramer,DateFrameable,N,private);
Attribute(TimeUnitFunctionOfDateImpl,myDirectFrameable,DateFrameable,N,private);
Class(DateFrameable,N,N,public);
Method(DateFrameable,adjustLeft,Date,Y,N,N,package);
Method(DateFrameable,adjustRight,Date,Y,N,N,package);
Method(DateFrameable,jumpLeft,Date,Y,N,N,package);
Method(GregorianTimeUnitStack,calculateHighestFrameableUnit,DateFrameable,Y,N,N,private);
Method(GregorianTimeUnitStack,calculateLowestFrameableUnit,DateFrameable,Y,N,N,private);
Parameter(DateFrameable,adjustLeft,baseDate,Date,declaration);
Parameter(DateFrameable,adjustRight,baseDate,Date,declaration);
Parameter(DateFrameable,jumpLeft,baseDate,Date,declaration);
Parameter(GregorianTimeUnitStack,calculateHighestFrameableUnit,highestFrameableDateFrameable,local);
Parameter(GregorianTimeUnitStack,calculateLowestFrameableUnit,lowestFrameableDateFrameable,local);
Parameter(TimeUnitDateFrameableImpl,TimeUnitDateFrameableImpl,framer,DateFrameable,declaration);
Parameter(TimeUnitFunctionOfDateImpl,TimeUnitFunctionOfDateImpl,framer,DateFrameable,declaration);
Parameter(TimeUnitGraph,createDateFrameableTimeUnit,framer,DateFrameable,declaration);
Parameter(TimeUnitGraph,createTimeUnitFunctionOfDate,framer,DateFrameable,declaration);
Relation(DayTextFormatter;format;adjustLeft,DateFrameable,Date);
Relation(GregorianTimeUnitStack;NcreateDateFrameableTimeUnit,TimeUnitGraph,String-TimeUnit-int-DateFrameable);
Relation(GregorianTimeUnitStack;NcreateTimeUnitFunctionOfDate,TimeUnitGraph,String-TimeUnit-DateFrameable);
Relation(GregorianTimeUnitStack;TimeFrameImpl;adjustLeft,DateFrameable,Date);
Relation(GregorianTimeUnitStack;calculateEndDate;adjustRight,DateFrameable,Date);
Relation(GregorianTimeUnitStack;fillLine;adjustRight,DateFrameable,Date);
Relation(MonthTextFormatter;format;adjustLeft,DateFrameable,Date);
Relation(TimeUnitDateFrameableImpl;adjustLeft;adjustLeft,DateFrameable,Date);
Relation(TimeUnitDateFrameableImpl;adjustRight;adjustRight,DateFrameable,Date);
Relation(TimeUnitDateFrameableImpl;jumpLeft;jumpLeft,DateFrameable,Date);
Relation(TimeUnitFunctionOfDateImpl;getDirectAtomCount;jumpLeft,DateFrameable,Date);
end b271
start b272
Attribute(GanttPanelDate,ddd,GanttDialogDateDay,N,private);
Class(GanttDialogDateDay,N,N,public);
Relation(GanttPanelDate;GanttDialogDateDay;clickFunction,GanttDialogDateDay,int-int);
end b272
start b273
Attribute(TaskDependencyCollectionImpl,myEventDispatcher,EventDispatcher,N,private);
Class(EventDispatcher,N,N,public);
Method(EventDispatcher,fireDependencyAdded,void,Y,N,N,package);
Method(EventDispatcher,fireDependencyRemoved,void,Y,N,N,package);
Parameter(EventDispatcher,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(EventDispatcher,fireDependencyRemoved,dep,TaskDependency,declaration);
Parameter(TaskDependencyCollectionImpl,TaskDependencyCollectionImpl,myEventDispatcher,EventDispatcher,declaration);
Relation(TaskDependencyCollectionImpl;addDependency;fireDependencyAdded,EventDispatcher,TaskDependency);
Relation(TaskDependencyCollectionImpl;delete;fireDependencyRemoved,EventDispatcher,TaskDependency);
end b273
start b274
Class(RangeSearchToKey,N,N,public);
Generalisation(RangeSearchToKey,SearchKey);
Method(RangeSearchToKey,RangeSearchToKey,N,Y,N,N,public);
Parameter(RangeSearchToKey,RangeSearchToKey,task,Task,declaration);
Relation(RangeSearchToKey;RangeSearchToKey;getTaskID,Task,N);
end b274
start b275
Attribute(GanttPDFExport,language,GanttLanguage,static,private);
Attribute(GanttPDFExport,ourTransformerFactory,SAXTransformerFactory,static,private);
Class(GanttPDFExport,N,N,public);
Method(GanttPDFExport,convert2PDF,void,Y,N,static,public);
Method(GanttPDFExport,correct,String,Y,N,static,public);
Method(GanttPDFExport,createConfiguration,void,Y,N,static,private);
Method(GanttPDFExport,createOptions,Options,N,N,static,private);
Method(GanttPDFExport,getHexaColor,String,Y,N,static,private);
Method(GanttPDFExport,getTransformerFactory,SAXTransformerFactory,N,N,static,private);
Method(GanttPDFExport,save,void,Y,N,static,public);
Method(GanttPDFExport,writeResources,String,Y,N,static,private);
Method(GanttPDFExport,writeTasks,String,Y,N,static,private);
Method(GanttPDFExport,writeTriplets,void,Y,N,static,private);
Parameter(GanttPDFExport,convert2PDF,driverDriver,local);
Parameter(GanttPDFExport,convert2PDF,factoryTransformerFactory,local);
Parameter(GanttPDFExport,convert2PDF,ganttXML,StringBuffer,declaration);
Parameter(GanttPDFExport,convert2PDF,loggerLogger,local);
Parameter(GanttPDFExport,convert2PDF,oOptions,local);
Parameter(GanttPDFExport,convert2PDF,outOutputStream,local);
Parameter(GanttPDFExport,convert2PDF,pdf,File,declaration);
Parameter(GanttPDFExport,convert2PDF,resResult,local);
Parameter(GanttPDFExport,convert2PDF,srcSource,local);
Parameter(GanttPDFExport,convert2PDF,transformerTransformer,local);
Parameter(GanttPDFExport,convert2PDF,xslfo,String,declaration);
Parameter(GanttPDFExport,correct,resString,local);
Parameter(GanttPDFExport,correct,s,String,declaration);
Parameter(GanttPDFExport,createConfiguration,attrsAttributesImpl,local);
Parameter(GanttPDFExport,createConfiguration,fontRecords,FontRecord[],declaration);
Parameter(GanttPDFExport,createConfiguration,handler,TransformerHandler,declaration);
Parameter(GanttPDFExport,createConfiguration,nextRecordFontRecord,local);
Parameter(GanttPDFExport,createOptions,fontRecordsFontRecord[],local);
Parameter(GanttPDFExport,createOptions,handlerTransformerHandler,local);
Parameter(GanttPDFExport,createOptions,locatorJDKFontLocator,local);
Parameter(GanttPDFExport,createOptions,outputStreamByteArrayOutputStream,local);
Parameter(GanttPDFExport,createOptions,outputStreamResult,local);
Parameter(GanttPDFExport,createOptions,resultOptions,local);
Parameter(GanttPDFExport,getHexaColor,color,Color,declaration);
Parameter(GanttPDFExport,getHexaColor,outStringBuffer,local);
Parameter(GanttPDFExport,save,area,GanttGraphicArea,declaration);
Parameter(GanttPDFExport,save,bool,GanttExportSettings,declaration);
Parameter(GanttPDFExport,save,dfDateFormat,local);
Parameter(GanttPDFExport,save,ganttProject,IGanttProject,declaration);
Parameter(GanttPDFExport,save,ganttXMLStringBuffer,local);
Parameter(GanttPDFExport,save,pathString,local);
Parameter(GanttPDFExport,save,pdffile,File,declaration);
Parameter(GanttPDFExport,save,rarea,ResourceLoadGraphicArea,declaration);
Parameter(GanttPDFExport,save,resourceManager,HumanResourceManager,declaration);
Parameter(GanttPDFExport,save,tree,GanttTree,declaration);
Parameter(GanttPDFExport,save,xslfo,String,declaration);
Parameter(GanttPDFExport,writeResources,lorArrayList,local);
Parameter(GanttPDFExport,writeResources,outStringBuffer,local);
Parameter(GanttPDFExport,writeResources,pHumanResource,local);
Parameter(GanttPDFExport,writeResources,resMan,HumanResourceManager,declaration);
Parameter(GanttPDFExport,writeTasks,assignmentsResourceAssignment[],local);
Parameter(GanttPDFExport,writeTasks,lotArrayList,local);
Parameter(GanttPDFExport,writeTasks,outStringBuffer,local);
Parameter(GanttPDFExport,writeTasks,tTask,local);
Parameter(GanttPDFExport,writeTasks,tree,GanttTree,declaration);
Parameter(GanttPDFExport,writeTasks,usersSStringBuffer,local);
Parameter(GanttPDFExport,writeTriplets,attrsAttributesImpl,local);
Parameter(GanttPDFExport,writeTriplets,fontTriplets,FontTriplet[],declaration);
Parameter(GanttPDFExport,writeTriplets,handler,TransformerHandler,declaration);
Parameter(GanttPDFExport,writeTriplets,nextFontTriplet,local);
Relation(GanttPDFExport;NgetInstance,GanttLanguage,N);
Relation(GanttPDFExport;convert2PDF;close,OutputStream,N);
Relation(GanttPDFExport;convert2PDF;createOptions,GanttPDFExport,N);
Relation(GanttPDFExport;convert2PDF;getContentHandler,Driver,N);
Relation(GanttPDFExport;convert2PDF;newInstance,TransformerFactory,N);
Relation(GanttPDFExport;convert2PDF;newTransformer,TransformerFactory,Source);
Relation(GanttPDFExport;convert2PDF;printStackTrace,FOPException,N);
Relation(GanttPDFExport;convert2PDF;printStackTrace,TransformerException,N);
Relation(GanttPDFExport;convert2PDF;println,PrintStream,String);
Relation(GanttPDFExport;convert2PDF;setOutputStream,Driver,OutputStream);
Relation(GanttPDFExport;convert2PDF;setRenderer,Driver,int);
Relation(GanttPDFExport;convert2PDF;toString,StringBuffer,N);
Relation(GanttPDFExport;convert2PDF;transform,Transformer,Source-Result);
Relation(GanttPDFExport;correct;replaceAll,String,String-String);
Relation(GanttPDFExport;createConfiguration;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttPDFExport;createConfiguration;clear,AttributesImpl,N);
Relation(GanttPDFExport;createConfiguration;endDocument,ContentHandler,N);
Relation(GanttPDFExport;createConfiguration;endElement,ContentHandler,String-String-String);
Relation(GanttPDFExport;createConfiguration;getFontLocation,FontRecord,N);
Relation(GanttPDFExport;createConfiguration;getFontTriplets,FontRecord,N);
Relation(GanttPDFExport;createConfiguration;getMetricsLocation,FontRecord,N);
Relation(GanttPDFExport;createConfiguration;getPath,URI,N);
Relation(GanttPDFExport;createConfiguration;startDocument,ContentHandler,N);
Relation(GanttPDFExport;createConfiguration;startElement,ContentHandler,String-String-String-Attributes);
Relation(GanttPDFExport;createConfiguration;toString,URI,N);
Relation(GanttPDFExport;createConfiguration;writeTriplets,GanttPDFExport,TransformerHandler-FontTriplet[]);
Relation(GanttPDFExport;createOptions;createConfiguration,GanttPDFExport,TransformerHandler-FontRecord[]);
Relation(GanttPDFExport;createOptions;getFontRecords,JDKFontLocator,N);
Relation(GanttPDFExport;createOptions;getTransformerFactory,GanttPDFExport,N);
Relation(GanttPDFExport;createOptions;newTransformerHandler,SAXTransformerFactory,N);
Relation(GanttPDFExport;createOptions;printStackTrace,Throwable,N);
Relation(GanttPDFExport;createOptions;printStackTrace,TransformerException,N);
Relation(GanttPDFExport;createOptions;println,PrintStream,String);
Relation(GanttPDFExport;createOptions;setResult,TransformerHandler,Result);
Relation(GanttPDFExport;createOptions;toByteArray,ByteArrayOutputStream,N);
Relation(GanttPDFExport;createOptions;toString,ByteArrayOutputStream,N);
Relation(GanttPDFExport;getHexaColor;append,StringBuffer,String);
Relation(GanttPDFExport;getHexaColor;getBlue,Color,N);
Relation(GanttPDFExport;getHexaColor;getGreen,Color,N);
Relation(GanttPDFExport;getHexaColor;getRed,Color,N);
Relation(GanttPDFExport;getHexaColor;toHexString,Integer,int);
Relation(GanttPDFExport;getHexaColor;toString,StringBuffer,N);
Relation(GanttPDFExport;getTransformerFactory;newInstance,TransformerFactory,N);
Relation(GanttPDFExport;save;append,StringBuffer,String);
Relation(GanttPDFExport;save;convert2PDF,GanttPDFExport,StringBuffer-File-String);
Relation(GanttPDFExport;save;correct,GanttPDFExport,String);
Relation(GanttPDFExport;save;correctLabel,GanttProject,String);
Relation(GanttPDFExport;save;export,GanttGraphicArea,File-GanttExportSettings-String);
Relation(GanttPDFExport;save;export,ResourceLoadGraphicArea,File-String-GanttExportSettings);
Relation(GanttPDFExport;save;format,DateFormat,Date);
Relation(GanttPDFExport;save;getDateTimeInstance,DateFormat,int-int-Locale);
Relation(GanttPDFExport;save;getDefault,Locale,N);
Relation(GanttPDFExport;save;getDescription,IGanttProject,N);
Relation(GanttPDFExport;save;getOrganization,IGanttProject,N);
Relation(GanttPDFExport;save;getParent,File,N);
Relation(GanttPDFExport;save;getProjectName,IGanttProject,N);
Relation(GanttPDFExport;save;getProperty,System,String);
Relation(GanttPDFExport;save;getText,GanttLanguage,String);
Relation(GanttPDFExport;save;getWebLink,IGanttProject,N);
Relation(GanttPDFExport;save;length,String,N);
Relation(GanttPDFExport;save;println,PrintStream,String);
Relation(GanttPDFExport;save;writeResources,GanttPDFExport,HumanResourceManager);
Relation(GanttPDFExport;save;writeTasks,GanttPDFExport,GanttTree);
Relation(GanttPDFExport;writeResources;append,StringBuffer,String);
Relation(GanttPDFExport;writeResources;correct,GanttPDFExport,String);
Relation(GanttPDFExport;writeResources;get,ArrayList,int);
Relation(GanttPDFExport;writeResources;getMail,HumanResource,N);
Relation(GanttPDFExport;writeResources;getName,Role,N);
Relation(GanttPDFExport;writeResources;getPhone,HumanResource,N);
Relation(GanttPDFExport;writeResources;getResources,HumanResourceManager,N);
Relation(GanttPDFExport;writeResources;getRole,HumanResource,N);
Relation(GanttPDFExport;writeResources;length,String,N);
Relation(GanttPDFExport;writeResources;size,ArrayList,N);
Relation(GanttPDFExport;writeResources;toString,ProjectResource,N);
Relation(GanttPDFExport;writeResources;toString,StringBuffer,N);
Relation(GanttPDFExport;writeTasks;append,StringBuffer,String);
Relation(GanttPDFExport;writeTasks;correct,GanttPDFExport,String);
Relation(GanttPDFExport;writeTasks;get,ArrayList,int);
Relation(GanttPDFExport;writeTasks;getAllTasks,GanttTree,N);
Relation(GanttPDFExport;writeTasks;getAssignments,Task,N);
Relation(GanttPDFExport;writeTasks;getColor,Task,N);
Relation(GanttPDFExport;writeTasks;getCompletionPercentage,Task,N);
Relation(GanttPDFExport;writeTasks;getEnd,Task,N);
Relation(GanttPDFExport;writeTasks;getHexaColor,GanttPDFExport,Color);
Relation(GanttPDFExport;writeTasks;getManager,Task,N);
Relation(GanttPDFExport;writeTasks;getName,ProjectResource,N);
Relation(GanttPDFExport;writeTasks;getNotes,Task,N);
Relation(GanttPDFExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttPDFExport;writeTasks;getRootTask,TaskManager,N);
Relation(GanttPDFExport;writeTasks;getStart,Task,N);
Relation(GanttPDFExport;writeTasks;getUserObject,DefaultMutableTreeNode,N);
Relation(GanttPDFExport;writeTasks;isMilestone,Task,N);
Relation(GanttPDFExport;writeTasks;length,String,N);
Relation(GanttPDFExport;writeTasks;size,ArrayList,N);
Relation(GanttPDFExport;writeTasks;toString,Object,N);
Relation(GanttPDFExport;writeTasks;toString,StringBuffer,N);
Relation(GanttPDFExport;writeTriplets;addAttribute,AttributesImpl,String-String-String-String-String);
Relation(GanttPDFExport;writeTriplets;clear,AttributesImpl,N);
Relation(GanttPDFExport;writeTriplets;endElement,ContentHandler,String-String-String);
Relation(GanttPDFExport;writeTriplets;getName,FontTriplet,N);
Relation(GanttPDFExport;writeTriplets;isBold,FontTriplet,N);
Relation(GanttPDFExport;writeTriplets;isItalic,FontTriplet,N);
Relation(GanttPDFExport;writeTriplets;startElement,ContentHandler,String-String-String-Attributes);
Relation(PDFExportProcessor;doExport;save,GanttPDFExport,File-IGanttProject-HumanResourceManager-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings-String);
end b275
start b276
Attribute(GanttTaskPropertiesBean,shapeComboBox,JPaintCombo,N,package);
Attribute(JPaintCombo,myList,Paint[],N,private);
Attribute(Shape,backgroundCombo,JPaintCombo,N,protected);
Attribute(Shape,foregroundCombo,JPaintCombo,N,protected);
Attribute(Shape,patternCombo,JPaintCombo,N,protected);
Class(JPaintCombo,N,N,public);
Generalisation(JPaintCombo,JComboBox);
Method(JPaintCombo,JPaintCombo,N,Y,N,N,public);
Method(JPaintCombo,getSelectedPaint,Paint,N,N,N,public);
Parameter(JPaintCombo,JPaintCombo,list,Paint[],declaration);
Relation(GanttTaskPropertiesBean;getReturnTask;getSelectedPaint,JPaintCombo,N);
Relation(JPaintCombo;JPaintCombo;setRenderer,JComboBox,ListCellRenderer);
Relation(JPaintCombo;getSelectedPaint;getSelectedItem,JComboBox,N);
Relation(Shape;Shape;getSelectedPaint,JPaintCombo,N);
Relation(Shape;actionPerformed;getSelectedPaint,JPaintCombo,N);
end b276
start b277
Attribute(GanttGraphicArea,arrow,Arrow,N,private);
Class(Arrow,N,N,public);
Relation(GanttGraphicArea;GanttGraphicArea;changePoint2,Arrow,int-int);
Relation(GanttGraphicArea;GanttGraphicArea;getDraw,Arrow,N);
Relation(GanttGraphicArea;GanttGraphicArea;setDraw,Arrow,boolean);
Relation(GanttGraphicArea;detectPosition;setDraw,Arrow,boolean);
Relation(GanttGraphicArea;paintComponent;paint,Arrow,Graphics);
end b277
start b278
Attribute(ResourceEvent,myManager,ResourceManager,N,private);
Attribute(ResourceEvent,myResource,ProjectResource,N,private);
Attribute(ResourceEvent,myResources,ProjectResource[],N,private);
Class(ResourceEvent,N,N,public);
Generalisation(ResourceEvent,EventObject);
Method(ResourceEvent,ResourceEvent,N,Y,N,N,public);
Method(ResourceEvent,getManager,ResourceManager,N,N,N,public);
Method(ResourceEvent,getResource,ProjectResource,N,N,N,public);
Method(ResourceEvent,getResources,ProjectResource[],N,N,N,public);
Parameter(GanttProject,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttProject,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(HumanResourceManager,fireResourceAdded,eResourceEvent,local);
Parameter(HumanResourceManager,fireResourcesRemoved,eResourceEvent,local);
Parameter(ResourceEvent,ResourceEvent,mgr,ResourceManager,declaration);
Parameter(ResourceEvent,ResourceEvent,resource,ProjectResource,declaration);
Parameter(ResourceEvent,ResourceEvent,resources,ProjectResource[],declaration);
Parameter(ResourceView,resourceAdded,event,ResourceEvent,declaration);
Parameter(ResourceView,resourcesRemoved,event,ResourceEvent,declaration);
Relation(GanttResourcePanel;resourceAdded;getResource,ResourceEvent,N);
Relation(GanttResourcePanel;resourcesRemoved;getResources,ResourceEvent,N);
Relation(HumanResourceManager;fireResourceAdded;resourceAdded,ResourceView,ResourceEvent);
Relation(HumanResourceManager;fireResourcesRemoved;resourcesRemoved,ResourceView,ResourceEvent);
end b278
start b279
Class(DefaultTagHandler,N,N,private);
Relation(GanttXMLOpen;startElement;determineColor,DefaultTagHandler,String);
end b279
start b280
Attribute(ConstraintImpl,myDependency,TaskDependency,N,private);
Attribute(ConstraintImpl,myID,int,N,private);
Attribute(ConstraintImpl,myName,String,N,private);
Class(ConstraintImpl,N,N,public);
Generalisation(FinishFinishConstraintImpl,ConstraintImpl);
Generalisation(FinishStartConstraintImpl,ConstraintImpl);
Generalisation(StartFinishConstraintImpl,ConstraintImpl);
Generalisation(StartStartConstraintImpl,ConstraintImpl);
Method(ConstraintImpl,ConstraintImpl,N,Y,N,N,public);
Method(ConstraintImpl,getDependency,TaskDependency,N,N,N,protected);
Method(ConstraintImpl,getID,int,N,N,N,public);
Method(ConstraintImpl,getName,String,N,N,N,public);
Method(ConstraintImpl,setTaskDependency,void,Y,N,N,public);
Method(ConstraintImpl,toString,String,N,N,N,public);
Parameter(ConstraintImpl,ConstraintImpl,myID,int,declaration);
Parameter(ConstraintImpl,ConstraintImpl,myName,String,declaration);
Parameter(ConstraintImpl,setTaskDependency,dependency,TaskDependency,declaration);
Relation(ConstraintImpl;toString;getName,ConstraintImpl,N);
Relation(FinishFinishConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(FinishStartConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(StartFinishConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
Relation(StartStartConstraintImpl;getCollision;getDependency,ConstraintImpl,N);
end b280
start b281
Attribute(ProjectNamePage,myProjectSettingsPanel,ProjectSettingsPanel,N,private);
Attribute(ProjectSettingsPanel,myProject,IGanttProject,N,private);
Attribute(ProjectSettingsPanel,taDescr,JTextArea,N,package);
Attribute(ProjectSettingsPanel,tfName,JTextField,N,package);
Attribute(ProjectSettingsPanel,tfOrganization,JTextField,N,package);
Attribute(ProjectSettingsPanel,tfWebLink,JTextField,N,package);
Class(ProjectSettingsPanel,N,N,public);
Generalisation(ProjectSettingsPanel,GeneralOptionPanel);
Method(ProjectSettingsPanel,ProjectSettingsPanel,N,Y,N,N,public);
Method(ProjectSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(ProjectSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(ProjectSettingsPanel,getProjectDescription,String,N,N,N,public);
Method(ProjectSettingsPanel,getProjectName,String,N,N,N,public);
Method(ProjectSettingsPanel,getProjectOrganization,String,N,N,N,public);
Method(ProjectSettingsPanel,getWebLink,String,N,N,N,public);
Method(ProjectSettingsPanel,initialize,void,N,N,N,public);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,bWebJButton,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,descrPanelJPanel,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,gdiGanttDialogInfo,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,namePanelJPanel,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,orgaPanelJPanel,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,owner,Frame,declaration);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,project,IGanttProject,declaration);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,projectPanelJPanel,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,scpAreaJScrollPane,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,vbprojectBox,local);
Parameter(ProjectSettingsPanel,ProjectSettingsPanel,webPanelJPanel,local);
Parameter(ProjectSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(ProjectSettingsPanel,applyChanges,askForApply,boolean,declaration);
Relation(ProjectNamePage;setActive;applyChanges,ProjectSettingsPanel,boolean);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;add,Container,Component);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;add,Container,Component-Object);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;correctLabel,GanttProject,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;createVerticalBox,Box,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;displayURL,BrowserControl,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getClass,Object,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getInstance,GanttLanguage,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getResource,Class<>,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getText,GanttLanguage,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;getToolTip,GanttProject,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;setLineWrap,JTextArea,boolean);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;setToolTipText,JComponent,String);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;setWrapStyleWord,JTextArea,boolean);
Relation(ProjectSettingsPanel;ProjectSettingsPanel;show,Dialog,N);
Relation(ProjectSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(ProjectSettingsPanel;applyChanges;equals,String,Object);
Relation(ProjectSettingsPanel;applyChanges;getDescription,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getOrganization,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getProjectDescription,ProjectSettingsPanel,N);
Relation(ProjectSettingsPanel;applyChanges;getProjectName,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getProjectName,ProjectSettingsPanel,N);
Relation(ProjectSettingsPanel;applyChanges;getProjectOrganization,ProjectSettingsPanel,N);
Relation(ProjectSettingsPanel;applyChanges;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;applyChanges;getWebLink,IGanttProject,N);
Relation(ProjectSettingsPanel;applyChanges;getWebLink,ProjectSettingsPanel,N);
Relation(ProjectSettingsPanel;applyChanges;setDescription,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setOrganization,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setProjectName,IGanttProject,String);
Relation(ProjectSettingsPanel;applyChanges;setWebLink,IGanttProject,String);
Relation(ProjectSettingsPanel;getProjectDescription;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;getProjectName;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;getProjectOrganization;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;getWebLink;getText,JTextComponent,N);
Relation(ProjectSettingsPanel;initialize;getDescription,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getOrganization,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getProjectName,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;getWebLink,IGanttProject,N);
Relation(ProjectSettingsPanel;initialize;setText,JTextComponent,String);
end b281
start b282
Class(MutableResourceAssignmentCollection,N,N,package);
Method(MutableResourceAssignmentCollection,addAssignment,ResourceAssignment,Y,N,N,package);
Method(MutableResourceAssignmentCollection,deleteAssignment,void,Y,N,N,package);
Parameter(MutableResourceAssignmentCollection,addAssignment,resource,ProjectResource,declaration);
Parameter(MutableResourceAssignmentCollection,deleteAssignment,resource,ProjectResource,declaration);
Relation(AllocationTagHandler;loadAllocation;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(ResourcesTableModel;createAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
Relation(ResourcesTableModel;updateAssignment;addAssignment,MutableResourceAssignmentCollection,ProjectResource);
end b282
start b283
Attribute(HttpDocument,httpURL,HttpURL,N,private);
Attribute(HttpDocument,lastError,String,N,private);
Attribute(HttpDocument,lockDAVMinutes,int,static,private);
Attribute(HttpDocument,locked,boolean,N,private);
Attribute(HttpDocument,malformedURL,boolean,N,private);
Attribute(HttpDocument,url,String,N,private);
Attribute(HttpDocument,webdavResource,WebdavResource,N,private);
Class(HttpDocument,N,N,public);
Generalisation(HttpDocument,AbstractURLDocument);
Method(HttpDocument,HttpDocument,N,Y,N,N,public);
Method(HttpDocument,acquireLock,boolean,N,N,N,public);
Method(HttpDocument,canRead,boolean,N,N,N,public);
Method(HttpDocument,canWrite,boolean,N,N,N,public);
Method(HttpDocument,getDescription,String,N,N,N,public);
Method(HttpDocument,getInputStream,InputStream,N,N,N,public);
Method(HttpDocument,getLastError,String,N,N,N,public);
Method(HttpDocument,getOutputStream,OutputStream,N,N,N,public);
Method(HttpDocument,getPassword,String,N,N,N,public);
Method(HttpDocument,getPath,String,N,N,N,public);
Method(HttpDocument,getURLPath,String,N,N,N,public);
Method(HttpDocument,getUsername,String,N,N,N,public);
Method(HttpDocument,getWebdavResource,WebdavResource,N,N,N,private);
Method(HttpDocument,isValidForMRU,boolean,N,N,N,public);
Method(HttpDocument,releaseLock,void,N,N,N,public);
Method(HttpDocument,setLockDAVMinutes,void,Y,N,static,public);
Method(HttpDocument,setUserInfo,void,Y,N,N,public);
Parameter(HttpDocument,HttpDocument,pass,String,declaration);
Parameter(HttpDocument,HttpDocument,url,String,declaration);
Parameter(HttpDocument,HttpDocument,user,String,declaration);
Parameter(HttpDocument,acquireLock,lockSecondsint,local);
Parameter(HttpDocument,acquireLock,userNameString,local);
Parameter(HttpDocument,canRead,resWebdavResource,local);
Parameter(HttpDocument,canWrite,currentHierPathString,local);
Parameter(HttpDocument,canWrite,parentResWebdavResource,local);
Parameter(HttpDocument,canWrite,parentURLHttpURL,local);
Parameter(HttpDocument,canWrite,passString,local);
Parameter(HttpDocument,canWrite,resWebdavResource,local);
Parameter(HttpDocument,canWrite,userString,local);
Parameter(HttpDocument,getDescription,descriptionString,local);
Parameter(HttpDocument,setLockDAVMinutes,i,int,declaration);
Parameter(HttpDocument,setUserInfo,pass,String,declaration);
Parameter(HttpDocument,setUserInfo,user,String,declaration);
Relation(GanttProject;GanttProject;setLockDAVMinutes,HttpDocument,int);
Relation(HttpDocument;HttpDocument;getMessage,Throwable,N);
Relation(HttpDocument;HttpDocument;getPassword,HttpURL,N);
Relation(HttpDocument;HttpDocument;getUser,HttpURL,N);
Relation(HttpDocument;HttpDocument;length,String,N);
Relation(HttpDocument;HttpDocument;setUserinfo,HttpURL,String-String);
Relation(HttpDocument;acquireLock;getMessage,Throwable,N);
Relation(HttpDocument;acquireLock;getProperty,System,String);
Relation(HttpDocument;acquireLock;getReasonCode,URIException,N);
Relation(HttpDocument;acquireLock;getUser,HttpURL,N);
Relation(HttpDocument;acquireLock;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;acquireLock;lockMethod,WebdavResource,String-int);
Relation(HttpDocument;acquireLock;printStackTrace,Throwable,N);
Relation(HttpDocument;acquireLock;println,PrintStream,Object);
Relation(HttpDocument;acquireLock;println,PrintStream,String);
Relation(HttpDocument;canRead;exists,WebdavResource,N);
Relation(HttpDocument;canRead;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;canRead;isCollection,WebdavResource,N);
Relation(HttpDocument;canWrite;endsWith,String,String);
Relation(HttpDocument;canWrite;exists,WebdavResource,N);
Relation(HttpDocument;canWrite;getCurrentHierPath,URI,N);
Relation(HttpDocument;canWrite;getPassword,HttpURL,N);
Relation(HttpDocument;canWrite;getReasonCode,URIException,N);
Relation(HttpDocument;canWrite;getUser,HttpURL,N);
Relation(HttpDocument;canWrite;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;canWrite;isCollection,WebdavResource,N);
Relation(HttpDocument;canWrite;setPath,URI,String);
Relation(HttpDocument;canWrite;setProperties,WebdavResource,int);
Relation(HttpDocument;canWrite;setUserinfo,HttpURL,String-String);
Relation(HttpDocument;canWrite;toString,URI,N);
Relation(HttpDocument;getDescription;toString,URI,N);
Relation(HttpDocument;getInputStream;getMessage,Throwable,N);
Relation(HttpDocument;getInputStream;getMethodData,WebdavResource,N);
Relation(HttpDocument;getInputStream;getReasonCode,URIException,N);
Relation(HttpDocument;getInputStream;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;getOutputStream;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;getPassword;getPassword,HttpURL,N);
Relation(HttpDocument;getPath;getDescription,HttpDocument,N);
Relation(HttpDocument;getURLPath;getPath,HttpDocument,N);
Relation(HttpDocument;getUsername;getUser,HttpURL,N);
Relation(HttpDocument;getWebdavResource;getMessage,Throwable,N);
Relation(HttpDocument;getWebdavResource;getReasonCode,URIException,N);
Relation(HttpDocument;getWebdavResource;setFollowRedirects,WebdavResource,boolean);
Relation(HttpDocument;releaseLock;getMessage,Throwable,N);
Relation(HttpDocument;releaseLock;getReasonCode,URIException,N);
Relation(HttpDocument;releaseLock;getWebdavResource,HttpDocument,N);
Relation(HttpDocument;releaseLock;printStackTrace,Throwable,N);
Relation(HttpDocument;releaseLock;println,PrintStream,Object);
Relation(HttpDocument;releaseLock;println,PrintStream,String);
Relation(HttpDocument;releaseLock;unlockMethod,WebdavResource,N);
Relation(HttpDocument;setUserInfo;getMessage,Throwable,N);
Relation(HttpDocument;setUserInfo;setUserinfo,HttpURL,String-String);
Relation(ParametersSettingsPanel;applyChanges;setLockDAVMinutes,HttpDocument,int);
end b283
start b284
Attribute(GanttProject,bDelete,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bDown,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bExport,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bImport,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bInd,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bLink,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNew,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNewTask,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bNext,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bOpen,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bPrev,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bPrint,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bProperties,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bSave,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bSaveAs,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUnind,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUnlink,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bUp,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomFit,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomIn,TestGanttRolloverButton,N,public);
Attribute(GanttProject,bZoomOut,TestGanttRolloverButton,N,public);
Attribute(TestGanttRolloverButton,_iconOff,Icon,N,protected);
Attribute(TestGanttRolloverButton,_iconOn,Icon,N,protected);
Attribute(TestGanttRolloverButton,c,AlphaComposite,static,private);
Class(TestGanttRolloverButton,N,N,public);
Generalisation(TestGanttRolloverButton,JButton);
Generalisation(TestGanttRolloverButton,MouseAdapter);
Method(TestGanttRolloverButton,TestGanttRolloverButton,N,N,N,N,public);
Method(TestGanttRolloverButton,TestGanttRolloverButton,N,Y,N,N,public);
Method(TestGanttRolloverButton,isOpaque,boolean,N,N,N,public);
Method(TestGanttRolloverButton,mouseEntered,void,Y,N,N,public);
Method(TestGanttRolloverButton,mouseExited,void,Y,N,N,public);
Method(TestGanttRolloverButton,paint,void,Y,N,N,public);
Method(TestGanttRolloverButton,setDefaultIcon,void,Y,N,N,public);
Method(TestGanttRolloverButton,setEnabled,void,Y,N,N,public);
Method(TestGanttRolloverButton,setIcon,void,Y,N,N,public);
Parameter(GanttDialogProperties,actionPerformed,buttonTestGanttRolloverButton,local);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,action,Action,declaration);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,icon,Icon,declaration);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,iconOff,Icon,declaration);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,iconOn,Icon,declaration);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,smallIconIcon,local);
Parameter(TestGanttRolloverButton,TestGanttRolloverButton,text,String,declaration);
Parameter(TestGanttRolloverButton,mouseEntered,e,MouseEvent,declaration);
Parameter(TestGanttRolloverButton,mouseExited,e,MouseEvent,declaration);
Parameter(TestGanttRolloverButton,paint,g,Graphics,declaration);
Parameter(TestGanttRolloverButton,paint,g2Graphics2D,local);
Parameter(TestGanttRolloverButton,setDefaultIcon,iconOn,Icon,declaration);
Parameter(TestGanttRolloverButton,setEnabled,b,boolean,declaration);
Parameter(TestGanttRolloverButton,setIcon,iconOff,Icon,declaration);
Parameter(TestGanttRolloverButton,setIcon,iconOn,Icon,declaration);
Relation(GanttGraphicArea;GanttGraphicArea;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;GanttProject;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;addButtons;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;applyButtonOptions;setDefaultIcon,TestGanttRolloverButton,Icon);
Relation(GanttProject;openDocument;setEnabled,TestGanttRolloverButton,boolean);
Relation(GanttProject;setAskForSave;setEnabled,TestGanttRolloverButton,boolean);
Relation(ResourceLoadGraphicArea;ResourceLoadGraphicArea;setEnabled,TestGanttRolloverButton,boolean);
Relation(TestGanttRolloverButton;NgetInstance,AlphaComposite,int-float);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;addMouseListener,Component,MouseListener);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;getIconOnMouseOver,RolloverAction,N);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;getValue,Action,String);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setAction,AbstractButton,Action);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setBorder,JComponent,Border);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setBorderPainted,AbstractButton,boolean);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setHorizontalTextPosition,AbstractButton,int);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setIcon,AbstractButton,Icon);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setMargin,AbstractButton,Insets);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setRequestFocusEnabled,JComponent,boolean);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setText,AbstractButton,String);
Relation(TestGanttRolloverButton;TestGanttRolloverButton;setVerticalTextPosition,AbstractButton,int);
Relation(TestGanttRolloverButton;mouseEntered;isEnabled,Component,N);
Relation(TestGanttRolloverButton;mouseEntered;setBorderPainted,AbstractButton,boolean);
Relation(TestGanttRolloverButton;mouseEntered;setIcon,AbstractButton,Icon);
Relation(TestGanttRolloverButton;mouseExited;setBorderPainted,AbstractButton,boolean);
Relation(TestGanttRolloverButton;mouseExited;setIcon,AbstractButton,Icon);
Relation(TestGanttRolloverButton;paint;isEnabled,Component,N);
Relation(TestGanttRolloverButton;paint;setComposite,Graphics2D,Composite);
Relation(TestGanttRolloverButton;setDefaultIcon;setIcon,AbstractButton,Icon);
Relation(TestGanttRolloverButton;setEnabled;repaint,Component,N);
Relation(TestGanttRolloverButton;setEnabled;setBorderPainted,AbstractButton,boolean);
Relation(TestGanttRolloverButton;setIcon;setIcon,AbstractButton,Icon);
end b284
start b285
Class(Text,N,static,package);
Method(GraphicPrimitiveContainer,createText,Text,Y,N,N,package);
Parameter(ChartHeaderImpl,createFrames,nextTextText,local);
Parameter(ChartHeaderImpl,createFrames,textText,local);
Parameter(GraphicPrimitiveContainer,createText,resultText,local);
Parameter(GraphicPrimitiveContainer,paint,nextText,local);
Relation(ChartHeaderImpl;createFrames;setFont,Text,Font);
end b285
start b286
Attribute(NewProjectWizardWindow,myI18n,I18N,N,private);
Class(NewProjectWizardWindow,N,N,public);
Generalisation(NewProjectWizardWindow,WizardImpl);
Method(NewProjectWizardWindow,NewProjectWizardWindow,N,Y,N,N,public);
Method(NewProjectWizardWindow,addProjectNamePage,void,Y,N,N,public);
Method(NewProjectWizardWindow,addRoleSetPage,void,Y,N,N,public);
Parameter(NewProjectWizard,createNewProject,newProjectWizardNewProjectWizardWindow,local);
Parameter(NewProjectWizardWindow,NewProjectWizardWindow,frame,JFrame,declaration);
Parameter(NewProjectWizardWindow,NewProjectWizardWindow,i18n,I18N,declaration);
Parameter(NewProjectWizardWindow,addProjectNamePage,project,IGanttProject,declaration);
Parameter(NewProjectWizardWindow,addProjectNamePage,projectNamePageWizardPage,local);
Parameter(NewProjectWizardWindow,addRoleSetPage,roleSetPageWizardPage,local);
Parameter(NewProjectWizardWindow,addRoleSetPage,roleSets,RoleSet[],declaration);
Relation(NewProjectWizard;createNewProject;addProjectNamePage,NewProjectWizardWindow,IGanttProject);
Relation(NewProjectWizard;createNewProject;addRoleSetPage,NewProjectWizardWindow,RoleSet[]);
Relation(NewProjectWizardWindow;NewProjectWizardWindow;getNewProjectWizardWindowTitle,I18N,N);
Relation(NewProjectWizardWindow;addProjectNamePage;addPage,WizardImpl,WizardPage);
Relation(NewProjectWizardWindow;addProjectNamePage;getOwner,Window,N);
Relation(NewProjectWizardWindow;addRoleSetPage;addPage,WizardImpl,WizardPage);
end b286
start b287
Attribute(GanttProject,EMPTY,ExportFileInfo,static,public);
Class(ExportFileInfo,N,static,private);
Method(GanttProject,selectExportFile,ExportFileInfo,Y,N,N,private);
Parameter(GanttProject,doExport,info,ExportFileInfo,declaration);
Parameter(GanttProject,export,infoExportFileInfo,local);
Parameter(GanttProject,exportCSV,infoExportFileInfo,local);
Parameter(GanttProject,exportJPG,infoExportFileInfo,local);
Parameter(GanttProject,exportPDF,infoExportFileInfo,local);
Parameter(GanttProject,exportPNG,infoExportFileInfo,local);
Parameter(GanttProject,exportProject,infoExportFileInfo,local);
Parameter(GanttProject,exportXFIG,infoExportFileInfo,local);
Parameter(GanttProject,selectExportFile,resultExportFileInfo,local);
Relation(GanttProject;export;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportCSV;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportJPG;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportPDF;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportPNG;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportProject;doExport,GanttProject,ExportFileInfo);
Relation(GanttProject;exportXFIG;doExport,GanttProject,ExportFileInfo);
end b287
start b288
Class(GanttHTMLFileFilter,N,N,public);
Generalisation(GanttHTMLFileFilter,FileFilter);
Method(GanttHTMLFileFilter,accept,boolean,Y,N,N,public);
Method(GanttHTMLFileFilter,getDescription,String,N,N,N,public);
Parameter(GanttHTMLFileFilter,accept,f,File,declaration);
Relation(GanttHTMLFileFilter;accept;endsWith,String,String);
Relation(GanttHTMLFileFilter;accept;getName,File,N);
Relation(GanttHTMLFileFilter;accept;isDirectory,File,N);
Relation(GanttHTMLFileFilter;accept;toLowerCase,String,N);
Relation(GanttHTMLFileFilter;getDescription;getInstance,GanttLanguage,N);
Relation(GanttHTMLFileFilter;getDescription;getText,GanttLanguage,String);
end b288
start b289
Attribute(GanttResourcePanel,model,GanttTableModel,N,package);
Class(GanttTableModel,N,N,public);
Relation(GanttResourcePanel;GanttTableModel;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;deleteHuman;deleteRow,GanttTableModel,int);
Relation(GanttResourcePanel;downResource;moveDown,GanttTableModel,int);
Relation(GanttResourcePanel;newHuman;addRow,GanttTableModel,HumanResource);
Relation(GanttResourcePanel;propertiesHuman;updateRow,GanttTableModel,int-HumanResource);
Relation(GanttResourcePanel;refresh;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;reset;reset,GanttTableModel,N);
Relation(GanttResourcePanel;resourcesRemoved;deleteRows,GanttTableModel,ProjectResource[]);
Relation(GanttResourcePanel;setPeople;changePeople,GanttTableModel,ArrayList);
Relation(GanttResourcePanel;upResource;moveUp,GanttTableModel,int);
end b289
start b290
Attribute(GregorianTimeUnitStack,myFirstItem,LineItem,N,package);
Attribute(GregorianTimeUnitStack,myNextItem,LineItem,N,package);
Class(LineItem,N,static,private);
Method(GregorianTimeUnitStack,createLineItem,LineItem,Y,N,N,private);
Method(GregorianTimeUnitStack,getLineItem,LineItem,Y,N,N,package);
Parameter(GregorianTimeUnitStack,fillLine,curItemLineItem,local);
Parameter(GregorianTimeUnitStack,fillLine,itemLineItem,local);
Parameter(GregorianTimeUnitStack,fillLine,newItemLineItem,local);
Parameter(GregorianTimeUnitStack,fullDump,nextLineItem,local);
Parameter(GregorianTimeUnitStack,getLineItem,resultLineItem,local);
Parameter(GregorianTimeUnitStack,getUnitCount,higherItem,LineItem,declaration);
Parameter(GregorianTimeUnitStack,getUnitText,lineItemLineItem,local);
Relation(GregorianTimeUnitStack;fillLine;getUnitCount,TimeFrameImpl,LineHeader-LineHeader-LineItem);
end b290
start b291
Class(GanttTreeDropListener,N,N,private);
Relation(GanttTree;dragEnter;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
Relation(GanttTree;dragOver;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
Relation(GanttTree;drop;isDropAcceptable,GanttTreeDropListener,DropTargetDropEvent);
Relation(GanttTree;dropActionChanged;isDragAcceptable,GanttTreeDropListener,DropTargetDragEvent);
end b291
start b292
Attribute(GregorianTimeUnitStack,myLineHeader,LineHeader,N,private);
Attribute(GregorianTimeUnitStack,myNextHeader,LineHeader,N,private);
Class(LineHeader,N,static,private);
Method(GregorianTimeUnitStack,calculateLines,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,createHeader,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,getLineHeader,LineHeader,Y,N,N,private);
Method(GregorianTimeUnitStack,next,LineHeader,N,N,N,package);
Parameter(GregorianTimeUnitStack,append,next,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,calculateLines,curHeaderLineHeader,local);
Parameter(GregorianTimeUnitStack,calculateLines,lastHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,fillLine,header,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,fillLine,higherHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,getLineHeader,resultLineHeader,local);
Parameter(GregorianTimeUnitStack,getUnitCount,header,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,higherHeader,LineHeader,declaration);
Parameter(GregorianTimeUnitStack,getUnitCount,lineHeaderLineHeader,local);
Parameter(GregorianTimeUnitStack,getUnitText,lineHeaderLineHeader,local);
Relation(GregorianTimeUnitStack;TimeFrameImpl;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;append,LineHeader,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;calculateLines,TimeFrameImpl,LineHeader);
Relation(GregorianTimeUnitStack;calculateLines;fillLine,TimeFrameImpl,LineHeader-LineHeader);
Relation(GregorianTimeUnitStack;fillLine;fullDump,LineHeader,N);
Relation(GregorianTimeUnitStack;fillLine;getUnitCount,TimeFrameImpl,LineHeader-LineHeader-LineItem);
Relation(GregorianTimeUnitStack;fullDump;getItemCount,LineHeader,N);
Relation(GregorianTimeUnitStack;fullDump;getLineItem,LineHeader,int);
Relation(GregorianTimeUnitStack;fullDump;toString,LineHeader,N);
Relation(GregorianTimeUnitStack;getLineHeader;next,LineHeader,N);
Relation(GregorianTimeUnitStack;getUnitCount;getItemCount,LineHeader,N);
Relation(GregorianTimeUnitStack;getUnitText;getLineItem,LineHeader,int);
end b292